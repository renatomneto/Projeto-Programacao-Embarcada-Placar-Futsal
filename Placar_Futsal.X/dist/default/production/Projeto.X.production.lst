

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Mon Dec 07 13:50:08 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    55                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    57  0000                     
    58                           ; Version 2.20
    59                           ; Generated 12/02/2020 GMT
    60                           ; 
    61                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18F4520 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     
    93                           	psect	idataBANK0
    94  0064FE                     __pidataBANK0:
    95                           	callstack 0
    96                           
    97                           ;initializer for adidas_logo@F2458
    98  0064FE  00                 	db	0
    99  0064FF  00                 	db	0
   100  006500  00                 	db	0
   101  006501  10                 	db	16
   102  006502  18                 	db	24
   103  006503  1C                 	db	28
   104  006504  1E                 	db	30
   105  006505  0F                 	db	15
   106  006506  04                 	db	4
   107  006507  04                 	db	4
   108  006508  0E                 	db	14
   109  006509  0E                 	db	14
   110  00650A  1F                 	db	31
   111  00650B  1F                 	db	31
   112  00650C  1F                 	db	31
   113  00650D  1F                 	db	31
   114  00650E  00                 	db	0
   115  00650F  00                 	db	0
   116  006510  00                 	db	0
   117  006511  01                 	db	1
   118  006512  03                 	db	3
   119  006513  07                 	db	7
   120  006514  0F                 	db	15
   121  006515  1E                 	db	30
   122  006516  07                 	db	7
   123  006517  00                 	db	0
   124  006518  03                 	db	3
   125  006519  00                 	db	0
   126  00651A  00                 	db	0
   127  00651B  00                 	db	0
   128  00651C  00                 	db	0
   129  00651D  00                 	db	0
   130  00651E  1F                 	db	31
   131  00651F  00                 	db	0
   132  006520  1F                 	db	31
   133  006521  00                 	db	0
   134  006522  1F                 	db	31
   135  006523  0E                 	db	14
   136  006524  00                 	db	0
   137  006525  00                 	db	0
   138  006526  1C                 	db	28
   139  006527  00                 	db	0
   140  006528  18                 	db	24
   141  006529  00                 	db	0
   142  00652A  00                 	db	0
   143  00652B  00                 	db	0
   144  00652C  00                 	db	0
   145  00652D  00                 	db	0
   146                           
   147                           ;initializer for unifeilogo@F2448
   148  00652E  01                 	db	1
   149  00652F  03                 	db	3
   150  006530  03                 	db	3
   151  006531  0E                 	db	14
   152  006532  1C                 	db	28
   153  006533  18                 	db	24
   154  006534  08                 	db	8
   155  006535  08                 	db	8
   156  006536  11                 	db	17
   157  006537  1F                 	db	31
   158  006538  00                 	db	0
   159  006539  01                 	db	1
   160  00653A  1F                 	db	31
   161  00653B  12                 	db	18
   162  00653C  14                 	db	20
   163  00653D  1F                 	db	31
   164  00653E  10                 	db	16
   165  00653F  18                 	db	24
   166  006540  18                 	db	24
   167  006541  0E                 	db	14
   168  006542  07                 	db	7
   169  006543  03                 	db	3
   170  006544  02                 	db	2
   171  006545  02                 	db	2
   172  006546  08                 	db	8
   173  006547  18                 	db	24
   174  006548  1C                 	db	28
   175  006549  0E                 	db	14
   176  00654A  03                 	db	3
   177  00654B  03                 	db	3
   178  00654C  01                 	db	1
   179  00654D  00                 	db	0
   180  00654E  12                 	db	18
   181  00654F  14                 	db	20
   182  006550  1F                 	db	31
   183  006551  08                 	db	8
   184  006552  00                 	db	0
   185  006553  1F                 	db	31
   186  006554  11                 	db	17
   187  006555  00                 	db	0
   188  006556  02                 	db	2
   189  006557  03                 	db	3
   190  006558  07                 	db	7
   191  006559  0E                 	db	14
   192  00655A  18                 	db	24
   193  00655B  18                 	db	24
   194  00655C  10                 	db	16
   195  00655D  00                 	db	0
   196                           
   197                           ;initializer for chevrolet@F2443
   198  00655E  00                 	db	0
   199  00655F  03                 	db	3
   200  006560  04                 	db	4
   201  006561  08                 	db	8
   202  006562  10                 	db	16
   203  006563  1F                 	db	31
   204  006564  00                 	db	0
   205  006565  00                 	db	0
   206  006566  0F                 	db	15
   207  006567  18                 	db	24
   208  006568  00                 	db	0
   209  006569  00                 	db	0
   210  00656A  00                 	db	0
   211  00656B  18                 	db	24
   212  00656C  0F                 	db	15
   213  00656D  00                 	db	0
   214  00656E  1C                 	db	28
   215  00656F  07                 	db	7
   216  006570  00                 	db	0
   217  006571  00                 	db	0
   218  006572  00                 	db	0
   219  006573  07                 	db	7
   220  006574  1C                 	db	28
   221  006575  00                 	db	0
   222  006576  00                 	db	0
   223  006577  1F                 	db	31
   224  006578  01                 	db	1
   225  006579  02                 	db	2
   226  00657A  04                 	db	4
   227  00657B  18                 	db	24
   228  00657C  00                 	db	0
   229  00657D  00                 	db	0
   230                           
   231                           	psect	idataBANK1
   232  005F88                     __pidataBANK1:
   233                           	callstack 0
   234                           
   235                           ;initializer for nike_logo@F2453
   236  005F88  00                 	db	0
   237  005F89  00                 	db	0
   238  005F8A  00                 	db	0
   239  005F8B  00                 	db	0
   240  005F8C  01                 	db	1
   241  005F8D  02                 	db	2
   242  005F8E  06                 	db	6
   243  005F8F  0E                 	db	14
   244  005F90  00                 	db	0
   245  005F91  00                 	db	0
   246  005F92  00                 	db	0
   247  005F93  00                 	db	0
   248  005F94  00                 	db	0
   249  005F95  00                 	db	0
   250  005F96  00                 	db	0
   251  005F97  00                 	db	0
   252  005F98  00                 	db	0
   253  005F99  00                 	db	0
   254  005F9A  00                 	db	0
   255  005F9B  00                 	db	0
   256  005F9C  00                 	db	0
   257  005F9D  01                 	db	1
   258  005F9E  03                 	db	3
   259  005F9F  1E                 	db	30
   260  005FA0  00                 	db	0
   261  005FA1  00                 	db	0
   262  005FA2  00                 	db	0
   263  005FA3  02                 	db	2
   264  005FA4  0C                 	db	12
   265  005FA5  10                 	db	16
   266  005FA6  00                 	db	0
   267  005FA7  00                 	db	0
   268  005FA8  0F                 	db	15
   269  005FA9  07                 	db	7
   270  005FAA  03                 	db	3
   271  005FAB  01                 	db	1
   272  005FAC  00                 	db	0
   273  005FAD  00                 	db	0
   274  005FAE  00                 	db	0
   275  005FAF  00                 	db	0
   276  005FB0  11                 	db	17
   277  005FB1  1F                 	db	31
   278  005FB2  1F                 	db	31
   279  005FB3  1C                 	db	28
   280  005FB4  00                 	db	0
   281  005FB5  00                 	db	0
   282  005FB6  00                 	db	0
   283  005FB7  00                 	db	0
   284  005FB8  1C                 	db	28
   285  005FB9  10                 	db	16
   286  005FBA  00                 	db	0
   287  005FBB  00                 	db	0
   288  005FBC  00                 	db	0
   289  005FBD  00                 	db	0
   290  005FBE  00                 	db	0
   291  005FBF  00                 	db	0
   292                           
   293                           	psect	mediumconst
   294  007E94                     __pmediumconst:
   295                           	callstack 0
   296  007E94  00                 	db	0
   297  007E95                     _valor@ssd$F413:
   298                           	callstack 0
   299  007E95  3F                 	db	63
   300  007E96  06                 	db	6
   301  007E97  5B                 	db	91
   302  007E98  4F                 	db	79
   303  007E99  66                 	db	102
   304  007E9A  6D                 	db	109
   305  007E9B  7D                 	db	125
   306  007E9C  07                 	db	7
   307  007E9D  7F                 	db	127
   308  007E9E  6F                 	db	111
   309  007E9F  77                 	db	119
   310  007EA0  7C                 	db	124
   311  007EA1  39                 	db	57
   312  007EA2  5E                 	db	94
   313  007EA3  79                 	db	121
   314  007EA4  71                 	db	113
   315  007EA5                     __end_of_valor@ssd$F413:
   316                           	callstack 0
   317  007EA5                     _linha:
   318                           	callstack 0
   319  007EA5  01                 	db	1
   320  007EA6  02                 	db	2
   321  007EA7  04                 	db	4
   322  007EA8  00                 	db	0
   323  007EA9                     __end_of_linha:
   324                           	callstack 0
   325  0000                     _PORTCbits	set	3970
   326  0000                     _TRISCbits	set	3988
   327  0000                     _T0CON	set	4053
   328  0000                     _TMR0L	set	4054
   329  0000                     _TMR0H	set	4055
   330  0000                     _INTCON	set	4082
   331  0000                     _PORTDbits	set	3971
   332  0000                     _PORTE	set	3972
   333  0000                     _PORTC	set	3970
   334  0000                     _PORTA	set	3968
   335  0000                     _PORTEbits	set	3972
   336  0000                     _TRISEbits	set	3990
   337  0000                     _PORTB	set	3969
   338  0000                     _TRISC	set	3988
   339  0000                     _TRISB	set	3987
   340  0000                     _TRISA	set	3986
   341  0000                     _PORTD	set	3971
   342  0000                     _TRISE	set	3990
   343  0000                     _TRISD	set	3989
   344  007EA9                     STR_31:
   345  007EA9  20                 	db	32
   346  007EAA  20                 	db	32
   347  007EAB  46                 	db	70	;'F'
   348  007EAC  69                 	db	105	;'i'
   349  007EAD  6D                 	db	109	;'m'
   350  007EAE  20                 	db	32
   351  007EAF  64                 	db	100	;'d'
   352  007EB0  6F                 	db	111	;'o'
   353  007EB1  20                 	db	32
   354  007EB2  4A                 	db	74	;'J'
   355  007EB3  6F                 	db	111	;'o'
   356  007EB4  67                 	db	103	;'g'
   357  007EB5  6F                 	db	111	;'o'
   358  007EB6  20                 	db	32
   359  007EB7  20                 	db	32
   360  007EB8  20                 	db	32
   361  007EB9  00                 	db	0
   362  007EBA                     STR_23:
   363  007EBA  43                 	db	67	;'C'
   364  007EBB  61                 	db	97	;'a'
   365  007EBC  72                 	db	114	;'r'
   366  007EBD  74                 	db	116	;'t'
   367  007EBE  61                 	db	97	;'a'
   368  007EBF  6F                 	db	111	;'o'
   369  007EC0  20                 	db	32
   370  007EC1  56                 	db	86	;'V'
   371  007EC2  20                 	db	32
   372  007EC3  54                 	db	84	;'T'
   373  007EC4  69                 	db	105	;'i'
   374  007EC5  6D                 	db	109	;'m'
   375  007EC6  65                 	db	101	;'e'
   376  007EC7  20                 	db	32
   377  007EC8  41                 	db	65	;'A'
   378  007EC9  20                 	db	32
   379  007ECA  00                 	db	0
   380  007ECB                     STR_25:
   381  007ECB  43                 	db	67	;'C'
   382  007ECC  61                 	db	97	;'a'
   383  007ECD  72                 	db	114	;'r'
   384  007ECE  74                 	db	116	;'t'
   385  007ECF  61                 	db	97	;'a'
   386  007ED0  6F                 	db	111	;'o'
   387  007ED1  20                 	db	32
   388  007ED2  56                 	db	86	;'V'
   389  007ED3  20                 	db	32
   390  007ED4  54                 	db	84	;'T'
   391  007ED5  69                 	db	105	;'i'
   392  007ED6  6D                 	db	109	;'m'
   393  007ED7  65                 	db	101	;'e'
   394  007ED8  20                 	db	32
   395  007ED9  42                 	db	66	;'B'
   396  007EDA  20                 	db	32
   397  007EDB  00                 	db	0
   398  007EDC                     STR_13:
   399  007EDC  47                 	db	71	;'G'
   400  007EDD  6F                 	db	111	;'o'
   401  007EDE  6F                 	db	111	;'o'
   402  007EDF  6F                 	db	111	;'o'
   403  007EE0  6F                 	db	111	;'o'
   404  007EE1  6C                 	db	108	;'l'
   405  007EE2  20                 	db	32
   406  007EE3  54                 	db	84	;'T'
   407  007EE4  69                 	db	105	;'i'
   408  007EE5  6D                 	db	109	;'m'
   409  007EE6  65                 	db	101	;'e'
   410  007EE7  20                 	db	32
   411  007EE8  41                 	db	65	;'A'
   412  007EE9  21                 	db	33
   413  007EEA  21                 	db	33
   414  007EEB  21                 	db	33
   415  007EEC  00                 	db	0
   416  007EED                     STR_14:
   417  007EED  47                 	db	71	;'G'
   418  007EEE  6F                 	db	111	;'o'
   419  007EEF  6F                 	db	111	;'o'
   420  007EF0  6F                 	db	111	;'o'
   421  007EF1  6F                 	db	111	;'o'
   422  007EF2  6C                 	db	108	;'l'
   423  007EF3  20                 	db	32
   424  007EF4  54                 	db	84	;'T'
   425  007EF5  69                 	db	105	;'i'
   426  007EF6  6D                 	db	109	;'m'
   427  007EF7  65                 	db	101	;'e'
   428  007EF8  20                 	db	32
   429  007EF9  42                 	db	66	;'B'
   430  007EFA  21                 	db	33
   431  007EFB  21                 	db	33
   432  007EFC  21                 	db	33
   433  007EFD  00                 	db	0
   434  007EFE                     STR_22:
   435  007EFE  43                 	db	67	;'C'
   436  007EFF  61                 	db	97	;'a'
   437  007F00  72                 	db	114	;'r'
   438  007F01  74                 	db	116	;'t'
   439  007F02  61                 	db	97	;'a'
   440  007F03  6F                 	db	111	;'o'
   441  007F04  20                 	db	32
   442  007F05  41                 	db	65	;'A'
   443  007F06  6D                 	db	109	;'m'
   444  007F07  20                 	db	32
   445  007F08  54                 	db	84	;'T'
   446  007F09  69                 	db	105	;'i'
   447  007F0A  6D                 	db	109	;'m'
   448  007F0B  65                 	db	101	;'e'
   449  007F0C  20                 	db	32
   450  007F0D  41                 	db	65	;'A'
   451  007F0E  00                 	db	0
   452  007F0F                     STR_24:
   453  007F0F  43                 	db	67	;'C'
   454  007F10  61                 	db	97	;'a'
   455  007F11  72                 	db	114	;'r'
   456  007F12  74                 	db	116	;'t'
   457  007F13  61                 	db	97	;'a'
   458  007F14  6F                 	db	111	;'o'
   459  007F15  20                 	db	32
   460  007F16  41                 	db	65	;'A'
   461  007F17  6D                 	db	109	;'m'
   462  007F18  20                 	db	32
   463  007F19  54                 	db	84	;'T'
   464  007F1A  69                 	db	105	;'i'
   465  007F1B  6D                 	db	109	;'m'
   466  007F1C  65                 	db	101	;'e'
   467  007F1D  20                 	db	32
   468  007F1E  42                 	db	66	;'B'
   469  007F1F  00                 	db	0
   470  007F20                     STR_16:
   471  007F20  20                 	db	32
   472  007F21  20                 	db	32
   473  007F22  20                 	db	32
   474  007F23  20                 	db	32
   475  007F24  20                 	db	32
   476  007F25  46                 	db	70	;'F'
   477  007F26  61                 	db	97	;'a'
   478  007F27  6C                 	db	108	;'l'
   479  007F28  74                 	db	116	;'t'
   480  007F29  61                 	db	97	;'a'
   481  007F2A  20                 	db	32
   482  007F2B  20                 	db	32
   483  007F2C  20                 	db	32
   484  007F2D  20                 	db	32
   485  007F2E  20                 	db	32
   486  007F2F  00                 	db	0
   487  007F30                     STR_35:
   488  007F30  50                 	db	80	;'P'
   489  007F31  72                 	db	114	;'r'
   490  007F32  65                 	db	101	;'e'
   491  007F33  73                 	db	115	;'s'
   492  007F34  73                 	db	115	;'s'
   493  007F35  69                 	db	105	;'i'
   494  007F36  6F                 	db	111	;'o'
   495  007F37  6E                 	db	110	;'n'
   496  007F38  65                 	db	101	;'e'
   497  007F39  20                 	db	32
   498  007F3A  52                 	db	82	;'R'
   499  007F3B  45                 	db	69	;'E'
   500  007F3C  53                 	db	83	;'S'
   501  007F3D  45                 	db	69	;'E'
   502  007F3E  54                 	db	84	;'T'
   503  007F3F  00                 	db	0
   504  007F40                     STR_17:
   505  007F40  4E                 	db	78	;'N'
   506  007F41  75                 	db	117	;'u'
   507  007F42  6D                 	db	109	;'m'
   508  007F43  65                 	db	101	;'e'
   509  007F44  72                 	db	114	;'r'
   510  007F45  6F                 	db	111	;'o'
   511  007F46  73                 	db	115	;'s'
   512  007F47  20                 	db	32
   513  007F48  43                 	db	67	;'C'
   514  007F49  61                 	db	97	;'a'
   515  007F4A  72                 	db	114	;'r'
   516  007F4B  74                 	db	116	;'t'
   517  007F4C  6F                 	db	111	;'o'
   518  007F4D  65                 	db	101	;'e'
   519  007F4E  73                 	db	115	;'s'
   520  007F4F  00                 	db	0
   521  007F50                     STR_15:
   522  007F50  20                 	db	32
   523  007F51  20                 	db	32
   524  007F52  20                 	db	32
   525  007F53  42                 	db	66	;'B'
   526  007F54  6F                 	db	111	;'o'
   527  007F55  6C                 	db	108	;'l'
   528  007F56  61                 	db	97	;'a'
   529  007F57  20                 	db	32
   530  007F58  46                 	db	70	;'F'
   531  007F59  6F                 	db	111	;'o'
   532  007F5A  72                 	db	114	;'r'
   533  007F5B  61                 	db	97	;'a'
   534  007F5C  20                 	db	32
   535  007F5D  20                 	db	32
   536  007F5E  00                 	db	0
   537  007F5F                     STR_4:
   538  007F5F  20                 	db	32
   539  007F60  20                 	db	32
   540  007F61  45                 	db	69	;'E'
   541  007F62  6D                 	db	109	;'m'
   542  007F63  20                 	db	32
   543  007F64  41                 	db	65	;'A'
   544  007F65  6E                 	db	110	;'n'
   545  007F66  64                 	db	100	;'d'
   546  007F67  61                 	db	97	;'a'
   547  007F68  6D                 	db	109	;'m'
   548  007F69  65                 	db	101	;'e'
   549  007F6A  6E                 	db	110	;'n'
   550  007F6B  74                 	db	116	;'t'
   551  007F6C  6F                 	db	111	;'o'
   552  007F6D  00                 	db	0
   553  007F6E                     STR_36:
   554  007F6E  50                 	db	80	;'P'
   555  007F6F  61                 	db	97	;'a'
   556  007F70  72                 	db	114	;'r'
   557  007F71  61                 	db	97	;'a'
   558  007F72  20                 	db	32
   559  007F73  72                 	db	114	;'r'
   560  007F74  65                 	db	101	;'e'
   561  007F75  69                 	db	105	;'i'
   562  007F76  6E                 	db	110	;'n'
   563  007F77  69                 	db	105	;'i'
   564  007F78  63                 	db	99	;'c'
   565  007F79  69                 	db	105	;'i'
   566  007F7A  61                 	db	97	;'a'
   567  007F7B  72                 	db	114	;'r'
   568  007F7C  00                 	db	0
   569  007F7D                     STR_10:
   570  007F7D  4C                 	db	76	;'L'
   571  007F7E  6F                 	db	111	;'o'
   572  007F7F  63                 	db	99	;'c'
   573  007F80  61                 	db	97	;'a'
   574  007F81  6C                 	db	108	;'l'
   575  007F82  3A                 	db	58	;':'
   576  007F83  20                 	db	32
   577  007F84  55                 	db	85	;'U'
   578  007F85  6E                 	db	110	;'n'
   579  007F86  69                 	db	105	;'i'
   580  007F87  66                 	db	102	;'f'
   581  007F88  65                 	db	101	;'e'
   582  007F89  69                 	db	105	;'i'
   583  007F8A  00                 	db	0
   584  007F8B                     STR_9:
   585  007F8B  50                 	db	80	;'P'
   586  007F8C  6C                 	db	108	;'l'
   587  007F8D  61                 	db	97	;'a'
   588  007F8E  63                 	db	99	;'c'
   589  007F8F  61                 	db	97	;'a'
   590  007F90  72                 	db	114	;'r'
   591  007F91  20                 	db	32
   592  007F92  46                 	db	70	;'F'
   593  007F93  75                 	db	117	;'u'
   594  007F94  74                 	db	116	;'t'
   595  007F95  73                 	db	115	;'s'
   596  007F96  61                 	db	97	;'a'
   597  007F97  6C                 	db	108	;'l'
   598  007F98  00                 	db	0
   599  007F99                     STR_8:
   600  007F99  49                 	db	73	;'I'
   601  007F9A  6E                 	db	110	;'n'
   602  007F9B  69                 	db	105	;'i'
   603  007F9C  63                 	db	99	;'c'
   604  007F9D  69                 	db	105	;'i'
   605  007F9E  61                 	db	97	;'a'
   606  007F9F  6C                 	db	108	;'l'
   607  007FA0  69                 	db	105	;'i'
   608  007FA1  7A                 	db	122	;'z'
   609  007FA2  61                 	db	97	;'a'
   610  007FA3  6E                 	db	110	;'n'
   611  007FA4  64                 	db	100	;'d'
   612  007FA5  6F                 	db	111	;'o'
   613  007FA6  00                 	db	0
   614  007FA7                     STR_32:
   615  007FA7  50                 	db	80	;'P'
   616  007FA8  6C                 	db	108	;'l'
   617  007FA9  61                 	db	97	;'a'
   618  007FAA  63                 	db	99	;'c'
   619  007FAB  61                 	db	97	;'a'
   620  007FAC  72                 	db	114	;'r'
   621  007FAD  20                 	db	32
   622  007FAE  46                 	db	70	;'F'
   623  007FAF  69                 	db	105	;'i'
   624  007FB0  6E                 	db	110	;'n'
   625  007FB1  61                 	db	97	;'a'
   626  007FB2  6C                 	db	108	;'l'
   627  007FB3  00                 	db	0
   628  007FB4                     STR_28:
   629  007FB4  49                 	db	73	;'I'
   630  007FB5  6E                 	db	110	;'n'
   631  007FB6  74                 	db	116	;'t'
   632  007FB7  65                 	db	101	;'e'
   633  007FB8  72                 	db	114	;'r'
   634  007FB9  76                 	db	118	;'v'
   635  007FBA  61                 	db	97	;'a'
   636  007FBB  6C                 	db	108	;'l'
   637  007FBC  6F                 	db	111	;'o'
   638  007FBD  00                 	db	0
   639  007FBE                     STR_1:
   640  007FBE  43                 	db	67	;'C'
   641  007FBF  68                 	db	104	;'h'
   642  007FC0  65                 	db	101	;'e'
   643  007FC1  76                 	db	118	;'v'
   644  007FC2  72                 	db	114	;'r'
   645  007FC3  6F                 	db	111	;'o'
   646  007FC4  6C                 	db	108	;'l'
   647  007FC5  65                 	db	101	;'e'
   648  007FC6  74                 	db	116	;'t'
   649  007FC7  00                 	db	0
   650  007FC8                     STR_6:
   651  007FC8  54                 	db	84	;'T'
   652  007FC9  69                 	db	105	;'i'
   653  007FCA  6D                 	db	109	;'m'
   654  007FCB  65                 	db	101	;'e'
   655  007FCC  20                 	db	32
   656  007FCD  41                 	db	65	;'A'
   657  007FCE  20                 	db	32
   658  007FCF  2D                 	db	45
   659  007FD0  00                 	db	0
   660  007FD1                     STR_7:
   661  007FD1  54                 	db	84	;'T'
   662  007FD2  69                 	db	105	;'i'
   663  007FD3  6D                 	db	109	;'m'
   664  007FD4  65                 	db	101	;'e'
   665  007FD5  20                 	db	32
   666  007FD6  42                 	db	66	;'B'
   667  007FD7  20                 	db	32
   668  007FD8  2D                 	db	45
   669  007FD9  00                 	db	0
   670  007FDA                     STR_26:
   671  007FDA  46                 	db	70	;'F'
   672  007FDB  69                 	db	105	;'i'
   673  007FDC  6D                 	db	109	;'m'
   674  007FDD  20                 	db	32
   675  007FDE  64                 	db	100	;'d'
   676  007FDF  6F                 	db	111	;'o'
   677  007FE0  20                 	db	32
   678  007FE1  31                 	db	49	;'1'
   679  007FE2  00                 	db	0
   680  007FE3                     STR_5:
   681  007FE3  20                 	db	32
   682  007FE4  54                 	db	84	;'T'
   683  007FE5  65                 	db	101	;'e'
   684  007FE6  6D                 	db	109	;'m'
   685  007FE7  70                 	db	112	;'p'
   686  007FE8  6F                 	db	111	;'o'
   687  007FE9  00                 	db	0
   688  007FEA                     STR_3:
   689  007FEA  61                 	db	97	;'a'
   690  007FEB  64                 	db	100	;'d'
   691  007FEC  69                 	db	105	;'i'
   692  007FED  64                 	db	100	;'d'
   693  007FEE  61                 	db	97	;'a'
   694  007FEF  73                 	db	115	;'s'
   695  007FF0  00                 	db	0
   696  007FF1                     STR_2:
   697  007FF1  4E                 	db	78	;'N'
   698  007FF2  49                 	db	73	;'I'
   699  007FF3  4B                 	db	75	;'K'
   700  007FF4  45                 	db	69	;'E'
   701  007FF5  00                 	db	0
   702  007FF6                     STR_18:
   703  007FF6  20                 	db	32
   704  007FF7  41                 	db	65	;'A'
   705  007FF8  3A                 	db	58	;':'
   706  007FF9  00                 	db	0
   707  007FFA                     STR_19:
   708  007FFA  20                 	db	32
   709  007FFB  56                 	db	86	;'V'
   710  007FFC  3A                 	db	58	;':'
   711  007FFD  00                 	db	0
   712  007FFE  00                 	db	0	; dummy byte at the end
   713  0000                     
   714                           ; #config settings
   715                           
   716                           	psect	cinit
   717  006016                     __pcinit:
   718                           	callstack 0
   719  006016                     start_initialization:
   720                           	callstack 0
   721  006016                     __initialization:
   722                           	callstack 0
   723                           
   724                           ; Initialize objects allocated to BANK1 (56 bytes)
   725                           ; load TBLPTR registers with __pidataBANK1
   726  006016  0E88               	movlw	low __pidataBANK1
   727  006018  6EF6               	movwf	tblptrl,c
   728  00601A  0E5F               	movlw	high __pidataBANK1
   729  00601C  6EF7               	movwf	tblptrh,c
   730  00601E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   731  006020  6EF8               	movwf	tblptru,c
   732  006022  EE01  F000         	lfsr	0,__pdataBANK1
   733  006026  EE10 F038          	lfsr	1,56
   734  00602A                     copy_data0:
   735  00602A  0009               	tblrd		*+
   736  00602C  CFF5 FFEE          	movff	tablat,postinc0
   737  006030  50E5               	movf	postdec1,w,c
   738  006032  50E1               	movf	fsr1l,w,c
   739  006034  E1FA               	bnz	copy_data0
   740                           
   741                           ; Initialize objects allocated to BANK0 (128 bytes)
   742                           ; load TBLPTR registers with __pidataBANK0
   743  006036  0EFE               	movlw	low __pidataBANK0
   744  006038  6EF6               	movwf	tblptrl,c
   745  00603A  0E64               	movlw	high __pidataBANK0
   746  00603C  6EF7               	movwf	tblptrh,c
   747  00603E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   748  006040  6EF8               	movwf	tblptru,c
   749  006042  EE00  F080         	lfsr	0,__pdataBANK0
   750  006046  EE10 F080          	lfsr	1,128
   751  00604A                     copy_data1:
   752  00604A  0009               	tblrd		*+
   753  00604C  CFF5 FFEE          	movff	tablat,postinc0
   754  006050  50E5               	movf	postdec1,w,c
   755  006052  50E1               	movf	fsr1l,w,c
   756  006054  E1FA               	bnz	copy_data1
   757                           
   758                           ; Clear objects allocated to COMRAM (32 bytes)
   759  006056  EE00  F05D         	lfsr	0,__pbssCOMRAM
   760  00605A  0E20               	movlw	32
   761  00605C                     clear_0:
   762  00605C  6AEE               	clrf	postinc0,c
   763  00605E  06E8               	decf	wreg,f,c
   764  006060  E1FD               	bnz	clear_0
   765  006062                     end_of_initialization:
   766                           	callstack 0
   767  006062                     __end_of__initialization:
   768                           	callstack 0
   769  006062  0E00               	movlw	low (__Lmediumconst shr (0+16))
   770  006064  6EF8               	movwf	tblptru,c
   771  006066  0100               	movlb	0
   772  006068  EFAF  F039         	goto	_main	;jump to C main() function
   773                           
   774                           	psect	bssCOMRAM
   775  00005D                     __pbssCOMRAM:
   776                           	callstack 0
   777  00005D                     _time:
   778                           	callstack 0
   779  00005D                     	ds	10
   780  000067                     kpDebounce@valorAntigo:
   781                           	callstack 0
   782  000067                     	ds	2
   783  000069                     kpDebounce@valorNovo:
   784                           	callstack 0
   785  000069                     	ds	2
   786  00006B                     _valor:
   787                           	callstack 0
   788  00006B                     	ds	2
   789  00006D                     _v3:
   790                           	callstack 0
   791  00006D                     	ds	1
   792  00006E                     _v2:
   793                           	callstack 0
   794  00006E                     	ds	1
   795  00006F                     _v1:
   796                           	callstack 0
   797  00006F                     	ds	1
   798  000070                     _v0:
   799                           	callstack 0
   800  000070                     	ds	1
   801  000071                     _display:
   802                           	callstack 0
   803  000071                     	ds	1
   804  000072                     kpDebounce@tempo:
   805                           	callstack 0
   806  000072                     	ds	1
   807  000073                     _date:
   808                           	callstack 0
   809  000073                     	ds	10
   810                           
   811                           	psect	dataBANK0
   812  000080                     __pdataBANK0:
   813                           	callstack 0
   814  000080                     adidas_logo@F2458:
   815                           	callstack 0
   816  000080                     	ds	48
   817  0000B0                     unifeilogo@F2448:
   818                           	callstack 0
   819  0000B0                     	ds	48
   820  0000E0                     chevrolet@F2443:
   821                           	callstack 0
   822  0000E0                     	ds	32
   823                           
   824                           	psect	dataBANK1
   825  000100                     __pdataBANK1:
   826                           	callstack 0
   827  000100                     nike_logo@F2453:
   828                           	callstack 0
   829  000100                     	ds	56
   830                           
   831                           	psect	cstackCOMRAM
   832  000001                     __pcstackCOMRAM:
   833                           	callstack 0
   834  000001                     ??_kpDebounce:
   835  000001                     ?_kpRead:
   836                           	callstack 0
   837  000001                     ?___wmul:
   838                           	callstack 0
   839  000001                     ?___awdiv:
   840                           	callstack 0
   841  000001                     ?___lwdiv:
   842                           	callstack 0
   843  000001                     ?___aldiv:
   844                           	callstack 0
   845  000001                     lcd_wr@val:
   846                           	callstack 0
   847  000001                     getd@nn:
   848                           	callstack 0
   849  000001                     getu@nn:
   850                           	callstack 0
   851  000001                     digitalWrite@pin:
   852                           	callstack 0
   853  000001                     pinMode@pin:
   854                           	callstack 0
   855  000001                     atraso_ms@t:
   856                           	callstack 0
   857  000001                     timerReset@tempo:
   858                           	callstack 0
   859  000001                     delay@i:
   860                           	callstack 0
   861  000001                     ___wmul@multiplier:
   862                           	callstack 0
   863  000001                     ___awdiv@dividend:
   864                           	callstack 0
   865  000001                     ___lwdiv@dividend:
   866                           	callstack 0
   867  000001                     ___aldiv@dividend:
   868                           	callstack 0
   869                           
   870                           ; 4 bytes @ 0x0
   871  000001                     	ds	2
   872  000003                     delay@j:
   873                           	callstack 0
   874  000003                     digitalWrite@value:
   875                           	callstack 0
   876  000003                     pinMode@type:
   877                           	callstack 0
   878  000003                     atraso_ms@i:
   879                           	callstack 0
   880  000003                     timerReset@ciclos:
   881                           	callstack 0
   882  000003                     ___wmul@multiplicand:
   883                           	callstack 0
   884  000003                     ___awdiv@divisor:
   885                           	callstack 0
   886  000003                     ___lwdiv@divisor:
   887                           	callstack 0
   888                           
   889                           ; 2 bytes @ 0x2
   890  000003                     	ds	1
   891  000004                     delay@k:
   892                           	callstack 0
   893                           
   894                           ; 1 bytes @ 0x3
   895  000004                     	ds	1
   896  000005                     ??_digitalWrite:
   897  000005                     ??_pinMode:
   898  000005                     ??_i2c_wb:
   899  000005                     ??_i2c_rb:
   900  000005                     atraso_ms@j:
   901                           	callstack 0
   902  000005                     ___awdiv@counter:
   903                           	callstack 0
   904  000005                     ___wmul@product:
   905                           	callstack 0
   906  000005                     ___lwdiv@quotient:
   907                           	callstack 0
   908  000005                     ___aldiv@divisor:
   909                           	callstack 0
   910                           
   911                           ; 4 bytes @ 0x4
   912  000005                     	ds	1
   913  000006                     kpDebounce@old_D:
   914                           	callstack 0
   915  000006                     atraso_ms@k:
   916                           	callstack 0
   917  000006                     ___awdiv@sign:
   918                           	callstack 0
   919                           
   920                           ; 1 bytes @ 0x5
   921  000006                     	ds	1
   922  000007                     ??_ssdUpdate:
   923  000007                     lcd_cmd@val:
   924                           	callstack 0
   925  000007                     lcd_dat@val:
   926                           	callstack 0
   927  000007                     i2c_wb@val:
   928                           	callstack 0
   929  000007                     i2c_rb@ack:
   930                           	callstack 0
   931  000007                     ___lwdiv@counter:
   932                           	callstack 0
   933  000007                     kpDebounce@k:
   934                           	callstack 0
   935  000007                     atraso_s@t:
   936                           	callstack 0
   937  000007                     ___awdiv@quotient:
   938                           	callstack 0
   939                           
   940                           ; 2 bytes @ 0x6
   941  000007                     	ds	1
   942  000008                     ??_pwmSet1:
   943  000008                     i2c_wb@i:
   944                           	callstack 0
   945  000008                     i2c_rb@ret:
   946                           	callstack 0
   947  000008                     lcd_str@str:
   948                           	callstack 0
   949  000008                     unifeilogo@logo:
   950                           	callstack 0
   951                           
   952                           ; 48 bytes @ 0x7
   953  000008                     	ds	1
   954  000009                     ?___awmod:
   955                           	callstack 0
   956  000009                     kpDebounce@j:
   957                           	callstack 0
   958  000009                     i2c_rb@i:
   959                           	callstack 0
   960  000009                     ___aldiv@counter:
   961                           	callstack 0
   962  000009                     atraso_s@i:
   963                           	callstack 0
   964  000009                     ___awmod@dividend:
   965                           	callstack 0
   966                           
   967                           ; 2 bytes @ 0x8
   968  000009                     	ds	1
   969  00000A                     ??_lcd_str:
   970  00000A                     kpDebounce@i:
   971                           	callstack 0
   972  00000A                     pwmSet1@porcento:
   973                           	callstack 0
   974  00000A                     rtc_r@gols:
   975                           	callstack 0
   976  00000A                     ___aldiv@sign:
   977                           	callstack 0
   978                           
   979                           ; 1 bytes @ 0x9
   980  00000A                     	ds	1
   981  00000B                     atraso_s@j:
   982                           	callstack 0
   983  00000B                     pwmSet1@val:
   984                           	callstack 0
   985  00000B                     ___awmod@divisor:
   986                           	callstack 0
   987  00000B                     ___aldiv@quotient:
   988                           	callstack 0
   989                           
   990                           ; 4 bytes @ 0xA
   991  00000B                     	ds	1
   992  00000C                     atraso_s@k:
   993                           	callstack 0
   994  00000C                     lcd_str@i:
   995                           	callstack 0
   996                           
   997                           ; 1 bytes @ 0xB
   998  00000C                     	ds	1
   999  00000D                     partida_andamento@gols2:
  1000                           	callstack 0
  1001  00000D                     ___awmod@counter:
  1002                           	callstack 0
  1003  00000D                     chevrolet@chevrolete_logo:
  1004                           	callstack 0
  1005  00000D                     adidas_logo@adidas:
  1006                           	callstack 0
  1007  00000D                     nike_logo@nike_logo:
  1008                           	callstack 0
  1009                           
  1010                           ; 56 bytes @ 0xC
  1011  00000D                     	ds	1
  1012  00000E                     partida_andamento@turno:
  1013                           	callstack 0
  1014  00000E                     ___awmod@sign:
  1015                           	callstack 0
  1016                           
  1017                           ; 1 bytes @ 0xD
  1018  00000E                     	ds	1
  1019  00000F                     partida_andamento@gols:
  1020                           	callstack 0
  1021  00000F                     ssdDigit@pos:
  1022                           	callstack 0
  1023  00000F                     pwmFrequency@freq:
  1024                           	callstack 0
  1025                           
  1026                           ; 2 bytes @ 0xE
  1027  00000F                     	ds	1
  1028  000010                     ssdDigit@val:
  1029                           	callstack 0
  1030                           
  1031                           ; 1 bytes @ 0xF
  1032  000010                     	ds	1
  1033  000011                     
  1034                           ; 1 bytes @ 0x10
  1035  000011                     	ds	28
  1036  00002D                     chevrolet@j:
  1037                           	callstack 0
  1038                           
  1039                           ; 1 bytes @ 0x2C
  1040  00002D                     	ds	1
  1041  00002E                     chevrolet@i:
  1042                           	callstack 0
  1043                           
  1044                           ; 1 bytes @ 0x2D
  1045  00002E                     	ds	10
  1046  000038                     unifeilogo@i:
  1047                           	callstack 0
  1048                           
  1049                           ; 1 bytes @ 0x37
  1050  000038                     	ds	5
  1051  00003D                     adidas_logo@j:
  1052                           	callstack 0
  1053                           
  1054                           ; 1 bytes @ 0x3C
  1055  00003D                     	ds	1
  1056  00003E                     adidas_logo@i:
  1057                           	callstack 0
  1058                           
  1059                           ; 1 bytes @ 0x3D
  1060  00003E                     	ds	7
  1061  000045                     nike_logo@j:
  1062                           	callstack 0
  1063                           
  1064                           ; 1 bytes @ 0x44
  1065  000045                     	ds	1
  1066  000046                     nike_logo@i:
  1067                           	callstack 0
  1068                           
  1069                           ; 1 bytes @ 0x45
  1070  000046                     	ds	1
  1071  000047                     main@temp1:
  1072                           	callstack 0
  1073                           
  1074                           ; 2 bytes @ 0x46
  1075  000047                     	ds	2
  1076  000049                     main@t:
  1077                           	callstack 0
  1078                           
  1079                           ; 2 bytes @ 0x48
  1080  000049                     	ds	2
  1081  00004B                     main@flagfalta:
  1082                           	callstack 0
  1083                           
  1084                           ; 2 bytes @ 0x4A
  1085  00004B                     	ds	2
  1086  00004D                     main@j:
  1087                           	callstack 0
  1088                           
  1089                           ; 1 bytes @ 0x4C
  1090  00004D                     	ds	1
  1091  00004E                     main@cvA:
  1092                           	callstack 0
  1093                           
  1094                           ; 1 bytes @ 0x4D
  1095  00004E                     	ds	1
  1096  00004F                     main@cvB:
  1097                           	callstack 0
  1098                           
  1099                           ; 1 bytes @ 0x4E
  1100  00004F                     	ds	1
  1101  000050                     main@caA:
  1102                           	callstack 0
  1103                           
  1104                           ; 1 bytes @ 0x4F
  1105  000050                     	ds	1
  1106  000051                     main@caB:
  1107                           	callstack 0
  1108                           
  1109                           ; 1 bytes @ 0x50
  1110  000051                     	ds	1
  1111  000052                     main@flagcontrole:
  1112                           	callstack 0
  1113                           
  1114                           ; 2 bytes @ 0x51
  1115  000052                     	ds	2
  1116  000054                     main@turno:
  1117                           	callstack 0
  1118                           
  1119                           ; 1 bytes @ 0x53
  1120  000054                     	ds	1
  1121  000055                     main@k:
  1122                           	callstack 0
  1123                           
  1124                           ; 1 bytes @ 0x54
  1125  000055                     	ds	1
  1126  000056                     main@gols:
  1127                           	callstack 0
  1128                           
  1129                           ; 1 bytes @ 0x55
  1130  000056                     	ds	1
  1131  000057                     main@gols2:
  1132                           	callstack 0
  1133                           
  1134                           ; 1 bytes @ 0x56
  1135  000057                     	ds	1
  1136  000058                     main@tempflag:
  1137                           	callstack 0
  1138                           
  1139                           ; 2 bytes @ 0x57
  1140  000058                     	ds	2
  1141  00005A                     main@cont:
  1142                           	callstack 0
  1143                           
  1144                           ; 2 bytes @ 0x59
  1145  00005A                     	ds	2
  1146  00005C                     main@i:
  1147                           	callstack 0
  1148                           
  1149                           ; 1 bytes @ 0x5B
  1150  00005C                     	ds	1
  1151                           
  1152 ;;
  1153 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1154 ;;
  1155 ;; *************** function _main *****************
  1156 ;; Defined at:
  1157 ;;		line 172 in file "main.c"
  1158 ;; Parameters:    Size  Location     Type
  1159 ;;		None
  1160 ;; Auto vars:     Size  Location     Type
  1161 ;;  cont            2   89[COMRAM] int 
  1162 ;;  tempflag        2   87[COMRAM] unsigned int 
  1163 ;;  flagcontrole    2   81[COMRAM] int 
  1164 ;;  flagfalta       2   74[COMRAM] int 
  1165 ;;  t               2   72[COMRAM] unsigned int 
  1166 ;;  temp1           2   70[COMRAM] unsigned int 
  1167 ;;  temp2           2    0        unsigned int 
  1168 ;;  i               1   91[COMRAM] unsigned char 
  1169 ;;  gols2           1   86[COMRAM] unsigned char 
  1170 ;;  gols            1   85[COMRAM] unsigned char 
  1171 ;;  k               1   84[COMRAM] unsigned char 
  1172 ;;  turno           1   83[COMRAM] unsigned char 
  1173 ;;  caB             1   80[COMRAM] unsigned char 
  1174 ;;  caA             1   79[COMRAM] unsigned char 
  1175 ;;  cvB             1   78[COMRAM] unsigned char 
  1176 ;;  cvA             1   77[COMRAM] unsigned char 
  1177 ;;  j               1   76[COMRAM] unsigned char 
  1178 ;; Return value:  Size  Location     Type
  1179 ;;                  1    wreg      void 
  1180 ;; Registers used:
  1181 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1187 ;;      Params:         0       0       0       0       0       0       0
  1188 ;;      Locals:        22       0       0       0       0       0       0
  1189 ;;      Temps:          0       0       0       0       0       0       0
  1190 ;;      Totals:        22       0       0       0       0       0       0
  1191 ;;Total ram usage:       22 bytes
  1192 ;; Hardware stack levels required when called:    4
  1193 ;; This function calls:
  1194 ;;		___awdiv
  1195 ;;		___awmod
  1196 ;;		_adidas_logo
  1197 ;;		_atraso_ms
  1198 ;;		_atraso_s
  1199 ;;		_chevrolet
  1200 ;;		_kpDebounce
  1201 ;;		_kpInit
  1202 ;;		_kpRead
  1203 ;;		_lcd_cmd
  1204 ;;		_lcd_dat
  1205 ;;		_lcd_init
  1206 ;;		_lcd_str
  1207 ;;		_nike_logo
  1208 ;;		_partida_andamento
  1209 ;;		_pwmFrequency
  1210 ;;		_pwmInit
  1211 ;;		_pwmSet1
  1212 ;;		_rtc_r
  1213 ;;		_ssdDigit
  1214 ;;		_ssdInit
  1215 ;;		_ssdUpdate
  1216 ;;		_timerInit
  1217 ;;		_timerReset
  1218 ;;		_timerWait
  1219 ;;		_unifeilogo
  1220 ;; This function is called by:
  1221 ;;		Startup code after reset
  1222 ;; This function uses a non-reentrant model
  1223 ;;
  1224                           
  1225                           	psect	text0
  1226  00735E                     __ptext0:
  1227                           	callstack 0
  1228  00735E                     _main:
  1229                           	callstack 27
  1230  00735E                     
  1231                           ;main.c: 174:     TRISD = 0x00;
  1232  00735E  0E00               	movlw	0
  1233  007360  6E95               	movwf	149,c	;volatile
  1234                           
  1235                           ;main.c: 175:     TRISE = 0x00;
  1236  007362  0E00               	movlw	0
  1237  007364  6E96               	movwf	150,c	;volatile
  1238                           
  1239                           ;main.c: 176:     PORTD = 0x00;
  1240  007366  0E00               	movlw	0
  1241  007368  6E83               	movwf	131,c	;volatile
  1242                           
  1243                           ;main.c: 178:     TRISE = 0x00;
  1244  00736A  0E00               	movlw	0
  1245  00736C  6E96               	movwf	150,c	;volatile
  1246                           
  1247                           ;main.c: 179:     TRISA = 0xC3;
  1248  00736E  0EC3               	movlw	195
  1249  007370  6E92               	movwf	146,c	;volatile
  1250                           
  1251                           ;main.c: 180:     TRISB = 0x03;
  1252  007372  0E03               	movlw	3
  1253  007374  6E93               	movwf	147,c	;volatile
  1254                           
  1255                           ;main.c: 181:     TRISC = 0x01;
  1256  007376  0E01               	movlw	1
  1257  007378  6E94               	movwf	148,c	;volatile
  1258                           
  1259                           ;main.c: 183:     unsigned char i, j, k;;main.c: 184:     unsigned int t;;main.c: 185:  
      +                             int cont = 2000, flagcontrole = 0, flagfalta = 0;
  1260  00737A  0E07               	movlw	7
  1261  00737C  6E5B               	movwf	(main@cont+1)^0,c
  1262  00737E  0ED0               	movlw	208
  1263  007380  6E5A               	movwf	main@cont^0,c
  1264  007382  0E00               	movlw	0
  1265  007384  6E53               	movwf	(main@flagcontrole+1)^0,c
  1266  007386  0E00               	movlw	0
  1267  007388  6E52               	movwf	main@flagcontrole^0,c
  1268  00738A  0E00               	movlw	0
  1269  00738C  6E4C               	movwf	(main@flagfalta+1)^0,c
  1270  00738E  0E00               	movlw	0
  1271  007390  6E4B               	movwf	main@flagfalta^0,c
  1272                           
  1273                           ;main.c: 187:     unsigned char gols = '0', gols2 = '0', turno = '1';
  1274  007392  0E30               	movlw	48
  1275  007394  6E56               	movwf	main@gols^0,c
  1276  007396  0E30               	movlw	48
  1277  007398  6E57               	movwf	main@gols2^0,c
  1278  00739A  0E31               	movlw	49
  1279  00739C  6E54               	movwf	main@turno^0,c
  1280                           
  1281                           ;main.c: 188:     unsigned char cvA = '0', cvB = '0', caA = '0', caB = '0';
  1282  00739E  0E30               	movlw	48
  1283  0073A0  6E4E               	movwf	main@cvA^0,c
  1284  0073A2  0E30               	movlw	48
  1285  0073A4  6E4F               	movwf	main@cvB^0,c
  1286  0073A6  0E30               	movlw	48
  1287  0073A8  6E50               	movwf	main@caA^0,c
  1288  0073AA  0E30               	movlw	48
  1289  0073AC  6E51               	movwf	main@caB^0,c
  1290  0073AE                     
  1291                           ;main.c: 189:     lcd_init();
  1292  0073AE  EC62  F030         	call	_lcd_init	;wreg free
  1293  0073B2                     
  1294                           ;main.c: 190:     lcd_cmd(0x0C);
  1295  0073B2  0E0C               	movlw	12
  1296  0073B4  EC9A  F02F         	call	_lcd_cmd
  1297  0073B8                     
  1298                           ;main.c: 191:     lcd_str("Inicializando");
  1299  0073B8  0E99               	movlw	low STR_8
  1300  0073BA  6E08               	movwf	lcd_str@str^0,c
  1301  0073BC  0E7F               	movlw	high STR_8
  1302  0073BE  6E09               	movwf	(lcd_str@str+1)^0,c
  1303  0073C0  ECCB  F031         	call	_lcd_str	;wreg free
  1304  0073C4                     
  1305                           ;main.c: 192:     lcd_cmd(0xC0);
  1306  0073C4  0EC0               	movlw	192
  1307  0073C6  EC9A  F02F         	call	_lcd_cmd
  1308  0073CA                     
  1309                           ;main.c: 193:     lcd_str("Placar Futsal");
  1310  0073CA  0E8B               	movlw	low STR_9
  1311  0073CC  6E08               	movwf	lcd_str@str^0,c
  1312  0073CE  0E7F               	movlw	high STR_9
  1313  0073D0  6E09               	movwf	(lcd_str@str+1)^0,c
  1314  0073D2  ECCB  F031         	call	_lcd_str	;wreg free
  1315  0073D6                     
  1316                           ;main.c: 194:     atraso_s(2);
  1317  0073D6  0E00               	movlw	0
  1318  0073D8  6E08               	movwf	(atraso_s@t+1)^0,c
  1319  0073DA  0E02               	movlw	2
  1320  0073DC  6E07               	movwf	atraso_s@t^0,c
  1321  0073DE  EC07  F032         	call	_atraso_s	;wreg free
  1322  0073E2                     
  1323                           ;main.c: 195:     lcd_cmd(0x01);
  1324  0073E2  0E01               	movlw	1
  1325  0073E4  EC9A  F02F         	call	_lcd_cmd
  1326  0073E8                     
  1327                           ;main.c: 196:     unifeilogo();
  1328  0073E8  EC43  F032         	call	_unifeilogo	;wreg free
  1329  0073EC                     
  1330                           ;main.c: 198:     for (j = 0; j < 1; j++) {
  1331  0073EC  0E00               	movlw	0
  1332  0073EE  6E4D               	movwf	main@j^0,c
  1333  0073F0                     l3546:
  1334  0073F0  504D               	movf	main@j^0,w,c
  1335  0073F2  B4D8               	btfsc	status,2,c
  1336  0073F4  EFFE  F039         	goto	u2971
  1337  0073F8  EF00  F03A         	goto	u2970
  1338  0073FC                     u2971:
  1339  0073FC  EF02  F03A         	goto	l3550
  1340  007400                     u2970:
  1341  007400  EF35  F03A         	goto	l3578
  1342  007404                     l3550:
  1343                           
  1344                           ;main.c: 199:         for (i = 0; i < 29; i++) {
  1345  007404  0E00               	movlw	0
  1346  007406  6E5C               	movwf	main@i^0,c
  1347  007408                     l3552:
  1348  007408  0E1C               	movlw	28
  1349  00740A  645C               	cpfsgt	main@i^0,c
  1350  00740C  EF0A  F03A         	goto	u2981
  1351  007410  EF0C  F03A         	goto	u2980
  1352  007414                     u2981:
  1353  007414  EF0E  F03A         	goto	l3556
  1354  007418                     u2980:
  1355  007418  EF1A  F03A         	goto	l3562
  1356  00741C                     l3556:
  1357                           
  1358                           ;main.c: 200:             atraso_ms(100);
  1359  00741C  0E00               	movlw	0
  1360  00741E  6E02               	movwf	(atraso_ms@t+1)^0,c
  1361  007420  0E64               	movlw	100
  1362  007422  6E01               	movwf	atraso_ms@t^0,c
  1363  007424  ECEE  F030         	call	_atraso_ms	;wreg free
  1364                           
  1365                           ;main.c: 201:             lcd_cmd(0x18);
  1366  007428  0E18               	movlw	24
  1367  00742A  EC9A  F02F         	call	_lcd_cmd
  1368  00742E                     
  1369                           ;main.c: 202:         }
  1370  00742E  2A5C               	incf	main@i^0,f,c
  1371  007430  EF04  F03A         	goto	l3552
  1372  007434                     l3562:
  1373                           
  1374                           ;main.c: 204:         for (i = 0; i < 29; i++) {
  1375  007434  0E00               	movlw	0
  1376  007436  6E5C               	movwf	main@i^0,c
  1377  007438                     l3564:
  1378  007438  0E1C               	movlw	28
  1379  00743A  645C               	cpfsgt	main@i^0,c
  1380  00743C  EF22  F03A         	goto	u2991
  1381  007440  EF24  F03A         	goto	u2990
  1382  007444                     u2991:
  1383  007444  EF26  F03A         	goto	l3568
  1384  007448                     u2990:
  1385  007448  EF32  F03A         	goto	l3574
  1386  00744C                     l3568:
  1387                           
  1388                           ;main.c: 205:             atraso_ms(100);
  1389  00744C  0E00               	movlw	0
  1390  00744E  6E02               	movwf	(atraso_ms@t+1)^0,c
  1391  007450  0E64               	movlw	100
  1392  007452  6E01               	movwf	atraso_ms@t^0,c
  1393  007454  ECEE  F030         	call	_atraso_ms	;wreg free
  1394                           
  1395                           ;main.c: 206:             lcd_cmd(0x1C);
  1396  007458  0E1C               	movlw	28
  1397  00745A  EC9A  F02F         	call	_lcd_cmd
  1398  00745E                     
  1399                           ;main.c: 207:         }
  1400  00745E  2A5C               	incf	main@i^0,f,c
  1401  007460  EF1C  F03A         	goto	l3564
  1402  007464                     l3574:
  1403                           
  1404                           ;main.c: 208:     }
  1405  007464  2A4D               	incf	main@j^0,f,c
  1406  007466  EFF8  F039         	goto	l3546
  1407  00746A                     l3578:
  1408                           
  1409                           ;main.c: 210:     lcd_cmd(0x40);
  1410  00746A  0E40               	movlw	64
  1411  00746C  EC9A  F02F         	call	_lcd_cmd
  1412                           
  1413                           ;main.c: 211:     lcd_cmd(0x80);
  1414  007470  0E80               	movlw	128
  1415  007472  EC9A  F02F         	call	_lcd_cmd
  1416  007476                     
  1417                           ;main.c: 212:     lcd_str("Local: Unifei");
  1418  007476  0E7D               	movlw	low STR_10
  1419  007478  6E08               	movwf	lcd_str@str^0,c
  1420  00747A  0E7F               	movlw	high STR_10
  1421  00747C  6E09               	movwf	(lcd_str@str+1)^0,c
  1422  00747E  ECCB  F031         	call	_lcd_str	;wreg free
  1423  007482                     
  1424                           ;main.c: 213:     lcd_cmd(0xC0);
  1425  007482  0EC0               	movlw	192
  1426  007484  EC9A  F02F         	call	_lcd_cmd
  1427  007488                     
  1428                           ;main.c: 214:     rtc_r();
  1429  007488  EC23  F034         	call	_rtc_r	;wreg free
  1430  00748C                     
  1431                           ;main.c: 215:     lcd_str((const char *) date);
  1432  00748C  0E73               	movlw	low _date
  1433  00748E  6E08               	movwf	lcd_str@str^0,c
  1434  007490  0E00               	movlw	high _date
  1435  007492  6E09               	movwf	(lcd_str@str+1)^0,c
  1436  007494  ECCB  F031         	call	_lcd_str	;wreg free
  1437                           
  1438                           ;main.c: 216:     lcd_cmd(0x90);
  1439  007498  0E90               	movlw	144
  1440  00749A  EC9A  F02F         	call	_lcd_cmd
  1441  00749E                     
  1442                           ;main.c: 217:     lcd_str("Time A");
  1443  00749E  0E08               	movlw	low (STR_22+10)
  1444  0074A0  6E08               	movwf	lcd_str@str^0,c
  1445  0074A2  0E7F               	movlw	high (STR_22+10)
  1446  0074A4  6E09               	movwf	(lcd_str@str+1)^0,c
  1447  0074A6  ECCB  F031         	call	_lcd_str	;wreg free
  1448  0074AA                     
  1449                           ;main.c: 218:     lcd_cmd(0xD0);
  1450  0074AA  0ED0               	movlw	208
  1451  0074AC  EC9A  F02F         	call	_lcd_cmd
  1452                           
  1453                           ;main.c: 219:     lcd_str("Time B");
  1454  0074B0  0E19               	movlw	low (STR_24+10)
  1455  0074B2  6E08               	movwf	lcd_str@str^0,c
  1456  0074B4  0E7F               	movlw	high (STR_24+10)
  1457  0074B6  6E09               	movwf	(lcd_str@str+1)^0,c
  1458  0074B8  ECCB  F031         	call	_lcd_str	;wreg free
  1459  0074BC                     
  1460                           ;main.c: 220:     pwmInit();
  1461  0074BC  EC59  F02F         	call	_pwmInit	;wreg free
  1462  0074C0                     
  1463                           ;main.c: 221:     ssdInit();
  1464  0074C0  ECE0  F02F         	call	_ssdInit	;wreg free
  1465  0074C4                     
  1466                           ;main.c: 222:     kpInit();
  1467  0074C4  EC2C  F02F         	call	_kpInit	;wreg free
  1468  0074C8                     
  1469                           ;main.c: 223:     timerInit();
  1470  0074C8  EC28  F02F         	call	_timerInit	;wreg free
  1471  0074CC                     l3600:
  1472                           
  1473                           ;main.c: 227:         kpDebounce();
  1474  0074CC  ECA4  F036         	call	_kpDebounce	;wreg free
  1475  0074D0                     
  1476                           ;main.c: 230:         if (((kpRead()) & (1<<(8)))) {
  1477  0074D0  EC31  F02F         	call	_kpRead	;wreg free
  1478  0074D4  A002               	btfss	(?_kpRead+1)^0,0,c
  1479  0074D6  EF6F  F03A         	goto	u3001
  1480  0074DA  EF71  F03A         	goto	u3000
  1481  0074DE                     u3001:
  1482  0074DE  EF66  F03A         	goto	l3600
  1483  0074E2                     u3000:
  1484  0074E2                     
  1485                           ;main.c: 231:             ssdDigit(((cont / 1000) % 10), 0);
  1486  0074E2  0E00               	movlw	0
  1487  0074E4  6E0F               	movwf	ssdDigit@pos^0,c
  1488  0074E6  0E03               	movlw	3
  1489  0074E8  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1490  0074EA  0EE8               	movlw	232
  1491  0074EC  6E03               	movwf	___awdiv@divisor^0,c
  1492  0074EE  C05A  F001         	movff	main@cont,___awdiv@dividend
  1493  0074F2  C05B  F002         	movff	main@cont+1,___awdiv@dividend+1
  1494  0074F6  EC58  F033         	call	___awdiv	;wreg free
  1495  0074FA  C001  F009         	movff	?___awdiv,___awmod@dividend
  1496  0074FE  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1497  007502  0E00               	movlw	0
  1498  007504  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1499  007506  0E0A               	movlw	10
  1500  007508  6E0B               	movwf	___awmod@divisor^0,c
  1501  00750A  EC00  F033         	call	___awmod	;wreg free
  1502  00750E  5009               	movf	?___awmod^0,w,c
  1503  007510  EC36  F030         	call	_ssdDigit
  1504  007514                     
  1505                           ;main.c: 232:             for (i = 1; i > 0; i = i * 2) {
  1506  007514  0E01               	movlw	1
  1507  007516  6E5C               	movwf	main@i^0,c
  1508  007518                     l3608:
  1509  007518  505C               	movf	main@i^0,w,c
  1510  00751A  A4D8               	btfss	status,2,c
  1511  00751C  EF92  F03A         	goto	u3011
  1512  007520  EF94  F03A         	goto	u3010
  1513  007524                     u3011:
  1514  007524  EF96  F03A         	goto	l120
  1515  007528                     u3010:
  1516  007528  EFA6  F03A         	goto	l3618
  1517  00752C                     l120:
  1518                           
  1519                           ;main.c: 233:                 PORTB = i;
  1520  00752C  C05C  FF81         	movff	main@i,3969	;volatile
  1521                           
  1522                           ;main.c: 234:                 PORTD = i;
  1523  007530  C05C  FF83         	movff	main@i,3971	;volatile
  1524  007534                     
  1525                           ;main.c: 235:                 atraso_ms(100);
  1526  007534  0E00               	movlw	0
  1527  007536  6E02               	movwf	(atraso_ms@t+1)^0,c
  1528  007538  0E64               	movlw	100
  1529  00753A  6E01               	movwf	atraso_ms@t^0,c
  1530  00753C  ECEE  F030         	call	_atraso_ms	;wreg free
  1531  007540                     
  1532                           ;main.c: 236:             }
  1533  007540  505C               	movf	main@i^0,w,c
  1534  007542  0D02               	mullw	2
  1535  007544  CFF3 F05C          	movff	prodl,main@i
  1536  007548  EF8C  F03A         	goto	l3608
  1537  00754C                     l3618:
  1538                           
  1539                           ;main.c: 237:             PORTB = 0;
  1540  00754C  0E00               	movlw	0
  1541  00754E  6E81               	movwf	129,c	;volatile
  1542                           
  1543                           ;main.c: 238:             PORTD = 0;
  1544  007550  0E00               	movlw	0
  1545  007552  6E83               	movwf	131,c	;volatile
  1546                           
  1547                           ;main.c: 239:             for (i = 0; i < 2; i++) {
  1548  007554  0E00               	movlw	0
  1549  007556  6E5C               	movwf	main@i^0,c
  1550  007558                     l3620:
  1551  007558  0E01               	movlw	1
  1552  00755A  645C               	cpfsgt	main@i^0,c
  1553  00755C  EFB2  F03A         	goto	u3021
  1554  007560  EFB4  F03A         	goto	u3020
  1555  007564                     u3021:
  1556  007564  EFB6  F03A         	goto	l3624
  1557  007568                     u3020:
  1558  007568  EFC3  F03A         	goto	l3632
  1559  00756C                     l3624:
  1560                           
  1561                           ;main.c: 240:                 PORTB ^= 0xFF;
  1562  00756C  0EFF               	movlw	255
  1563  00756E  1A81               	xorwf	129,f,c	;volatile
  1564                           
  1565                           ;main.c: 241:                 PORTD ^= 0xFF;
  1566  007570  0EFF               	movlw	255
  1567  007572  1A83               	xorwf	131,f,c	;volatile
  1568  007574                     
  1569                           ;main.c: 242:                 atraso_ms(200);
  1570  007574  0E00               	movlw	0
  1571  007576  6E02               	movwf	(atraso_ms@t+1)^0,c
  1572  007578  0EC8               	movlw	200
  1573  00757A  6E01               	movwf	atraso_ms@t^0,c
  1574  00757C  ECEE  F030         	call	_atraso_ms	;wreg free
  1575  007580                     
  1576                           ;main.c: 243:             }
  1577  007580  2A5C               	incf	main@i^0,f,c
  1578  007582  EFAC  F03A         	goto	l3620
  1579  007586                     l3632:
  1580                           
  1581                           ;main.c: 245:             timerInit();
  1582  007586  EC28  F02F         	call	_timerInit	;wreg free
  1583  00758A                     
  1584                           ;main.c: 246:             tempflag = 1;
  1585  00758A  0E00               	movlw	0
  1586  00758C  6E59               	movwf	(main@tempflag+1)^0,c
  1587  00758E  0E01               	movlw	1
  1588  007590  6E58               	movwf	main@tempflag^0,c
  1589  007592                     l3636:
  1590                           
  1591                           ;main.c: 251:                 timerReset(5000);
  1592  007592  0E13               	movlw	19
  1593  007594  6E02               	movwf	(timerReset@tempo+1)^0,c
  1594  007596  0E88               	movlw	136
  1595  007598  6E01               	movwf	timerReset@tempo^0,c
  1596  00759A  EC63  F02F         	call	_timerReset	;wreg free
  1597  00759E                     
  1598                           ;main.c: 253:                 if (tempflag == 1) {
  1599  00759E  0458               	decf	main@tempflag^0,w,c
  1600  0075A0  1059               	iorwf	(main@tempflag+1)^0,w,c
  1601  0075A2  A4D8               	btfss	status,2,c
  1602  0075A4  EFD6  F03A         	goto	u3031
  1603  0075A8  EFD8  F03A         	goto	u3030
  1604  0075AC                     u3031:
  1605  0075AC  EF79  F03B         	goto	l3664
  1606  0075B0                     u3030:
  1607  0075B0                     
  1608                           ;main.c: 254:                     t++;
  1609  0075B0  4A49               	infsnz	main@t^0,f,c
  1610  0075B2  2A4A               	incf	(main@t+1)^0,f,c
  1611  0075B4                     
  1612                           ;main.c: 255:                     if (t >= 200) {
  1613  0075B4  504A               	movf	(main@t+1)^0,w,c
  1614  0075B6  E109               	bnz	u3040
  1615  0075B8  0EC8               	movlw	200
  1616  0075BA  5C49               	subwf	main@t^0,w,c
  1617  0075BC  A0D8               	btfss	status,0,c
  1618  0075BE  EFE3  F03A         	goto	u3041
  1619  0075C2  EFE5  F03A         	goto	u3040
  1620  0075C6                     u3041:
  1621  0075C6  EF79  F03B         	goto	l3664
  1622  0075CA                     u3040:
  1623  0075CA                     
  1624                           ;main.c: 256:                         cont--;
  1625  0075CA  065A               	decf	main@cont^0,f,c
  1626  0075CC  A0D8               	btfss	status,0,c
  1627  0075CE  065B               	decf	(main@cont+1)^0,f,c
  1628  0075D0                     
  1629                           ;main.c: 257:                         if (cont <= 0)
  1630  0075D0  BE5B               	btfsc	(main@cont+1)^0,7,c
  1631  0075D2  EFF5  F03A         	goto	u3050
  1632  0075D6  505B               	movf	(main@cont+1)^0,w,c
  1633  0075D8  E106               	bnz	u3051
  1634  0075DA  045A               	decf	main@cont^0,w,c
  1635  0075DC  B0D8               	btfsc	status,0,c
  1636  0075DE  EFF3  F03A         	goto	u3051
  1637  0075E2  EFF5  F03A         	goto	u3050
  1638  0075E6                     u3051:
  1639  0075E6  EFF9  F03A         	goto	l3650
  1640  0075EA                     u3050:
  1641  0075EA                     
  1642                           ;main.c: 258:                             flagcontrole = 1;
  1643  0075EA  0E00               	movlw	0
  1644  0075EC  6E53               	movwf	(main@flagcontrole+1)^0,c
  1645  0075EE  0E01               	movlw	1
  1646  0075F0  6E52               	movwf	main@flagcontrole^0,c
  1647  0075F2                     l3650:
  1648                           
  1649                           ;main.c: 259:                         if (cont / 10 % 10 == 9)
  1650  0075F2  0E00               	movlw	0
  1651  0075F4  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1652  0075F6  0E0A               	movlw	10
  1653  0075F8  6E03               	movwf	___awdiv@divisor^0,c
  1654  0075FA  C05A  F001         	movff	main@cont,___awdiv@dividend
  1655  0075FE  C05B  F002         	movff	main@cont+1,___awdiv@dividend+1
  1656  007602  EC58  F033         	call	___awdiv	;wreg free
  1657  007606  C001  F009         	movff	?___awdiv,___awmod@dividend
  1658  00760A  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1659  00760E  0E00               	movlw	0
  1660  007610  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1661  007612  0E0A               	movlw	10
  1662  007614  6E0B               	movwf	___awmod@divisor^0,c
  1663  007616  EC00  F033         	call	___awmod	;wreg free
  1664  00761A  0E09               	movlw	9
  1665  00761C  1809               	xorwf	?___awmod^0,w,c
  1666  00761E  100A               	iorwf	(?___awmod+1)^0,w,c
  1667  007620  A4D8               	btfss	status,2,c
  1668  007622  EF15  F03B         	goto	u3061
  1669  007626  EF17  F03B         	goto	u3060
  1670  00762A                     u3061:
  1671  00762A  EF1B  F03B         	goto	l3654
  1672  00762E                     u3060:
  1673  00762E                     
  1674                           ;main.c: 260:                             cont -= 40;
  1675  00762E  0ED8               	movlw	216
  1676  007630  265A               	addwf	main@cont^0,f,c
  1677  007632  0EFF               	movlw	255
  1678  007634  225B               	addwfc	(main@cont+1)^0,f,c
  1679  007636                     l3654:
  1680                           
  1681                           ;main.c: 261:                         ssdDigit(((cont / 1000) % 10), 0);
  1682  007636  0E00               	movlw	0
  1683  007638  6E0F               	movwf	ssdDigit@pos^0,c
  1684  00763A  0E03               	movlw	3
  1685  00763C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1686  00763E  0EE8               	movlw	232
  1687  007640  6E03               	movwf	___awdiv@divisor^0,c
  1688  007642  C05A  F001         	movff	main@cont,___awdiv@dividend
  1689  007646  C05B  F002         	movff	main@cont+1,___awdiv@dividend+1
  1690  00764A  EC58  F033         	call	___awdiv	;wreg free
  1691  00764E  C001  F009         	movff	?___awdiv,___awmod@dividend
  1692  007652  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1693  007656  0E00               	movlw	0
  1694  007658  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1695  00765A  0E0A               	movlw	10
  1696  00765C  6E0B               	movwf	___awmod@divisor^0,c
  1697  00765E  EC00  F033         	call	___awmod	;wreg free
  1698  007662  5009               	movf	?___awmod^0,w,c
  1699  007664  EC36  F030         	call	_ssdDigit
  1700  007668                     
  1701                           ;main.c: 262:                         ssdDigit(((cont / 100) % 10), 1);
  1702  007668  0E01               	movlw	1
  1703  00766A  6E0F               	movwf	ssdDigit@pos^0,c
  1704  00766C  0E00               	movlw	0
  1705  00766E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1706  007670  0E64               	movlw	100
  1707  007672  6E03               	movwf	___awdiv@divisor^0,c
  1708  007674  C05A  F001         	movff	main@cont,___awdiv@dividend
  1709  007678  C05B  F002         	movff	main@cont+1,___awdiv@dividend+1
  1710  00767C  EC58  F033         	call	___awdiv	;wreg free
  1711  007680  C001  F009         	movff	?___awdiv,___awmod@dividend
  1712  007684  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1713  007688  0E00               	movlw	0
  1714  00768A  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1715  00768C  0E0A               	movlw	10
  1716  00768E  6E0B               	movwf	___awmod@divisor^0,c
  1717  007690  EC00  F033         	call	___awmod	;wreg free
  1718  007694  5009               	movf	?___awmod^0,w,c
  1719  007696  EC36  F030         	call	_ssdDigit
  1720  00769A                     
  1721                           ;main.c: 263:                         ssdDigit(((cont / 10) % 10), 2);
  1722  00769A  0E02               	movlw	2
  1723  00769C  6E0F               	movwf	ssdDigit@pos^0,c
  1724  00769E  0E00               	movlw	0
  1725  0076A0  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1726  0076A2  0E0A               	movlw	10
  1727  0076A4  6E03               	movwf	___awdiv@divisor^0,c
  1728  0076A6  C05A  F001         	movff	main@cont,___awdiv@dividend
  1729  0076AA  C05B  F002         	movff	main@cont+1,___awdiv@dividend+1
  1730  0076AE  EC58  F033         	call	___awdiv	;wreg free
  1731  0076B2  C001  F009         	movff	?___awdiv,___awmod@dividend
  1732  0076B6  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1733  0076BA  0E00               	movlw	0
  1734  0076BC  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1735  0076BE  0E0A               	movlw	10
  1736  0076C0  6E0B               	movwf	___awmod@divisor^0,c
  1737  0076C2  EC00  F033         	call	___awmod	;wreg free
  1738  0076C6  5009               	movf	?___awmod^0,w,c
  1739  0076C8  EC36  F030         	call	_ssdDigit
  1740  0076CC                     
  1741                           ;main.c: 264:                         ssdDigit((cont % 10), 3);
  1742  0076CC  0E03               	movlw	3
  1743  0076CE  6E0F               	movwf	ssdDigit@pos^0,c
  1744  0076D0  C05A  F009         	movff	main@cont,___awmod@dividend
  1745  0076D4  C05B  F00A         	movff	main@cont+1,___awmod@dividend+1
  1746  0076D8  0E00               	movlw	0
  1747  0076DA  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1748  0076DC  0E0A               	movlw	10
  1749  0076DE  6E0B               	movwf	___awmod@divisor^0,c
  1750  0076E0  EC00  F033         	call	___awmod	;wreg free
  1751  0076E4  5009               	movf	?___awmod^0,w,c
  1752  0076E6  EC36  F030         	call	_ssdDigit
  1753  0076EA                     
  1754                           ;main.c: 265:                         t = 0;
  1755  0076EA  0E00               	movlw	0
  1756  0076EC  6E4A               	movwf	(main@t+1)^0,c
  1757  0076EE  0E00               	movlw	0
  1758  0076F0  6E49               	movwf	main@t^0,c
  1759  0076F2                     l3664:
  1760                           
  1761                           ;main.c: 269:                 kpDebounce();
  1762  0076F2  ECA4  F036         	call	_kpDebounce	;wreg free
  1763  0076F6                     
  1764                           ;main.c: 270:                 if (kpRead() != temp1) {
  1765  0076F6  EC31  F02F         	call	_kpRead	;wreg free
  1766  0076FA  5047               	movf	main@temp1^0,w,c
  1767  0076FC  1801               	xorwf	?_kpRead^0,w,c
  1768  0076FE  E109               	bnz	u3070
  1769  007700  5048               	movf	(main@temp1+1)^0,w,c
  1770  007702  1802               	xorwf	(?_kpRead+1)^0,w,c
  1771  007704  B4D8               	btfsc	status,2,c
  1772  007706  EF87  F03B         	goto	u3071
  1773  00770A  EF89  F03B         	goto	u3070
  1774  00770E                     u3071:
  1775  00770E  EF7E  F03E         	goto	l3970
  1776  007712                     u3070:
  1777  007712                     
  1778                           ;main.c: 272:                     temp1 = kpRead();
  1779  007712  EC31  F02F         	call	_kpRead	;wreg free
  1780  007716  C001  F047         	movff	?_kpRead,main@temp1
  1781  00771A  C002  F048         	movff	?_kpRead+1,main@temp1+1
  1782                           
  1783                           ;main.c: 274:                     if (((kpRead()) & (1<<(8)))) {
  1784  00771E  EC31  F02F         	call	_kpRead	;wreg free
  1785  007722  A002               	btfss	(?_kpRead+1)^0,0,c
  1786  007724  EF96  F03B         	goto	u3081
  1787  007728  EF98  F03B         	goto	u3080
  1788  00772C                     u3081:
  1789  00772C  EFA7  F03B         	goto	l3676
  1790  007730                     u3080:
  1791  007730                     
  1792                           ;main.c: 275:                         partida_andamento(gols, gols2, turno);
  1793  007730  C057  F00D         	movff	main@gols2,partida_andamento@gols2
  1794  007734  C054  F00E         	movff	main@turno,partida_andamento@turno
  1795  007738  5056               	movf	main@gols^0,w,c
  1796  00773A  EC90  F031         	call	_partida_andamento
  1797  00773E                     
  1798                           ;main.c: 276:                         tempflag = 1;
  1799  00773E  0E00               	movlw	0
  1800  007740  6E59               	movwf	(main@tempflag+1)^0,c
  1801  007742  0E01               	movlw	1
  1802  007744  6E58               	movwf	main@tempflag^0,c
  1803  007746                     
  1804                           ;main.c: 277:                         flagfalta = 1;
  1805  007746  0E00               	movlw	0
  1806  007748  6E4C               	movwf	(main@flagfalta+1)^0,c
  1807  00774A  0E01               	movlw	1
  1808  00774C  6E4B               	movwf	main@flagfalta^0,c
  1809  00774E                     l3676:
  1810                           
  1811                           ;main.c: 281:                     if ((((kpRead()) & (1<<(3)))) && tempflag == 1) {
  1812  00774E  EC31  F02F         	call	_kpRead	;wreg free
  1813  007752  A601               	btfss	?_kpRead^0,3,c
  1814  007754  EFAE  F03B         	goto	u3091
  1815  007758  EFB0  F03B         	goto	u3090
  1816  00775C                     u3091:
  1817  00775C  EF29  F03C         	goto	l3738
  1818  007760                     u3090:
  1819  007760  0458               	decf	main@tempflag^0,w,c
  1820  007762  1059               	iorwf	(main@tempflag+1)^0,w,c
  1821  007764  A4D8               	btfss	status,2,c
  1822  007766  EFB7  F03B         	goto	u3101
  1823  00776A  EFB9  F03B         	goto	u3100
  1824  00776E                     u3101:
  1825  00776E  EF29  F03C         	goto	l3738
  1826  007772                     u3100:
  1827  007772                     
  1828                           ;main.c: 282:                         tempflag = 0;
  1829  007772  0E00               	movlw	0
  1830  007774  6E59               	movwf	(main@tempflag+1)^0,c
  1831  007776  0E00               	movlw	0
  1832  007778  6E58               	movwf	main@tempflag^0,c
  1833  00777A                     
  1834                           ;main.c: 283:                         lcd_cmd(0x80);
  1835  00777A  0E80               	movlw	128
  1836  00777C  EC9A  F02F         	call	_lcd_cmd
  1837  007780                     
  1838                           ;main.c: 284:                         lcd_str("Gooool Time A!!!");
  1839  007780  0EDC               	movlw	low STR_13
  1840  007782  6E08               	movwf	lcd_str@str^0,c
  1841  007784  0E7E               	movlw	high STR_13
  1842  007786  6E09               	movwf	(lcd_str@str+1)^0,c
  1843  007788  ECCB  F031         	call	_lcd_str	;wreg free
  1844  00778C                     
  1845                           ;main.c: 285:                         lcd_cmd(0x90 + 9);
  1846  00778C  0E99               	movlw	153
  1847  00778E  EC9A  F02F         	call	_lcd_cmd
  1848  007792                     
  1849                           ;main.c: 286:                         gols++;
  1850  007792  2A56               	incf	main@gols^0,f,c
  1851  007794                     
  1852                           ;main.c: 287:                         lcd_dat(gols);
  1853  007794  5056               	movf	main@gols^0,w,c
  1854  007796  ECAF  F02F         	call	_lcd_dat
  1855  00779A                     
  1856                           ;main.c: 288:                         pwmSet1(32);
  1857  00779A  0E20               	movlw	32
  1858  00779C  EC20  F031         	call	_pwmSet1
  1859  0077A0                     
  1860                           ;main.c: 289:                         pwmFrequency(10000);
  1861  0077A0  0E27               	movlw	39
  1862  0077A2  6E10               	movwf	(pwmFrequency@freq+1)^0,c
  1863  0077A4  0E10               	movlw	16
  1864  0077A6  6E0F               	movwf	pwmFrequency@freq^0,c
  1865  0077A8  EC87  F02F         	call	_pwmFrequency	;wreg free
  1866  0077AC                     
  1867                           ;main.c: 291:                         for (k = 0; k < 3; k++) {
  1868  0077AC  0E00               	movlw	0
  1869  0077AE  6E55               	movwf	main@k^0,c
  1870  0077B0                     l3698:
  1871  0077B0  0E02               	movlw	2
  1872  0077B2  6455               	cpfsgt	main@k^0,c
  1873  0077B4  EFDE  F03B         	goto	u3111
  1874  0077B8  EFE0  F03B         	goto	u3110
  1875  0077BC                     u3111:
  1876  0077BC  EFE2  F03B         	goto	l3702
  1877  0077C0                     u3110:
  1878  0077C0  EF09  F03C         	goto	l3722
  1879  0077C4                     l3702:
  1880                           
  1881                           ;main.c: 292:                             for (i = 1; i > 0; i = i * 2) {
  1882  0077C4  0E01               	movlw	1
  1883  0077C6  6E5C               	movwf	main@i^0,c
  1884  0077C8  505C               	movf	main@i^0,w,c
  1885  0077CA  A4D8               	btfss	status,2,c
  1886  0077CC  EFEA  F03B         	goto	u3121
  1887  0077D0  EFEC  F03B         	goto	u3120
  1888  0077D4                     u3121:
  1889  0077D4  EFEE  F03B         	goto	l3706
  1890  0077D8                     u3120:
  1891  0077D8  EF05  F03C         	goto	l3718
  1892  0077DC                     l3706:
  1893                           
  1894                           ;main.c: 293:                                 ((TRISC) |= (1<<(1)));
  1895  0077DC  8294               	bsf	148,1,c	;volatile
  1896  0077DE                     
  1897                           ;main.c: 294:                                 PORTB = i;
  1898  0077DE  C05C  FF81         	movff	main@i,3969	;volatile
  1899  0077E2                     
  1900                           ;main.c: 295:                                 PORTD = i;
  1901  0077E2  C05C  FF83         	movff	main@i,3971	;volatile
  1902  0077E6                     
  1903                           ;main.c: 296:                                 atraso_ms(100);
  1904  0077E6  0E00               	movlw	0
  1905  0077E8  6E02               	movwf	(atraso_ms@t+1)^0,c
  1906  0077EA  0E64               	movlw	100
  1907  0077EC  6E01               	movwf	atraso_ms@t^0,c
  1908  0077EE  ECEE  F030         	call	_atraso_ms	;wreg free
  1909  0077F2                     
  1910                           ;main.c: 297:                             }
  1911  0077F2  505C               	movf	main@i^0,w,c
  1912  0077F4  0D02               	mullw	2
  1913  0077F6  CFF3 F05C          	movff	prodl,main@i
  1914  0077FA  505C               	movf	main@i^0,w,c
  1915  0077FC  A4D8               	btfss	status,2,c
  1916  0077FE  EF03  F03C         	goto	u3131
  1917  007802  EF05  F03C         	goto	u3130
  1918  007806                     u3131:
  1919  007806  EFEE  F03B         	goto	l3706
  1920  00780A                     u3130:
  1921  00780A                     l3718:
  1922                           
  1923                           ;main.c: 298:                             ((TRISC) &= ~(1<<(1)));
  1924  00780A  9294               	bcf	148,1,c	;volatile
  1925                           
  1926                           ;main.c: 299:                         }
  1927  00780C  2A55               	incf	main@k^0,f,c
  1928  00780E  EFD8  F03B         	goto	l3698
  1929  007812                     l3722:
  1930                           
  1931                           ;main.c: 301:                         PORTB = 0;
  1932  007812  0E00               	movlw	0
  1933  007814  6E81               	movwf	129,c	;volatile
  1934                           
  1935                           ;main.c: 302:                         PORTD = 0;
  1936  007816  0E00               	movlw	0
  1937  007818  6E83               	movwf	131,c	;volatile
  1938                           
  1939                           ;main.c: 303:                         for (i = 0; i < 2; i++) {
  1940  00781A  0E00               	movlw	0
  1941  00781C  6E5C               	movwf	main@i^0,c
  1942  00781E                     l3724:
  1943  00781E  0E01               	movlw	1
  1944  007820  645C               	cpfsgt	main@i^0,c
  1945  007822  EF15  F03C         	goto	u3141
  1946  007826  EF17  F03C         	goto	u3140
  1947  00782A                     u3141:
  1948  00782A  EF19  F03C         	goto	l3728
  1949  00782E                     u3140:
  1950  00782E  EF26  F03C         	goto	l3736
  1951  007832                     l3728:
  1952                           
  1953                           ;main.c: 304:                             PORTB ^= 0xFF;
  1954  007832  0EFF               	movlw	255
  1955  007834  1A81               	xorwf	129,f,c	;volatile
  1956                           
  1957                           ;main.c: 305:                             PORTD ^= 0xFF;
  1958  007836  0EFF               	movlw	255
  1959  007838  1A83               	xorwf	131,f,c	;volatile
  1960  00783A                     
  1961                           ;main.c: 306:                             atraso_ms(200);
  1962  00783A  0E00               	movlw	0
  1963  00783C  6E02               	movwf	(atraso_ms@t+1)^0,c
  1964  00783E  0EC8               	movlw	200
  1965  007840  6E01               	movwf	atraso_ms@t^0,c
  1966  007842  ECEE  F030         	call	_atraso_ms	;wreg free
  1967  007846                     
  1968                           ;main.c: 307:                         }
  1969  007846  2A5C               	incf	main@i^0,f,c
  1970  007848  EF0F  F03C         	goto	l3724
  1971  00784C                     l3736:
  1972                           
  1973                           ;main.c: 308:                         pwmSet1(0);
  1974  00784C  0E00               	movlw	0
  1975  00784E  EC20  F031         	call	_pwmSet1
  1976  007852                     l3738:
  1977                           
  1978                           ;main.c: 312:                     if ((((kpRead()) & (1<<(7)))) && tempflag == 1) {
  1979  007852  EC31  F02F         	call	_kpRead	;wreg free
  1980  007856  AE01               	btfss	?_kpRead^0,7,c
  1981  007858  EF30  F03C         	goto	u3151
  1982  00785C  EF32  F03C         	goto	u3150
  1983  007860                     u3151:
  1984  007860  EFAB  F03C         	goto	l3800
  1985  007864                     u3150:
  1986  007864  0458               	decf	main@tempflag^0,w,c
  1987  007866  1059               	iorwf	(main@tempflag+1)^0,w,c
  1988  007868  A4D8               	btfss	status,2,c
  1989  00786A  EF39  F03C         	goto	u3161
  1990  00786E  EF3B  F03C         	goto	u3160
  1991  007872                     u3161:
  1992  007872  EFAB  F03C         	goto	l3800
  1993  007876                     u3160:
  1994  007876                     
  1995                           ;main.c: 313:                         tempflag = 0;
  1996  007876  0E00               	movlw	0
  1997  007878  6E59               	movwf	(main@tempflag+1)^0,c
  1998  00787A  0E00               	movlw	0
  1999  00787C  6E58               	movwf	main@tempflag^0,c
  2000  00787E                     
  2001                           ;main.c: 314:                         lcd_cmd(0x80);
  2002  00787E  0E80               	movlw	128
  2003  007880  EC9A  F02F         	call	_lcd_cmd
  2004  007884                     
  2005                           ;main.c: 315:                         lcd_str("Gooool Time B!!!");
  2006  007884  0EED               	movlw	low STR_14
  2007  007886  6E08               	movwf	lcd_str@str^0,c
  2008  007888  0E7E               	movlw	high STR_14
  2009  00788A  6E09               	movwf	(lcd_str@str+1)^0,c
  2010  00788C  ECCB  F031         	call	_lcd_str	;wreg free
  2011  007890                     
  2012                           ;main.c: 316:                         lcd_cmd(0xD0 + 9);
  2013  007890  0ED9               	movlw	217
  2014  007892  EC9A  F02F         	call	_lcd_cmd
  2015  007896                     
  2016                           ;main.c: 317:                         gols2++;
  2017  007896  2A57               	incf	main@gols2^0,f,c
  2018  007898                     
  2019                           ;main.c: 318:                         lcd_dat(gols2);
  2020  007898  5057               	movf	main@gols2^0,w,c
  2021  00789A  ECAF  F02F         	call	_lcd_dat
  2022  00789E                     
  2023                           ;main.c: 319:                         pwmSet1(32);
  2024  00789E  0E20               	movlw	32
  2025  0078A0  EC20  F031         	call	_pwmSet1
  2026  0078A4                     
  2027                           ;main.c: 320:                         pwmFrequency(10000);
  2028  0078A4  0E27               	movlw	39
  2029  0078A6  6E10               	movwf	(pwmFrequency@freq+1)^0,c
  2030  0078A8  0E10               	movlw	16
  2031  0078AA  6E0F               	movwf	pwmFrequency@freq^0,c
  2032  0078AC  EC87  F02F         	call	_pwmFrequency	;wreg free
  2033  0078B0                     
  2034                           ;main.c: 321:                         for (k = 0; k < 3; k++) {
  2035  0078B0  0E00               	movlw	0
  2036  0078B2  6E55               	movwf	main@k^0,c
  2037  0078B4                     l3760:
  2038  0078B4  0E02               	movlw	2
  2039  0078B6  6455               	cpfsgt	main@k^0,c
  2040  0078B8  EF60  F03C         	goto	u3171
  2041  0078BC  EF62  F03C         	goto	u3170
  2042  0078C0                     u3171:
  2043  0078C0  EF64  F03C         	goto	l3764
  2044  0078C4                     u3170:
  2045  0078C4  EF8B  F03C         	goto	l3784
  2046  0078C8                     l3764:
  2047                           
  2048                           ;main.c: 322:                             for (i = 1; i > 0; i = i * 2) {
  2049  0078C8  0E01               	movlw	1
  2050  0078CA  6E5C               	movwf	main@i^0,c
  2051  0078CC  505C               	movf	main@i^0,w,c
  2052  0078CE  A4D8               	btfss	status,2,c
  2053  0078D0  EF6C  F03C         	goto	u3181
  2054  0078D4  EF6E  F03C         	goto	u3180
  2055  0078D8                     u3181:
  2056  0078D8  EF70  F03C         	goto	l3768
  2057  0078DC                     u3180:
  2058  0078DC  EF87  F03C         	goto	l3780
  2059  0078E0                     l3768:
  2060                           
  2061                           ;main.c: 323:                                 ((TRISC) |= (1<<(1)));
  2062  0078E0  8294               	bsf	148,1,c	;volatile
  2063  0078E2                     
  2064                           ;main.c: 324:                                 PORTB = i;
  2065  0078E2  C05C  FF81         	movff	main@i,3969	;volatile
  2066  0078E6                     
  2067                           ;main.c: 325:                                 PORTD = i;
  2068  0078E6  C05C  FF83         	movff	main@i,3971	;volatile
  2069  0078EA                     
  2070                           ;main.c: 326:                                 atraso_ms(100);
  2071  0078EA  0E00               	movlw	0
  2072  0078EC  6E02               	movwf	(atraso_ms@t+1)^0,c
  2073  0078EE  0E64               	movlw	100
  2074  0078F0  6E01               	movwf	atraso_ms@t^0,c
  2075  0078F2  ECEE  F030         	call	_atraso_ms	;wreg free
  2076  0078F6                     
  2077                           ;main.c: 327:                             }
  2078  0078F6  505C               	movf	main@i^0,w,c
  2079  0078F8  0D02               	mullw	2
  2080  0078FA  CFF3 F05C          	movff	prodl,main@i
  2081  0078FE  505C               	movf	main@i^0,w,c
  2082  007900  A4D8               	btfss	status,2,c
  2083  007902  EF85  F03C         	goto	u3191
  2084  007906  EF87  F03C         	goto	u3190
  2085  00790A                     u3191:
  2086  00790A  EF70  F03C         	goto	l3768
  2087  00790E                     u3190:
  2088  00790E                     l3780:
  2089                           
  2090                           ;main.c: 328:                             ((TRISC) &= ~(1<<(1)));
  2091  00790E  9294               	bcf	148,1,c	;volatile
  2092                           
  2093                           ;main.c: 329:                         }
  2094  007910  2A55               	incf	main@k^0,f,c
  2095  007912  EF5A  F03C         	goto	l3760
  2096  007916                     l3784:
  2097                           
  2098                           ;main.c: 330:                         PORTB = 0;
  2099  007916  0E00               	movlw	0
  2100  007918  6E81               	movwf	129,c	;volatile
  2101                           
  2102                           ;main.c: 331:                         PORTD = 0;
  2103  00791A  0E00               	movlw	0
  2104  00791C  6E83               	movwf	131,c	;volatile
  2105                           
  2106                           ;main.c: 332:                         for (i = 0; i < 2; i++) {
  2107  00791E  0E00               	movlw	0
  2108  007920  6E5C               	movwf	main@i^0,c
  2109  007922                     l3786:
  2110  007922  0E01               	movlw	1
  2111  007924  645C               	cpfsgt	main@i^0,c
  2112  007926  EF97  F03C         	goto	u3201
  2113  00792A  EF99  F03C         	goto	u3200
  2114  00792E                     u3201:
  2115  00792E  EF9B  F03C         	goto	l3790
  2116  007932                     u3200:
  2117  007932  EFA8  F03C         	goto	l3798
  2118  007936                     l3790:
  2119                           
  2120                           ;main.c: 333:                             PORTB ^= 0xFF;
  2121  007936  0EFF               	movlw	255
  2122  007938  1A81               	xorwf	129,f,c	;volatile
  2123                           
  2124                           ;main.c: 334:                             PORTD ^= 0xFF;
  2125  00793A  0EFF               	movlw	255
  2126  00793C  1A83               	xorwf	131,f,c	;volatile
  2127  00793E                     
  2128                           ;main.c: 335:                             atraso_ms(200);
  2129  00793E  0E00               	movlw	0
  2130  007940  6E02               	movwf	(atraso_ms@t+1)^0,c
  2131  007942  0EC8               	movlw	200
  2132  007944  6E01               	movwf	atraso_ms@t^0,c
  2133  007946  ECEE  F030         	call	_atraso_ms	;wreg free
  2134  00794A                     
  2135                           ;main.c: 336:                         }
  2136  00794A  2A5C               	incf	main@i^0,f,c
  2137  00794C  EF91  F03C         	goto	l3786
  2138  007950                     l3798:
  2139                           
  2140                           ;main.c: 337:                         pwmSet1(0);
  2141  007950  0E00               	movlw	0
  2142  007952  EC20  F031         	call	_pwmSet1
  2143  007956                     l3800:
  2144                           
  2145                           ;main.c: 341:                     if ((((kpRead()) & (1<<(2)))) && tempflag == 1) {
  2146  007956  EC31  F02F         	call	_kpRead	;wreg free
  2147  00795A  A401               	btfss	?_kpRead^0,2,c
  2148  00795C  EFB2  F03C         	goto	u3211
  2149  007960  EFB4  F03C         	goto	u3210
  2150  007964                     u3211:
  2151  007964  EFCA  F03C         	goto	l3810
  2152  007968                     u3210:
  2153  007968  0458               	decf	main@tempflag^0,w,c
  2154  00796A  1059               	iorwf	(main@tempflag+1)^0,w,c
  2155  00796C  A4D8               	btfss	status,2,c
  2156  00796E  EFBB  F03C         	goto	u3221
  2157  007972  EFBD  F03C         	goto	u3220
  2158  007976                     u3221:
  2159  007976  EFCA  F03C         	goto	l3810
  2160  00797A                     u3220:
  2161  00797A                     
  2162                           ;main.c: 342:                         tempflag = 0;
  2163  00797A  0E00               	movlw	0
  2164  00797C  6E59               	movwf	(main@tempflag+1)^0,c
  2165  00797E  0E00               	movlw	0
  2166  007980  6E58               	movwf	main@tempflag^0,c
  2167  007982                     
  2168                           ;main.c: 343:                         lcd_cmd(0x80);
  2169  007982  0E80               	movlw	128
  2170  007984  EC9A  F02F         	call	_lcd_cmd
  2171  007988                     
  2172                           ;main.c: 344:                         lcd_str("   Bola Fora  ");
  2173  007988  0E50               	movlw	low STR_15
  2174  00798A  6E08               	movwf	lcd_str@str^0,c
  2175  00798C  0E7F               	movlw	high STR_15
  2176  00798E  6E09               	movwf	(lcd_str@str+1)^0,c
  2177  007990  ECCB  F031         	call	_lcd_str	;wreg free
  2178  007994                     l3810:
  2179                           
  2180                           ;main.c: 348:                     if ((((kpRead()) & (1<<(6)))) && tempflag == 1) {
  2181  007994  EC31  F02F         	call	_kpRead	;wreg free
  2182  007998  AC01               	btfss	?_kpRead^0,6,c
  2183  00799A  EFD1  F03C         	goto	u3231
  2184  00799E  EFD3  F03C         	goto	u3230
  2185  0079A2                     u3231:
  2186  0079A2  EF20  F03D         	goto	l3844
  2187  0079A6                     u3230:
  2188  0079A6  0458               	decf	main@tempflag^0,w,c
  2189  0079A8  1059               	iorwf	(main@tempflag+1)^0,w,c
  2190  0079AA  A4D8               	btfss	status,2,c
  2191  0079AC  EFDA  F03C         	goto	u3241
  2192  0079B0  EFDC  F03C         	goto	u3240
  2193  0079B4                     u3241:
  2194  0079B4  EF20  F03D         	goto	l3844
  2195  0079B8                     u3240:
  2196  0079B8                     
  2197                           ;main.c: 349:                         tempflag = 0;
  2198  0079B8  0E00               	movlw	0
  2199  0079BA  6E59               	movwf	(main@tempflag+1)^0,c
  2200  0079BC  0E00               	movlw	0
  2201  0079BE  6E58               	movwf	main@tempflag^0,c
  2202                           
  2203                           ;main.c: 350:                         flagfalta = 0;
  2204  0079C0  0E00               	movlw	0
  2205  0079C2  6E4C               	movwf	(main@flagfalta+1)^0,c
  2206  0079C4  0E00               	movlw	0
  2207  0079C6  6E4B               	movwf	main@flagfalta^0,c
  2208  0079C8                     
  2209                           ;main.c: 351:                         lcd_cmd(0x80);
  2210  0079C8  0E80               	movlw	128
  2211  0079CA  EC9A  F02F         	call	_lcd_cmd
  2212  0079CE                     
  2213                           ;main.c: 352:                         lcd_str("     Falta     ");
  2214  0079CE  0E20               	movlw	low STR_16
  2215  0079D0  6E08               	movwf	lcd_str@str^0,c
  2216  0079D2  0E7F               	movlw	high STR_16
  2217  0079D4  6E09               	movwf	(lcd_str@str+1)^0,c
  2218  0079D6  ECCB  F031         	call	_lcd_str	;wreg free
  2219  0079DA                     
  2220                           ;main.c: 353:                         lcd_cmd(0xC0);
  2221  0079DA  0EC0               	movlw	192
  2222  0079DC  EC9A  F02F         	call	_lcd_cmd
  2223  0079E0                     
  2224                           ;main.c: 354:                         lcd_str("Numeros Cartoes");
  2225  0079E0  0E40               	movlw	low STR_17
  2226  0079E2  6E08               	movwf	lcd_str@str^0,c
  2227  0079E4  0E7F               	movlw	high STR_17
  2228  0079E6  6E09               	movwf	(lcd_str@str+1)^0,c
  2229  0079E8  ECCB  F031         	call	_lcd_str	;wreg free
  2230  0079EC                     
  2231                           ;main.c: 355:                         lcd_cmd(0x90 + 7);
  2232  0079EC  0E97               	movlw	151
  2233  0079EE  EC9A  F02F         	call	_lcd_cmd
  2234  0079F2                     
  2235                           ;main.c: 356:                         lcd_str(" A:");
  2236  0079F2  0EF6               	movlw	low STR_18
  2237  0079F4  6E08               	movwf	lcd_str@str^0,c
  2238  0079F6  0E7F               	movlw	high STR_18
  2239  0079F8  6E09               	movwf	(lcd_str@str+1)^0,c
  2240  0079FA  ECCB  F031         	call	_lcd_str	;wreg free
  2241  0079FE                     
  2242                           ;main.c: 357:                         lcd_dat(caA);
  2243  0079FE  5050               	movf	main@caA^0,w,c
  2244  007A00  ECAF  F02F         	call	_lcd_dat
  2245  007A04                     
  2246                           ;main.c: 358:                         lcd_str(" V:");
  2247  007A04  0EFA               	movlw	low STR_19
  2248  007A06  6E08               	movwf	lcd_str@str^0,c
  2249  007A08  0E7F               	movlw	high STR_19
  2250  007A0A  6E09               	movwf	(lcd_str@str+1)^0,c
  2251  007A0C  ECCB  F031         	call	_lcd_str	;wreg free
  2252  007A10                     
  2253                           ;main.c: 359:                         lcd_dat(cvA);
  2254  007A10  504E               	movf	main@cvA^0,w,c
  2255  007A12  ECAF  F02F         	call	_lcd_dat
  2256  007A16                     
  2257                           ;main.c: 360:                         lcd_cmd(0xD0 + 7);
  2258  007A16  0ED7               	movlw	215
  2259  007A18  EC9A  F02F         	call	_lcd_cmd
  2260  007A1C                     
  2261                           ;main.c: 361:                         lcd_str(" A:");
  2262  007A1C  0EF6               	movlw	low STR_18
  2263  007A1E  6E08               	movwf	lcd_str@str^0,c
  2264  007A20  0E7F               	movlw	high STR_18
  2265  007A22  6E09               	movwf	(lcd_str@str+1)^0,c
  2266  007A24  ECCB  F031         	call	_lcd_str	;wreg free
  2267  007A28                     
  2268                           ;main.c: 362:                         lcd_dat(caB);
  2269  007A28  5051               	movf	main@caB^0,w,c
  2270  007A2A  ECAF  F02F         	call	_lcd_dat
  2271  007A2E                     
  2272                           ;main.c: 363:                         lcd_str(" V:");
  2273  007A2E  0EFA               	movlw	low STR_19
  2274  007A30  6E08               	movwf	lcd_str@str^0,c
  2275  007A32  0E7F               	movlw	high STR_19
  2276  007A34  6E09               	movwf	(lcd_str@str+1)^0,c
  2277  007A36  ECCB  F031         	call	_lcd_str	;wreg free
  2278  007A3A                     
  2279                           ;main.c: 364:                         lcd_dat(cvB);
  2280  007A3A  504F               	movf	main@cvB^0,w,c
  2281  007A3C  ECAF  F02F         	call	_lcd_dat
  2282  007A40                     l3844:
  2283                           
  2284                           ;main.c: 369:                         if (flagfalta == 0) {
  2285  007A40  504B               	movf	main@flagfalta^0,w,c
  2286  007A42  104C               	iorwf	(main@flagfalta+1)^0,w,c
  2287  007A44  A4D8               	btfss	status,2,c
  2288  007A46  EF27  F03D         	goto	u3251
  2289  007A4A  EF29  F03D         	goto	u3250
  2290  007A4E                     u3251:
  2291  007A4E  EFC0  F03D         	goto	l3932
  2292  007A52                     u3250:
  2293  007A52                     
  2294                           ;main.c: 372:                                 if (((kpRead()) & (1<<(3)))) {
  2295  007A52  EC31  F02F         	call	_kpRead	;wreg free
  2296  007A56  A601               	btfss	?_kpRead^0,3,c
  2297  007A58  EF30  F03D         	goto	u3261
  2298  007A5C  EF32  F03D         	goto	u3260
  2299  007A60                     u3261:
  2300  007A60  EF4E  F03D         	goto	l3864
  2301  007A64                     u3260:
  2302  007A64                     
  2303                           ;main.c: 373:                                     lcd_cmd(0x80);
  2304  007A64  0E80               	movlw	128
  2305  007A66  EC9A  F02F         	call	_lcd_cmd
  2306  007A6A                     
  2307                           ;main.c: 374:                                     lcd_str("Cartao Am Time A");
  2308  007A6A  0EFE               	movlw	low STR_22
  2309  007A6C  6E08               	movwf	lcd_str@str^0,c
  2310  007A6E  0E7E               	movlw	high STR_22
  2311  007A70  6E09               	movwf	(lcd_str@str+1)^0,c
  2312  007A72  ECCB  F031         	call	_lcd_str	;wreg free
  2313  007A76                     
  2314                           ;main.c: 375:                                     caA++;
  2315  007A76  2A50               	incf	main@caA^0,f,c
  2316  007A78                     
  2317                           ;main.c: 376:                                     lcd_cmd(0x90 + 10);
  2318  007A78  0E9A               	movlw	154
  2319  007A7A  EC9A  F02F         	call	_lcd_cmd
  2320  007A7E                     
  2321                           ;main.c: 377:                                     lcd_dat(caA);
  2322  007A7E  5050               	movf	main@caA^0,w,c
  2323  007A80  ECAF  F02F         	call	_lcd_dat
  2324  007A84                     
  2325                           ;main.c: 378:                                     pwmSet1(10);
  2326  007A84  0E0A               	movlw	10
  2327  007A86  EC20  F031         	call	_pwmSet1
  2328  007A8A                     
  2329                           ;main.c: 379:                                     atraso_s(1);
  2330  007A8A  0E00               	movlw	0
  2331  007A8C  6E08               	movwf	(atraso_s@t+1)^0,c
  2332  007A8E  0E01               	movlw	1
  2333  007A90  6E07               	movwf	atraso_s@t^0,c
  2334  007A92  EC07  F032         	call	_atraso_s	;wreg free
  2335  007A96                     
  2336                           ;main.c: 380:                                     pwmSet1(0);
  2337  007A96  0E00               	movlw	0
  2338  007A98  EC20  F031         	call	_pwmSet1
  2339  007A9C                     l3864:
  2340                           
  2341                           ;main.c: 382:                                 if (((kpRead()) & (1<<(11)))) {
  2342  007A9C  EC31  F02F         	call	_kpRead	;wreg free
  2343  007AA0  A602               	btfss	(?_kpRead+1)^0,3,c
  2344  007AA2  EF55  F03D         	goto	u3271
  2345  007AA6  EF57  F03D         	goto	u3270
  2346  007AAA                     u3271:
  2347  007AAA  EF76  F03D         	goto	l3888
  2348  007AAE                     u3270:
  2349  007AAE                     
  2350                           ;main.c: 383:                                     TRISEbits.TRISE0 = 0;
  2351  007AAE  9096               	bcf	150,0,c	;volatile
  2352  007AB0                     
  2353                           ;main.c: 384:                                     lcd_cmd(0x80);
  2354  007AB0  0E80               	movlw	128
  2355  007AB2  EC9A  F02F         	call	_lcd_cmd
  2356  007AB6                     
  2357                           ;main.c: 385:                                     lcd_str("Cartao V Time A ");
  2358  007AB6  0EBA               	movlw	low STR_23
  2359  007AB8  6E08               	movwf	lcd_str@str^0,c
  2360  007ABA  0E7E               	movlw	high STR_23
  2361  007ABC  6E09               	movwf	(lcd_str@str+1)^0,c
  2362  007ABE  ECCB  F031         	call	_lcd_str	;wreg free
  2363  007AC2                     
  2364                           ;main.c: 386:                                     cvA++;
  2365  007AC2  2A4E               	incf	main@cvA^0,f,c
  2366  007AC4                     
  2367                           ;main.c: 387:                                     lcd_cmd(0x90 + 14);
  2368  007AC4  0E9E               	movlw	158
  2369  007AC6  EC9A  F02F         	call	_lcd_cmd
  2370  007ACA                     
  2371                           ;main.c: 388:                                     lcd_dat(cvA);
  2372  007ACA  504E               	movf	main@cvA^0,w,c
  2373  007ACC  ECAF  F02F         	call	_lcd_dat
  2374  007AD0                     
  2375                           ;main.c: 389:                                     pwmSet1(10);
  2376  007AD0  0E0A               	movlw	10
  2377  007AD2  EC20  F031         	call	_pwmSet1
  2378  007AD6                     
  2379                           ;main.c: 390:                                     PORTEbits.RE0 ^= 1;
  2380  007AD6  7084               	btg	132,0,c	;volatile
  2381  007AD8                     
  2382                           ;main.c: 391:                                     atraso_s(1);
  2383  007AD8  0E00               	movlw	0
  2384  007ADA  6E08               	movwf	(atraso_s@t+1)^0,c
  2385  007ADC  0E01               	movlw	1
  2386  007ADE  6E07               	movwf	atraso_s@t^0,c
  2387  007AE0  EC07  F032         	call	_atraso_s	;wreg free
  2388  007AE4                     
  2389                           ;main.c: 392:                                     PORTEbits.RE0 = 0;
  2390  007AE4  9084               	bcf	132,0,c	;volatile
  2391  007AE6                     
  2392                           ;main.c: 393:                                     pwmSet1(0);
  2393  007AE6  0E00               	movlw	0
  2394  007AE8  EC20  F031         	call	_pwmSet1
  2395  007AEC                     l3888:
  2396                           
  2397                           ;main.c: 396:                                 if (((kpRead()) & (1<<(2)))) {
  2398  007AEC  EC31  F02F         	call	_kpRead	;wreg free
  2399  007AF0  A401               	btfss	?_kpRead^0,2,c
  2400  007AF2  EF7D  F03D         	goto	u3281
  2401  007AF6  EF7F  F03D         	goto	u3280
  2402  007AFA                     u3281:
  2403  007AFA  EF98  F03D         	goto	l3908
  2404  007AFE                     u3280:
  2405  007AFE                     
  2406                           ;main.c: 397:                                     TRISEbits.TRISE0 = 0;
  2407  007AFE  9096               	bcf	150,0,c	;volatile
  2408  007B00                     
  2409                           ;main.c: 398:                                     lcd_cmd(0x80);
  2410  007B00  0E80               	movlw	128
  2411  007B02  EC9A  F02F         	call	_lcd_cmd
  2412  007B06                     
  2413                           ;main.c: 399:                                     lcd_str("Cartao Am Time B");
  2414  007B06  0E0F               	movlw	low STR_24
  2415  007B08  6E08               	movwf	lcd_str@str^0,c
  2416  007B0A  0E7F               	movlw	high STR_24
  2417  007B0C  6E09               	movwf	(lcd_str@str+1)^0,c
  2418  007B0E  ECCB  F031         	call	_lcd_str	;wreg free
  2419  007B12                     
  2420                           ;main.c: 400:                                     caB++;
  2421  007B12  2A51               	incf	main@caB^0,f,c
  2422  007B14                     
  2423                           ;main.c: 401:                                     lcd_cmd(0xD0 + 10);
  2424  007B14  0EDA               	movlw	218
  2425  007B16  EC9A  F02F         	call	_lcd_cmd
  2426  007B1A                     
  2427                           ;main.c: 402:                                     lcd_dat(caB);
  2428  007B1A  5051               	movf	main@caB^0,w,c
  2429  007B1C  ECAF  F02F         	call	_lcd_dat
  2430  007B20                     
  2431                           ;main.c: 403:                                     PORTEbits.RE0 ^= 1;
  2432  007B20  7084               	btg	132,0,c	;volatile
  2433  007B22                     
  2434                           ;main.c: 404:                                     atraso_s(1);
  2435  007B22  0E00               	movlw	0
  2436  007B24  6E08               	movwf	(atraso_s@t+1)^0,c
  2437  007B26  0E01               	movlw	1
  2438  007B28  6E07               	movwf	atraso_s@t^0,c
  2439  007B2A  EC07  F032         	call	_atraso_s	;wreg free
  2440  007B2E                     
  2441                           ;main.c: 405:                                     PORTEbits.RE0 = 0;
  2442  007B2E  9084               	bcf	132,0,c	;volatile
  2443  007B30                     l3908:
  2444                           
  2445                           ;main.c: 407:                                 if (((kpRead()) & (1<<(10)))) {
  2446  007B30  EC31  F02F         	call	_kpRead	;wreg free
  2447  007B34  A402               	btfss	(?_kpRead+1)^0,2,c
  2448  007B36  EF9F  F03D         	goto	u3291
  2449  007B3A  EFA1  F03D         	goto	u3290
  2450  007B3E                     u3291:
  2451  007B3E  EFC0  F03D         	goto	l3932
  2452  007B42                     u3290:
  2453  007B42                     
  2454                           ;main.c: 408:                                     TRISEbits.TRISE0 = 0;
  2455  007B42  9096               	bcf	150,0,c	;volatile
  2456  007B44                     
  2457                           ;main.c: 409:                                     lcd_cmd(0x80);
  2458  007B44  0E80               	movlw	128
  2459  007B46  EC9A  F02F         	call	_lcd_cmd
  2460  007B4A                     
  2461                           ;main.c: 410:                                     lcd_str("Cartao V Time B ");
  2462  007B4A  0ECB               	movlw	low STR_25
  2463  007B4C  6E08               	movwf	lcd_str@str^0,c
  2464  007B4E  0E7E               	movlw	high STR_25
  2465  007B50  6E09               	movwf	(lcd_str@str+1)^0,c
  2466  007B52  ECCB  F031         	call	_lcd_str	;wreg free
  2467  007B56                     
  2468                           ;main.c: 411:                                     cvB++;
  2469  007B56  2A4F               	incf	main@cvB^0,f,c
  2470  007B58                     
  2471                           ;main.c: 412:                                     lcd_cmd(0xD0 + 14);
  2472  007B58  0EDE               	movlw	222
  2473  007B5A  EC9A  F02F         	call	_lcd_cmd
  2474  007B5E                     
  2475                           ;main.c: 413:                                     lcd_dat(cvB);
  2476  007B5E  504F               	movf	main@cvB^0,w,c
  2477  007B60  ECAF  F02F         	call	_lcd_dat
  2478  007B64                     
  2479                           ;main.c: 414:                                     pwmSet1(10);
  2480  007B64  0E0A               	movlw	10
  2481  007B66  EC20  F031         	call	_pwmSet1
  2482  007B6A                     
  2483                           ;main.c: 415:                                     PORTEbits.RE0 ^= 1;
  2484  007B6A  7084               	btg	132,0,c	;volatile
  2485  007B6C                     
  2486                           ;main.c: 416:                                     atraso_s(1);
  2487  007B6C  0E00               	movlw	0
  2488  007B6E  6E08               	movwf	(atraso_s@t+1)^0,c
  2489  007B70  0E01               	movlw	1
  2490  007B72  6E07               	movwf	atraso_s@t^0,c
  2491  007B74  EC07  F032         	call	_atraso_s	;wreg free
  2492  007B78                     
  2493                           ;main.c: 417:                                     PORTEbits.RE0 = 0;
  2494  007B78  9084               	bcf	132,0,c	;volatile
  2495  007B7A                     
  2496                           ;main.c: 418:                                     pwmSet1(0);
  2497  007B7A  0E00               	movlw	0
  2498  007B7C  EC20  F031         	call	_pwmSet1
  2499  007B80                     l3932:
  2500                           
  2501                           ;main.c: 425:                     if ((tempflag == 1)&& (cont > 10) && ((((kpRead()) & (
      +                          1<<(1)))) || (((kpRead()) & (1<<(5)))) || (((kpRead()) & (1<<(9)))))) {
  2502  007B80  0458               	decf	main@tempflag^0,w,c
  2503  007B82  1059               	iorwf	(main@tempflag+1)^0,w,c
  2504  007B84  A4D8               	btfss	status,2,c
  2505  007B86  EFC7  F03D         	goto	u3301
  2506  007B8A  EFC9  F03D         	goto	u3300
  2507  007B8E                     u3301:
  2508  007B8E  EF7E  F03E         	goto	l3970
  2509  007B92                     u3300:
  2510  007B92  BE5B               	btfsc	(main@cont+1)^0,7,c
  2511  007B94  EFD5  F03D         	goto	u3311
  2512  007B98  505B               	movf	(main@cont+1)^0,w,c
  2513  007B9A  E109               	bnz	u3310
  2514  007B9C  0E0B               	movlw	11
  2515  007B9E  5C5A               	subwf	main@cont^0,w,c
  2516  007BA0  A0D8               	btfss	status,0,c
  2517  007BA2  EFD5  F03D         	goto	u3311
  2518  007BA6  EFD7  F03D         	goto	u3310
  2519  007BAA                     u3311:
  2520  007BAA  EF7E  F03E         	goto	l3970
  2521  007BAE                     u3310:
  2522  007BAE  EC31  F02F         	call	_kpRead	;wreg free
  2523  007BB2  B201               	btfsc	?_kpRead^0,1,c
  2524  007BB4  EFDE  F03D         	goto	u3321
  2525  007BB8  EFE0  F03D         	goto	u3320
  2526  007BBC                     u3321:
  2527  007BBC  EFF2  F03D         	goto	l3942
  2528  007BC0                     u3320:
  2529  007BC0  EC31  F02F         	call	_kpRead	;wreg free
  2530  007BC4  BA01               	btfsc	?_kpRead^0,5,c
  2531  007BC6  EFE7  F03D         	goto	u3331
  2532  007BCA  EFE9  F03D         	goto	u3330
  2533  007BCE                     u3331:
  2534  007BCE  EFF2  F03D         	goto	l3942
  2535  007BD2                     u3330:
  2536  007BD2  EC31  F02F         	call	_kpRead	;wreg free
  2537  007BD6  A202               	btfss	(?_kpRead+1)^0,1,c
  2538  007BD8  EFF0  F03D         	goto	u3341
  2539  007BDC  EFF2  F03D         	goto	u3340
  2540  007BE0                     u3341:
  2541  007BE0  EF7E  F03E         	goto	l3970
  2542  007BE4                     u3340:
  2543  007BE4                     l3942:
  2544                           
  2545                           ;main.c: 426:                         lcd_cmd(0x01);
  2546  007BE4  0E01               	movlw	1
  2547  007BE6  EC9A  F02F         	call	_lcd_cmd
  2548  007BEA                     
  2549                           ;main.c: 429:                         if ((((kpRead()) & (1<<(1))))) {
  2550  007BEA  EC31  F02F         	call	_kpRead	;wreg free
  2551  007BEE  A201               	btfss	?_kpRead^0,1,c
  2552  007BF0  EFFC  F03D         	goto	u3351
  2553  007BF4  EFFE  F03D         	goto	u3350
  2554  007BF8                     u3351:
  2555  007BF8  EF00  F03E         	goto	l3948
  2556  007BFC                     u3350:
  2557  007BFC                     
  2558                           ;main.c: 430:                             chevrolet();
  2559  007BFC  ECBA  F033         	call	_chevrolet	;wreg free
  2560  007C00                     l3948:
  2561                           
  2562                           ;main.c: 434:                         if ((((kpRead()) & (1<<(5))))) {
  2563  007C00  EC31  F02F         	call	_kpRead	;wreg free
  2564  007C04  AA01               	btfss	?_kpRead^0,5,c
  2565  007C06  EF07  F03E         	goto	u3361
  2566  007C0A  EF09  F03E         	goto	u3360
  2567  007C0E                     u3361:
  2568  007C0E  EF0B  F03E         	goto	l3952
  2569  007C12                     u3360:
  2570  007C12                     
  2571                           ;main.c: 435:                             nike_logo();
  2572  007C12  EC01  F035         	call	_nike_logo	;wreg free
  2573  007C16                     l3952:
  2574                           
  2575                           ;main.c: 439:                         if (((kpRead()) & (1<<(9)))) {
  2576  007C16  EC31  F02F         	call	_kpRead	;wreg free
  2577  007C1A  A202               	btfss	(?_kpRead+1)^0,1,c
  2578  007C1C  EF12  F03E         	goto	u3371
  2579  007C20  EF14  F03E         	goto	u3370
  2580  007C24                     u3371:
  2581  007C24  EF16  F03E         	goto	l3956
  2582  007C28                     u3370:
  2583  007C28                     
  2584                           ;main.c: 440:                             adidas_logo();
  2585  007C28  EC8F  F034         	call	_adidas_logo	;wreg free
  2586  007C2C                     l3956:
  2587                           
  2588                           ;main.c: 443:                         lcd_cmd(0x01);
  2589  007C2C  0E01               	movlw	1
  2590  007C2E  EC9A  F02F         	call	_lcd_cmd
  2591  007C32                     
  2592                           ;main.c: 444:                         cont -= 6;
  2593  007C32  0EFA               	movlw	250
  2594  007C34  265A               	addwf	main@cont^0,f,c
  2595  007C36  0EFF               	movlw	255
  2596  007C38  225B               	addwfc	(main@cont+1)^0,f,c
  2597  007C3A                     
  2598                           ;main.c: 445:                         ssdDigit(((cont / 1000) % 10), 0);
  2599  007C3A  0E00               	movlw	0
  2600  007C3C  6E0F               	movwf	ssdDigit@pos^0,c
  2601  007C3E  0E03               	movlw	3
  2602  007C40  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2603  007C42  0EE8               	movlw	232
  2604  007C44  6E03               	movwf	___awdiv@divisor^0,c
  2605  007C46  C05A  F001         	movff	main@cont,___awdiv@dividend
  2606  007C4A  C05B  F002         	movff	main@cont+1,___awdiv@dividend+1
  2607  007C4E  EC58  F033         	call	___awdiv	;wreg free
  2608  007C52  C001  F009         	movff	?___awdiv,___awmod@dividend
  2609  007C56  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  2610  007C5A  0E00               	movlw	0
  2611  007C5C  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2612  007C5E  0E0A               	movlw	10
  2613  007C60  6E0B               	movwf	___awmod@divisor^0,c
  2614  007C62  EC00  F033         	call	___awmod	;wreg free
  2615  007C66  5009               	movf	?___awmod^0,w,c
  2616  007C68  EC36  F030         	call	_ssdDigit
  2617  007C6C                     
  2618                           ;main.c: 446:                         ssdDigit(((cont / 100) % 10), 1);
  2619  007C6C  0E01               	movlw	1
  2620  007C6E  6E0F               	movwf	ssdDigit@pos^0,c
  2621  007C70  0E00               	movlw	0
  2622  007C72  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2623  007C74  0E64               	movlw	100
  2624  007C76  6E03               	movwf	___awdiv@divisor^0,c
  2625  007C78  C05A  F001         	movff	main@cont,___awdiv@dividend
  2626  007C7C  C05B  F002         	movff	main@cont+1,___awdiv@dividend+1
  2627  007C80  EC58  F033         	call	___awdiv	;wreg free
  2628  007C84  C001  F009         	movff	?___awdiv,___awmod@dividend
  2629  007C88  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  2630  007C8C  0E00               	movlw	0
  2631  007C8E  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2632  007C90  0E0A               	movlw	10
  2633  007C92  6E0B               	movwf	___awmod@divisor^0,c
  2634  007C94  EC00  F033         	call	___awmod	;wreg free
  2635  007C98  5009               	movf	?___awmod^0,w,c
  2636  007C9A  EC36  F030         	call	_ssdDigit
  2637  007C9E                     
  2638                           ;main.c: 447:                         ssdDigit(((cont / 10) % 10), 2);
  2639  007C9E  0E02               	movlw	2
  2640  007CA0  6E0F               	movwf	ssdDigit@pos^0,c
  2641  007CA2  0E00               	movlw	0
  2642  007CA4  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2643  007CA6  0E0A               	movlw	10
  2644  007CA8  6E03               	movwf	___awdiv@divisor^0,c
  2645  007CAA  C05A  F001         	movff	main@cont,___awdiv@dividend
  2646  007CAE  C05B  F002         	movff	main@cont+1,___awdiv@dividend+1
  2647  007CB2  EC58  F033         	call	___awdiv	;wreg free
  2648  007CB6  C001  F009         	movff	?___awdiv,___awmod@dividend
  2649  007CBA  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  2650  007CBE  0E00               	movlw	0
  2651  007CC0  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2652  007CC2  0E0A               	movlw	10
  2653  007CC4  6E0B               	movwf	___awmod@divisor^0,c
  2654  007CC6  EC00  F033         	call	___awmod	;wreg free
  2655  007CCA  5009               	movf	?___awmod^0,w,c
  2656  007CCC  EC36  F030         	call	_ssdDigit
  2657  007CD0                     
  2658                           ;main.c: 448:                         ssdDigit((cont % 10), 3);
  2659  007CD0  0E03               	movlw	3
  2660  007CD2  6E0F               	movwf	ssdDigit@pos^0,c
  2661  007CD4  C05A  F009         	movff	main@cont,___awmod@dividend
  2662  007CD8  C05B  F00A         	movff	main@cont+1,___awmod@dividend+1
  2663  007CDC  0E00               	movlw	0
  2664  007CDE  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2665  007CE0  0E0A               	movlw	10
  2666  007CE2  6E0B               	movwf	___awmod@divisor^0,c
  2667  007CE4  EC00  F033         	call	___awmod	;wreg free
  2668  007CE8  5009               	movf	?___awmod^0,w,c
  2669  007CEA  EC36  F030         	call	_ssdDigit
  2670  007CEE                     
  2671                           ;main.c: 449:                         partida_andamento(gols, gols2, turno);
  2672  007CEE  C057  F00D         	movff	main@gols2,partida_andamento@gols2
  2673  007CF2  C054  F00E         	movff	main@turno,partida_andamento@turno
  2674  007CF6  5056               	movf	main@gols^0,w,c
  2675  007CF8  EC90  F031         	call	_partida_andamento
  2676  007CFC                     l3970:
  2677                           
  2678                           ;main.c: 456:                 if (flagcontrole && turno == '1') {
  2679  007CFC  5052               	movf	main@flagcontrole^0,w,c
  2680  007CFE  1053               	iorwf	(main@flagcontrole+1)^0,w,c
  2681  007D00  B4D8               	btfsc	status,2,c
  2682  007D02  EF85  F03E         	goto	u3381
  2683  007D06  EF87  F03E         	goto	u3380
  2684  007D0A                     u3381:
  2685  007D0A  EFDA  F03E         	goto	l4012
  2686  007D0E                     u3380:
  2687  007D0E  0E31               	movlw	49
  2688  007D10  1854               	xorwf	main@turno^0,w,c
  2689  007D12  A4D8               	btfss	status,2,c
  2690  007D14  EF8E  F03E         	goto	u3391
  2691  007D18  EF90  F03E         	goto	u3390
  2692  007D1C                     u3391:
  2693  007D1C  EFDA  F03E         	goto	l4012
  2694  007D20                     u3390:
  2695  007D20                     
  2696                           ;main.c: 458:                     tempflag = 0;
  2697  007D20  0E00               	movlw	0
  2698  007D22  6E59               	movwf	(main@tempflag+1)^0,c
  2699  007D24  0E00               	movlw	0
  2700  007D26  6E58               	movwf	main@tempflag^0,c
  2701  007D28                     
  2702                           ;main.c: 460:                     lcd_cmd(0x01);
  2703  007D28  0E01               	movlw	1
  2704  007D2A  EC9A  F02F         	call	_lcd_cmd
  2705  007D2E                     
  2706                           ;main.c: 461:                     lcd_cmd(0x80);
  2707  007D2E  0E80               	movlw	128
  2708  007D30  EC9A  F02F         	call	_lcd_cmd
  2709  007D34                     
  2710                           ;main.c: 462:                     lcd_str("Fim do 1");
  2711  007D34  0EDA               	movlw	low STR_26
  2712  007D36  6E08               	movwf	lcd_str@str^0,c
  2713  007D38  0E7F               	movlw	high STR_26
  2714  007D3A  6E09               	movwf	(lcd_str@str+1)^0,c
  2715  007D3C  ECCB  F031         	call	_lcd_str	;wreg free
  2716  007D40                     
  2717                           ;main.c: 463:                     lcd_dat(0xDF);
  2718  007D40  0EDF               	movlw	223
  2719  007D42  ECAF  F02F         	call	_lcd_dat
  2720  007D46                     
  2721                           ;main.c: 464:                     lcd_str(" Tempo");
  2722  007D46  0EE3               	movlw	low STR_5
  2723  007D48  6E08               	movwf	lcd_str@str^0,c
  2724  007D4A  0E7F               	movlw	high STR_5
  2725  007D4C  6E09               	movwf	(lcd_str@str+1)^0,c
  2726  007D4E  ECCB  F031         	call	_lcd_str	;wreg free
  2727  007D52                     
  2728                           ;main.c: 465:                     lcd_cmd(0xC0);
  2729  007D52  0EC0               	movlw	192
  2730  007D54  EC9A  F02F         	call	_lcd_cmd
  2731  007D58                     
  2732                           ;main.c: 466:                     lcd_str("Intervalo");
  2733  007D58  0EB4               	movlw	low STR_28
  2734  007D5A  6E08               	movwf	lcd_str@str^0,c
  2735  007D5C  0E7F               	movlw	high STR_28
  2736  007D5E  6E09               	movwf	(lcd_str@str+1)^0,c
  2737  007D60  ECCB  F031         	call	_lcd_str	;wreg free
  2738  007D64                     
  2739                           ;main.c: 467:                     lcd_cmd(0x90);
  2740  007D64  0E90               	movlw	144
  2741  007D66  EC9A  F02F         	call	_lcd_cmd
  2742  007D6A                     
  2743                           ;main.c: 468:                     lcd_str("Time A");
  2744  007D6A  0E08               	movlw	low (STR_22+10)
  2745  007D6C  6E08               	movwf	lcd_str@str^0,c
  2746  007D6E  0E7F               	movlw	high (STR_22+10)
  2747  007D70  6E09               	movwf	(lcd_str@str+1)^0,c
  2748  007D72  ECCB  F031         	call	_lcd_str	;wreg free
  2749  007D76                     
  2750                           ;main.c: 469:                     lcd_cmd(0x90 + 7);
  2751  007D76  0E97               	movlw	151
  2752  007D78  EC9A  F02F         	call	_lcd_cmd
  2753  007D7C                     
  2754                           ;main.c: 470:                     lcd_dat(gols);
  2755  007D7C  5056               	movf	main@gols^0,w,c
  2756  007D7E  ECAF  F02F         	call	_lcd_dat
  2757  007D82                     
  2758                           ;main.c: 471:                     lcd_cmd(0xD0);
  2759  007D82  0ED0               	movlw	208
  2760  007D84  EC9A  F02F         	call	_lcd_cmd
  2761  007D88                     
  2762                           ;main.c: 472:                     lcd_str("Time B");
  2763  007D88  0E19               	movlw	low (STR_24+10)
  2764  007D8A  6E08               	movwf	lcd_str@str^0,c
  2765  007D8C  0E7F               	movlw	high (STR_24+10)
  2766  007D8E  6E09               	movwf	(lcd_str@str+1)^0,c
  2767  007D90  ECCB  F031         	call	_lcd_str	;wreg free
  2768  007D94                     
  2769                           ;main.c: 473:                     lcd_cmd(0xD0 + 7);
  2770  007D94  0ED7               	movlw	215
  2771  007D96  EC9A  F02F         	call	_lcd_cmd
  2772  007D9A                     
  2773                           ;main.c: 474:                     lcd_dat(gols2);
  2774  007D9A  5057               	movf	main@gols2^0,w,c
  2775  007D9C  ECAF  F02F         	call	_lcd_dat
  2776  007DA0                     
  2777                           ;main.c: 476:                     turno = '2';
  2778  007DA0  0E32               	movlw	50
  2779  007DA2  6E54               	movwf	main@turno^0,c
  2780  007DA4                     
  2781                           ;main.c: 477:                     cont = 2000;
  2782  007DA4  0E07               	movlw	7
  2783  007DA6  6E5B               	movwf	(main@cont+1)^0,c
  2784  007DA8  0ED0               	movlw	208
  2785  007DAA  6E5A               	movwf	main@cont^0,c
  2786  007DAC                     
  2787                           ;main.c: 478:                     flagcontrole = 0;
  2788  007DAC  0E00               	movlw	0
  2789  007DAE  6E53               	movwf	(main@flagcontrole+1)^0,c
  2790  007DB0  0E00               	movlw	0
  2791  007DB2  6E52               	movwf	main@flagcontrole^0,c
  2792  007DB4                     l4012:
  2793                           
  2794                           ;main.c: 482:                 if (flagcontrole && turno == '2') {
  2795  007DB4  5052               	movf	main@flagcontrole^0,w,c
  2796  007DB6  1053               	iorwf	(main@flagcontrole+1)^0,w,c
  2797  007DB8  B4D8               	btfsc	status,2,c
  2798  007DBA  EFE1  F03E         	goto	u3401
  2799  007DBE  EFE3  F03E         	goto	u3400
  2800  007DC2                     u3401:
  2801  007DC2  EF42  F03F         	goto	l4058
  2802  007DC6                     u3400:
  2803  007DC6  0E32               	movlw	50
  2804  007DC8  1854               	xorwf	main@turno^0,w,c
  2805  007DCA  A4D8               	btfss	status,2,c
  2806  007DCC  EFEA  F03E         	goto	u3411
  2807  007DD0  EFEC  F03E         	goto	u3410
  2808  007DD4                     u3411:
  2809  007DD4  EF42  F03F         	goto	l4058
  2810  007DD8                     u3410:
  2811  007DD8                     
  2812                           ;main.c: 483:                     tempflag = 0;
  2813  007DD8  0E00               	movlw	0
  2814  007DDA  6E59               	movwf	(main@tempflag+1)^0,c
  2815  007DDC  0E00               	movlw	0
  2816  007DDE  6E58               	movwf	main@tempflag^0,c
  2817  007DE0                     
  2818                           ;main.c: 485:                     lcd_cmd(0x01);
  2819  007DE0  0E01               	movlw	1
  2820  007DE2  EC9A  F02F         	call	_lcd_cmd
  2821  007DE6                     
  2822                           ;main.c: 486:                     lcd_cmd(0x80);
  2823  007DE6  0E80               	movlw	128
  2824  007DE8  EC9A  F02F         	call	_lcd_cmd
  2825  007DEC                     
  2826                           ;main.c: 487:                     lcd_str("  Fim do Jogo   ");
  2827  007DEC  0EA9               	movlw	low STR_31
  2828  007DEE  6E08               	movwf	lcd_str@str^0,c
  2829  007DF0  0E7E               	movlw	high STR_31
  2830  007DF2  6E09               	movwf	(lcd_str@str+1)^0,c
  2831  007DF4  ECCB  F031         	call	_lcd_str	;wreg free
  2832  007DF8                     
  2833                           ;main.c: 488:                     lcd_cmd(0xC0);
  2834  007DF8  0EC0               	movlw	192
  2835  007DFA  EC9A  F02F         	call	_lcd_cmd
  2836  007DFE                     
  2837                           ;main.c: 489:                     lcd_str("Placar Final");
  2838  007DFE  0EA7               	movlw	low STR_32
  2839  007E00  6E08               	movwf	lcd_str@str^0,c
  2840  007E02  0E7F               	movlw	high STR_32
  2841  007E04  6E09               	movwf	(lcd_str@str+1)^0,c
  2842  007E06  ECCB  F031         	call	_lcd_str	;wreg free
  2843  007E0A                     
  2844                           ;main.c: 490:                     lcd_cmd(0x90);
  2845  007E0A  0E90               	movlw	144
  2846  007E0C  EC9A  F02F         	call	_lcd_cmd
  2847  007E10                     
  2848                           ;main.c: 491:                     lcd_str("Time A");
  2849  007E10  0E08               	movlw	low (STR_22+10)
  2850  007E12  6E08               	movwf	lcd_str@str^0,c
  2851  007E14  0E7F               	movlw	high (STR_22+10)
  2852  007E16  6E09               	movwf	(lcd_str@str+1)^0,c
  2853  007E18  ECCB  F031         	call	_lcd_str	;wreg free
  2854  007E1C                     
  2855                           ;main.c: 492:                     lcd_cmd(0x90 + 7);
  2856  007E1C  0E97               	movlw	151
  2857  007E1E  EC9A  F02F         	call	_lcd_cmd
  2858  007E22                     
  2859                           ;main.c: 493:                     lcd_dat(gols);
  2860  007E22  5056               	movf	main@gols^0,w,c
  2861  007E24  ECAF  F02F         	call	_lcd_dat
  2862  007E28                     
  2863                           ;main.c: 494:                     lcd_cmd(0xD0);
  2864  007E28  0ED0               	movlw	208
  2865  007E2A  EC9A  F02F         	call	_lcd_cmd
  2866  007E2E                     
  2867                           ;main.c: 495:                     lcd_str("Time B");
  2868  007E2E  0E19               	movlw	low (STR_24+10)
  2869  007E30  6E08               	movwf	lcd_str@str^0,c
  2870  007E32  0E7F               	movlw	high (STR_24+10)
  2871  007E34  6E09               	movwf	(lcd_str@str+1)^0,c
  2872  007E36  ECCB  F031         	call	_lcd_str	;wreg free
  2873  007E3A                     
  2874                           ;main.c: 496:                     lcd_cmd(0xD0 + 7);
  2875  007E3A  0ED7               	movlw	215
  2876  007E3C  EC9A  F02F         	call	_lcd_cmd
  2877  007E40                     
  2878                           ;main.c: 497:                     lcd_dat(gols2);
  2879  007E40  5057               	movf	main@gols2^0,w,c
  2880  007E42  ECAF  F02F         	call	_lcd_dat
  2881  007E46                     
  2882                           ;main.c: 499:                     flagcontrole = 0;
  2883  007E46  0E00               	movlw	0
  2884  007E48  6E53               	movwf	(main@flagcontrole+1)^0,c
  2885  007E4A  0E00               	movlw	0
  2886  007E4C  6E52               	movwf	main@flagcontrole^0,c
  2887  007E4E                     
  2888                           ;main.c: 500:                     atraso_s(5);
  2889  007E4E  0E00               	movlw	0
  2890  007E50  6E08               	movwf	(atraso_s@t+1)^0,c
  2891  007E52  0E05               	movlw	5
  2892  007E54  6E07               	movwf	atraso_s@t^0,c
  2893  007E56  EC07  F032         	call	_atraso_s	;wreg free
  2894  007E5A                     
  2895                           ;main.c: 501:                     lcd_cmd(0x01);
  2896  007E5A  0E01               	movlw	1
  2897  007E5C  EC9A  F02F         	call	_lcd_cmd
  2898  007E60                     
  2899                           ;main.c: 502:                     lcd_cmd(0x80);
  2900  007E60  0E80               	movlw	128
  2901  007E62  EC9A  F02F         	call	_lcd_cmd
  2902  007E66                     
  2903                           ;main.c: 503:                     lcd_str("Pressione RESET");
  2904  007E66  0E30               	movlw	low STR_35
  2905  007E68  6E08               	movwf	lcd_str@str^0,c
  2906  007E6A  0E7F               	movlw	high STR_35
  2907  007E6C  6E09               	movwf	(lcd_str@str+1)^0,c
  2908  007E6E  ECCB  F031         	call	_lcd_str	;wreg free
  2909  007E72                     
  2910                           ;main.c: 504:                     lcd_cmd(0xC0);
  2911  007E72  0EC0               	movlw	192
  2912  007E74  EC9A  F02F         	call	_lcd_cmd
  2913  007E78                     
  2914                           ;main.c: 505:                     lcd_str("Para reiniciar");
  2915  007E78  0E6E               	movlw	low STR_36
  2916  007E7A  6E08               	movwf	lcd_str@str^0,c
  2917  007E7C  0E7F               	movlw	high STR_36
  2918  007E7E  6E09               	movwf	(lcd_str@str+1)^0,c
  2919  007E80  ECCB  F031         	call	_lcd_str	;wreg free
  2920  007E84                     l4058:
  2921                           
  2922                           ;main.c: 507:                 ssdUpdate();
  2923  007E84  ECFC  F035         	call	_ssdUpdate	;wreg free
  2924  007E88                     
  2925                           ;main.c: 508:                 timerWait();
  2926  007E88  EC51  F02F         	call	_timerWait	;wreg free
  2927                           
  2928                           ;main.c: 509:             }
  2929  007E8C  EFC9  F03A         	goto	l3636
  2930  007E90  EF00  F000         	goto	start
  2931  007E94                     __end_of_main:
  2932                           	callstack 0
  2933                           
  2934 ;; *************** function _unifeilogo *****************
  2935 ;; Defined at:
  2936 ;;		line 47 in file "main.c"
  2937 ;; Parameters:    Size  Location     Type
  2938 ;;		None
  2939 ;; Auto vars:     Size  Location     Type
  2940 ;;  logo           48    7[COMRAM] unsigned char [48]
  2941 ;;  i               1   55[COMRAM] unsigned char 
  2942 ;;  j               1    0        unsigned char 
  2943 ;; Return value:  Size  Location     Type
  2944 ;;                  1    wreg      void 
  2945 ;; Registers used:
  2946 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2947 ;; Tracked objects:
  2948 ;;		On entry : 0/0
  2949 ;;		On exit  : 0/0
  2950 ;;		Unchanged: 0/0
  2951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2952 ;;      Params:         0       0       0       0       0       0       0
  2953 ;;      Locals:        49       0       0       0       0       0       0
  2954 ;;      Temps:          0       0       0       0       0       0       0
  2955 ;;      Totals:        49       0       0       0       0       0       0
  2956 ;;Total ram usage:       49 bytes
  2957 ;; Hardware stack levels used:    1
  2958 ;; Hardware stack levels required when called:    2
  2959 ;; This function calls:
  2960 ;;		_lcd_cmd
  2961 ;;		_lcd_dat
  2962 ;; This function is called by:
  2963 ;;		_main
  2964 ;; This function uses a non-reentrant model
  2965 ;;
  2966                           
  2967                           	psect	text1
  2968  006486                     __ptext1:
  2969                           	callstack 0
  2970  006486                     _unifeilogo:
  2971                           	callstack 28
  2972  006486                     
  2973                           ;main.c: 48:     unsigned char i, j;;main.c: 49:     lcd_cmd(0x40);
  2974  006486  0E40               	movlw	64
  2975  006488  EC9A  F02F         	call	_lcd_cmd
  2976  00648C                     
  2977                           ;main.c: 51:     char logo[48] = {
  2978  00648C  EE20  F0B0         	lfsr	2,unifeilogo@F2448
  2979  006490  EE10  F008         	lfsr	1,unifeilogo@logo
  2980  006494  0E2F               	movlw	47
  2981  006496                     u2541:
  2982  006496  CFDB FFE3          	movff	plusw2,plusw1
  2983  00649A  06E8               	decf	wreg,f,c
  2984  00649C  E2FC               	bc	u2541
  2985  00649E                     
  2986                           ;main.c: 60:     lcd_cmd(0x40);
  2987  00649E  0E40               	movlw	64
  2988  0064A0  EC9A  F02F         	call	_lcd_cmd
  2989  0064A4                     
  2990                           ;main.c: 62:     for (i = 0; i < 48; i++) {
  2991  0064A4  0E00               	movlw	0
  2992  0064A6  6E38               	movwf	unifeilogo@i^0,c
  2993  0064A8                     l3078:
  2994                           
  2995                           ;main.c: 63:         lcd_dat(logo[i]);
  2996  0064A8  0E08               	movlw	low unifeilogo@logo
  2997  0064AA  2438               	addwf	unifeilogo@i^0,w,c
  2998  0064AC  6ED9               	movwf	fsr2l,c
  2999  0064AE  6ADA               	clrf	fsr2h,c
  3000  0064B0  0E00               	movlw	high unifeilogo@logo
  3001  0064B2  22DA               	addwfc	fsr2h,f,c
  3002  0064B4  50DF               	movf	indf2,w,c
  3003  0064B6  ECAF  F02F         	call	_lcd_dat
  3004  0064BA                     
  3005                           ;main.c: 64:     }
  3006  0064BA  2A38               	incf	unifeilogo@i^0,f,c
  3007  0064BC  0E2F               	movlw	47
  3008  0064BE  6438               	cpfsgt	unifeilogo@i^0,c
  3009  0064C0  EF64  F032         	goto	u2551
  3010  0064C4  EF66  F032         	goto	u2550
  3011  0064C8                     u2551:
  3012  0064C8  EF54  F032         	goto	l3078
  3013  0064CC                     u2550:
  3014  0064CC                     
  3015                           ;main.c: 65:     lcd_cmd(0x90 + 13);
  3016  0064CC  0E9D               	movlw	157
  3017  0064CE  EC9A  F02F         	call	_lcd_cmd
  3018                           
  3019                           ;main.c: 66:     lcd_dat(0);
  3020  0064D2  0E00               	movlw	0
  3021  0064D4  ECAF  F02F         	call	_lcd_dat
  3022                           
  3023                           ;main.c: 67:     lcd_dat(1);
  3024  0064D8  0E01               	movlw	1
  3025  0064DA  ECAF  F02F         	call	_lcd_dat
  3026                           
  3027                           ;main.c: 68:     lcd_dat(2);
  3028  0064DE  0E02               	movlw	2
  3029  0064E0  ECAF  F02F         	call	_lcd_dat
  3030                           
  3031                           ;main.c: 69:     lcd_cmd(0xD0 + 13);
  3032  0064E4  0EDD               	movlw	221
  3033  0064E6  EC9A  F02F         	call	_lcd_cmd
  3034                           
  3035                           ;main.c: 70:     lcd_dat(3);
  3036  0064EA  0E03               	movlw	3
  3037  0064EC  ECAF  F02F         	call	_lcd_dat
  3038                           
  3039                           ;main.c: 71:     lcd_dat(4);
  3040  0064F0  0E04               	movlw	4
  3041  0064F2  ECAF  F02F         	call	_lcd_dat
  3042                           
  3043                           ;main.c: 72:     lcd_dat(5);
  3044  0064F6  0E05               	movlw	5
  3045  0064F8  ECAF  F02F         	call	_lcd_dat
  3046  0064FC  0012               	return		;funcret
  3047  0064FE                     __end_of_unifeilogo:
  3048                           	callstack 0
  3049                           
  3050 ;; *************** function _timerWait *****************
  3051 ;; Defined at:
  3052 ;;		line 31 in file "timer.c"
  3053 ;; Parameters:    Size  Location     Type
  3054 ;;		None
  3055 ;; Auto vars:     Size  Location     Type
  3056 ;;		None
  3057 ;; Return value:  Size  Location     Type
  3058 ;;                  1    wreg      void 
  3059 ;; Registers used:
  3060 ;;		None
  3061 ;; Tracked objects:
  3062 ;;		On entry : 0/0
  3063 ;;		On exit  : 0/0
  3064 ;;		Unchanged: 0/0
  3065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3066 ;;      Params:         0       0       0       0       0       0       0
  3067 ;;      Locals:         0       0       0       0       0       0       0
  3068 ;;      Temps:          0       0       0       0       0       0       0
  3069 ;;      Totals:         0       0       0       0       0       0       0
  3070 ;;Total ram usage:        0 bytes
  3071 ;; Hardware stack levels used:    1
  3072 ;; This function calls:
  3073 ;;		Nothing
  3074 ;; This function is called by:
  3075 ;;		_main
  3076 ;; This function uses a non-reentrant model
  3077 ;;
  3078                           
  3079                           	psect	text2
  3080  005EA2                     __ptext2:
  3081                           	callstack 0
  3082  005EA2                     _timerWait:
  3083                           	callstack 30
  3084  005EA2                     l390:
  3085  005EA2  A4F2               	btfss	242,2,c	;volatile
  3086  005EA4  EF56  F02F         	goto	u2841
  3087  005EA8  EF58  F02F         	goto	u2840
  3088  005EAC                     u2841:
  3089  005EAC  EF51  F02F         	goto	l390
  3090  005EB0                     u2840:
  3091  005EB0  0012               	return		;funcret
  3092  005EB2                     __end_of_timerWait:
  3093                           	callstack 0
  3094                           
  3095 ;; *************** function _timerReset *****************
  3096 ;; Defined at:
  3097 ;;		line 37 in file "timer.c"
  3098 ;; Parameters:    Size  Location     Type
  3099 ;;  tempo           2    0[COMRAM] unsigned int 
  3100 ;; Auto vars:     Size  Location     Type
  3101 ;;  ciclos          2    2[COMRAM] unsigned int 
  3102 ;; Return value:  Size  Location     Type
  3103 ;;                  1    wreg      void 
  3104 ;; Registers used:
  3105 ;;		wreg, status,2, status,0
  3106 ;; Tracked objects:
  3107 ;;		On entry : 0/0
  3108 ;;		On exit  : 0/0
  3109 ;;		Unchanged: 0/0
  3110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3111 ;;      Params:         2       0       0       0       0       0       0
  3112 ;;      Locals:         2       0       0       0       0       0       0
  3113 ;;      Temps:          0       0       0       0       0       0       0
  3114 ;;      Totals:         4       0       0       0       0       0       0
  3115 ;;Total ram usage:        4 bytes
  3116 ;; Hardware stack levels used:    1
  3117 ;; This function calls:
  3118 ;;		Nothing
  3119 ;; This function is called by:
  3120 ;;		_main
  3121 ;; This function uses a non-reentrant model
  3122 ;;
  3123                           
  3124                           	psect	text3
  3125  005EC6                     __ptext3:
  3126                           	callstack 0
  3127  005EC6                     _timerReset:
  3128                           	callstack 30
  3129  005EC6                     
  3130                           ;timer.c: 37: void timerReset(unsigned int tempo);timer.c: 38: {;timer.c: 40:  unsigned 
      +                          ciclos = tempo * 2;
  3131  005EC6  90D8               	bcf	status,0,c
  3132  005EC8  3401               	rlcf	timerReset@tempo^0,w,c
  3133  005ECA  6E03               	movwf	timerReset@ciclos^0,c
  3134  005ECC  3402               	rlcf	(timerReset@tempo+1)^0,w,c
  3135  005ECE  6E04               	movwf	(timerReset@ciclos+1)^0,c
  3136  005ED0                     
  3137                           ;timer.c: 42:  ciclos = 65535 - ciclos;
  3138  005ED0  1E03               	comf	timerReset@ciclos^0,f,c
  3139  005ED2  1E04               	comf	(timerReset@ciclos+1)^0,f,c
  3140  005ED4                     
  3141                           ;timer.c: 44:  ciclos -= 14;
  3142  005ED4  0E0E               	movlw	14
  3143  005ED6  5E03               	subwf	timerReset@ciclos^0,f,c
  3144  005ED8  0E00               	movlw	0
  3145  005EDA  5A04               	subwfb	(timerReset@ciclos+1)^0,f,c
  3146  005EDC                     
  3147                           ;timer.c: 45:  TMR0H = (ciclos >> 8);
  3148  005EDC  5004               	movf	(timerReset@ciclos+1)^0,w,c
  3149  005EDE  6ED7               	movwf	215,c	;volatile
  3150  005EE0                     
  3151                           ;timer.c: 46:  TMR0L = (ciclos & 0x00FF);
  3152  005EE0  C003  FFD6         	movff	timerReset@ciclos,4054	;volatile
  3153  005EE4                     
  3154                           ;timer.c: 48:  ((INTCON) &= ~(1<<(2)));
  3155  005EE4  94F2               	bcf	242,2,c	;volatile
  3156  005EE6  0012               	return		;funcret
  3157  005EE8                     __end_of_timerReset:
  3158                           	callstack 0
  3159                           
  3160 ;; *************** function _timerInit *****************
  3161 ;; Defined at:
  3162 ;;		line 51 in file "timer.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;		None
  3165 ;; Auto vars:     Size  Location     Type
  3166 ;;		None
  3167 ;; Return value:  Size  Location     Type
  3168 ;;                  1    wreg      void 
  3169 ;; Registers used:
  3170 ;;		wreg, status,2, status,0
  3171 ;; Tracked objects:
  3172 ;;		On entry : 0/0
  3173 ;;		On exit  : 0/0
  3174 ;;		Unchanged: 0/0
  3175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3176 ;;      Params:         0       0       0       0       0       0       0
  3177 ;;      Locals:         0       0       0       0       0       0       0
  3178 ;;      Temps:          0       0       0       0       0       0       0
  3179 ;;      Totals:         0       0       0       0       0       0       0
  3180 ;;Total ram usage:        0 bytes
  3181 ;; Hardware stack levels used:    1
  3182 ;; This function calls:
  3183 ;;		Nothing
  3184 ;; This function is called by:
  3185 ;;		_main
  3186 ;; This function uses a non-reentrant model
  3187 ;;
  3188                           
  3189                           	psect	text4
  3190  005E50                     __ptext4:
  3191                           	callstack 0
  3192  005E50                     _timerInit:
  3193                           	callstack 30
  3194  005E50                     
  3195                           ;timer.c: 53:  T0CON = 0b00001000;
  3196  005E50  0E08               	movlw	8
  3197  005E52  6ED5               	movwf	213,c	;volatile
  3198  005E54                     
  3199                           ;timer.c: 54:  ((T0CON) |= (1<<(7)));
  3200  005E54  8ED5               	bsf	213,7,c	;volatile
  3201  005E56  0012               	return		;funcret
  3202  005E58                     __end_of_timerInit:
  3203                           	callstack 0
  3204                           
  3205 ;; *************** function _ssdUpdate *****************
  3206 ;; Defined at:
  3207 ;;		line 54 in file "ssd.c"
  3208 ;; Parameters:    Size  Location     Type
  3209 ;;		None
  3210 ;; Auto vars:     Size  Location     Type
  3211 ;;		None
  3212 ;; Return value:  Size  Location     Type
  3213 ;;                  1    wreg      void 
  3214 ;; Registers used:
  3215 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3216 ;; Tracked objects:
  3217 ;;		On entry : 0/0
  3218 ;;		On exit  : 0/0
  3219 ;;		Unchanged: 0/0
  3220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3221 ;;      Params:         0       0       0       0       0       0       0
  3222 ;;      Locals:         0       0       0       0       0       0       0
  3223 ;;      Temps:          2       0       0       0       0       0       0
  3224 ;;      Totals:         2       0       0       0       0       0       0
  3225 ;;Total ram usage:        2 bytes
  3226 ;; Hardware stack levels used:    1
  3227 ;; Hardware stack levels required when called:    1
  3228 ;; This function calls:
  3229 ;;		_digitalWrite
  3230 ;; This function is called by:
  3231 ;;		_main
  3232 ;; This function uses a non-reentrant model
  3233 ;;
  3234                           
  3235                           	psect	text5
  3236  006BF8                     __ptext5:
  3237                           	callstack 0
  3238  006BF8                     _ssdUpdate:
  3239                           	callstack 29
  3240  006BF8                     
  3241                           ;ssd.c: 58:     TRISD= 0x00;
  3242  006BF8  0E00               	movlw	0
  3243  006BFA  6E95               	movwf	149,c	;volatile
  3244  006BFC                     
  3245                           ;ssd.c: 60:     digitalWrite(PIN_A2,0);
  3246  006BFC  0E00               	movlw	0
  3247  006BFE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3248  006C00  0E02               	movlw	2
  3249  006C02  6E01               	movwf	digitalWrite@pin^0,c
  3250  006C04  0E00               	movlw	0
  3251  006C06  6E04               	movwf	(digitalWrite@value+1)^0,c
  3252  006C08  0E00               	movlw	0
  3253  006C0A  6E03               	movwf	digitalWrite@value^0,c
  3254  006C0C  EC88  F038         	call	_digitalWrite	;wreg free
  3255  006C10                     
  3256                           ;ssd.c: 61:     digitalWrite(PIN_A3,0);
  3257  006C10  0E00               	movlw	0
  3258  006C12  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3259  006C14  0E03               	movlw	3
  3260  006C16  6E01               	movwf	digitalWrite@pin^0,c
  3261  006C18  0E00               	movlw	0
  3262  006C1A  6E04               	movwf	(digitalWrite@value+1)^0,c
  3263  006C1C  0E00               	movlw	0
  3264  006C1E  6E03               	movwf	digitalWrite@value^0,c
  3265  006C20  EC88  F038         	call	_digitalWrite	;wreg free
  3266  006C24                     
  3267                           ;ssd.c: 62:     digitalWrite(PIN_A4,0);
  3268  006C24  0E00               	movlw	0
  3269  006C26  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3270  006C28  0E04               	movlw	4
  3271  006C2A  6E01               	movwf	digitalWrite@pin^0,c
  3272  006C2C  0E00               	movlw	0
  3273  006C2E  6E04               	movwf	(digitalWrite@value+1)^0,c
  3274  006C30  0E00               	movlw	0
  3275  006C32  6E03               	movwf	digitalWrite@value^0,c
  3276  006C34  EC88  F038         	call	_digitalWrite	;wreg free
  3277  006C38                     
  3278                           ;ssd.c: 63:     digitalWrite(PIN_A5,0);
  3279  006C38  0E00               	movlw	0
  3280  006C3A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3281  006C3C  0E05               	movlw	5
  3282  006C3E  6E01               	movwf	digitalWrite@pin^0,c
  3283  006C40  0E00               	movlw	0
  3284  006C42  6E04               	movwf	(digitalWrite@value+1)^0,c
  3285  006C44  0E00               	movlw	0
  3286  006C46  6E03               	movwf	digitalWrite@value^0,c
  3287  006C48  EC88  F038         	call	_digitalWrite	;wreg free
  3288                           
  3289                           ;ssd.c: 66:     PORTD = 0x00;
  3290  006C4C  0E00               	movlw	0
  3291  006C4E  6E83               	movwf	131,c	;volatile
  3292                           
  3293                           ;ssd.c: 69:     switch (display)
  3294  006C50  EF86  F036         	goto	l3438
  3295  006C54                     l3410:
  3296                           
  3297                           ;ssd.c: 72:             PORTD = valor[v0];
  3298  006C54  0E95               	movlw	low _valor@ssd$F413
  3299  006C56  2470               	addwf	_v0^0,w,c
  3300  006C58  6EF6               	movwf	tblptrl,c
  3301  006C5A  6AF7               	clrf	tblptrh,c
  3302  006C5C  0E7E               	movlw	high _valor@ssd$F413
  3303  006C5E  22F7               	addwfc	tblptrh,f,c
  3304  006C60                     	if	0	;There are less than 3 active tblptr bytes
  3305  006C60                     	endif
  3306  006C60  0008               	tblrd		*
  3307  006C62  CFF5 FF83          	movff	tablat,3971	;volatile
  3308  006C66                     
  3309                           ;ssd.c: 73:             digitalWrite(PIN_A2,1);
  3310  006C66  0E00               	movlw	0
  3311  006C68  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3312  006C6A  0E02               	movlw	2
  3313  006C6C  6E01               	movwf	digitalWrite@pin^0,c
  3314  006C6E  0E00               	movlw	0
  3315  006C70  6E04               	movwf	(digitalWrite@value+1)^0,c
  3316  006C72  0E01               	movlw	1
  3317  006C74  6E03               	movwf	digitalWrite@value^0,c
  3318  006C76  EC88  F038         	call	_digitalWrite	;wreg free
  3319  006C7A                     
  3320                           ;ssd.c: 74:             display = 1;
  3321  006C7A  0E01               	movlw	1
  3322  006C7C  6E71               	movwf	_display^0,c
  3323                           
  3324                           ;ssd.c: 75:             break;
  3325  006C7E  EFA3  F036         	goto	l235
  3326  006C82                     l3416:
  3327                           
  3328                           ;ssd.c: 78:             PORTD = valor[v1];
  3329  006C82  0E95               	movlw	low _valor@ssd$F413
  3330  006C84  246F               	addwf	_v1^0,w,c
  3331  006C86  6EF6               	movwf	tblptrl,c
  3332  006C88  6AF7               	clrf	tblptrh,c
  3333  006C8A  0E7E               	movlw	high _valor@ssd$F413
  3334  006C8C  22F7               	addwfc	tblptrh,f,c
  3335  006C8E                     	if	0	;There are less than 3 active tblptr bytes
  3336  006C8E                     	endif
  3337  006C8E  0008               	tblrd		*
  3338  006C90  CFF5 FF83          	movff	tablat,3971	;volatile
  3339  006C94                     
  3340                           ;ssd.c: 79:             digitalWrite(PIN_A3,1);
  3341  006C94  0E00               	movlw	0
  3342  006C96  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3343  006C98  0E03               	movlw	3
  3344  006C9A  6E01               	movwf	digitalWrite@pin^0,c
  3345  006C9C  0E00               	movlw	0
  3346  006C9E  6E04               	movwf	(digitalWrite@value+1)^0,c
  3347  006CA0  0E01               	movlw	1
  3348  006CA2  6E03               	movwf	digitalWrite@value^0,c
  3349  006CA4  EC88  F038         	call	_digitalWrite	;wreg free
  3350  006CA8                     
  3351                           ;ssd.c: 80:             display = 2;
  3352  006CA8  0E02               	movlw	2
  3353  006CAA  6E71               	movwf	_display^0,c
  3354                           
  3355                           ;ssd.c: 81:             break;
  3356  006CAC  EFA3  F036         	goto	l235
  3357  006CB0                     l3422:
  3358                           
  3359                           ;ssd.c: 84:             PORTD = valor[v2];
  3360  006CB0  0E95               	movlw	low _valor@ssd$F413
  3361  006CB2  246E               	addwf	_v2^0,w,c
  3362  006CB4  6EF6               	movwf	tblptrl,c
  3363  006CB6  6AF7               	clrf	tblptrh,c
  3364  006CB8  0E7E               	movlw	high _valor@ssd$F413
  3365  006CBA  22F7               	addwfc	tblptrh,f,c
  3366  006CBC                     	if	0	;There are less than 3 active tblptr bytes
  3367  006CBC                     	endif
  3368  006CBC  0008               	tblrd		*
  3369  006CBE  CFF5 FF83          	movff	tablat,3971	;volatile
  3370  006CC2                     
  3371                           ;ssd.c: 85:             digitalWrite(PIN_A4,1);
  3372  006CC2  0E00               	movlw	0
  3373  006CC4  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3374  006CC6  0E04               	movlw	4
  3375  006CC8  6E01               	movwf	digitalWrite@pin^0,c
  3376  006CCA  0E00               	movlw	0
  3377  006CCC  6E04               	movwf	(digitalWrite@value+1)^0,c
  3378  006CCE  0E01               	movlw	1
  3379  006CD0  6E03               	movwf	digitalWrite@value^0,c
  3380  006CD2  EC88  F038         	call	_digitalWrite	;wreg free
  3381  006CD6                     
  3382                           ;ssd.c: 86:             display = 3;
  3383  006CD6  0E03               	movlw	3
  3384  006CD8  6E71               	movwf	_display^0,c
  3385                           
  3386                           ;ssd.c: 87:             break;
  3387  006CDA  EFA3  F036         	goto	l235
  3388  006CDE                     l3428:
  3389                           
  3390                           ;ssd.c: 90:             PORTD = valor[v3];
  3391  006CDE  0E95               	movlw	low _valor@ssd$F413
  3392  006CE0  246D               	addwf	_v3^0,w,c
  3393  006CE2  6EF6               	movwf	tblptrl,c
  3394  006CE4  6AF7               	clrf	tblptrh,c
  3395  006CE6  0E7E               	movlw	high _valor@ssd$F413
  3396  006CE8  22F7               	addwfc	tblptrh,f,c
  3397  006CEA                     	if	0	;There are less than 3 active tblptr bytes
  3398  006CEA                     	endif
  3399  006CEA  0008               	tblrd		*
  3400  006CEC  CFF5 FF83          	movff	tablat,3971	;volatile
  3401  006CF0                     
  3402                           ;ssd.c: 91:             digitalWrite(PIN_A5,1);
  3403  006CF0  0E00               	movlw	0
  3404  006CF2  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3405  006CF4  0E05               	movlw	5
  3406  006CF6  6E01               	movwf	digitalWrite@pin^0,c
  3407  006CF8  0E00               	movlw	0
  3408  006CFA  6E04               	movwf	(digitalWrite@value+1)^0,c
  3409  006CFC  0E01               	movlw	1
  3410  006CFE  6E03               	movwf	digitalWrite@value^0,c
  3411  006D00  EC88  F038         	call	_digitalWrite	;wreg free
  3412  006D04                     l3432:
  3413                           
  3414                           ;ssd.c: 92:             display = 0;
  3415  006D04  0E00               	movlw	0
  3416  006D06  6E71               	movwf	_display^0,c
  3417                           
  3418                           ;ssd.c: 93:             break;
  3419  006D08  EFA3  F036         	goto	l235
  3420  006D0C                     l3438:
  3421  006D0C  5071               	movf	_display^0,w,c
  3422  006D0E  6E07               	movwf	??_ssdUpdate^0,c
  3423  006D10  6A08               	clrf	(??_ssdUpdate+1)^0,c
  3424                           
  3425                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3426                           ; Switch size 1, requested type "simple"
  3427                           ; Number of cases is 1, Range of values is 0 to 0
  3428                           ; switch strategies available:
  3429                           ; Name         Instructions Cycles
  3430                           ; simple_byte            4     3 (average)
  3431                           ;	Chosen strategy is simple_byte
  3432  006D12  5008               	movf	(??_ssdUpdate+1)^0,w,c
  3433  006D14  0A00               	xorlw	0	; case 0
  3434  006D16  B4D8               	btfsc	status,2,c
  3435  006D18  EF90  F036         	goto	l4150
  3436  006D1C  EF82  F036         	goto	l3432
  3437  006D20                     l4150:
  3438                           
  3439                           ; Switch size 1, requested type "simple"
  3440                           ; Number of cases is 4, Range of values is 0 to 3
  3441                           ; switch strategies available:
  3442                           ; Name         Instructions Cycles
  3443                           ; simple_byte           13     7 (average)
  3444                           ;	Chosen strategy is simple_byte
  3445  006D20  5007               	movf	??_ssdUpdate^0,w,c
  3446  006D22  0A00               	xorlw	0	; case 0
  3447  006D24  B4D8               	btfsc	status,2,c
  3448  006D26  EF2A  F036         	goto	l3410
  3449  006D2A  0A01               	xorlw	1	; case 1
  3450  006D2C  B4D8               	btfsc	status,2,c
  3451  006D2E  EF41  F036         	goto	l3416
  3452  006D32  0A03               	xorlw	3	; case 2
  3453  006D34  B4D8               	btfsc	status,2,c
  3454  006D36  EF58  F036         	goto	l3422
  3455  006D3A  0A01               	xorlw	1	; case 3
  3456  006D3C  B4D8               	btfsc	status,2,c
  3457  006D3E  EF6F  F036         	goto	l3428
  3458  006D42  EF82  F036         	goto	l3432
  3459  006D46                     l235:
  3460  006D46  0012               	return		;funcret
  3461  006D48                     __end_of_ssdUpdate:
  3462                           	callstack 0
  3463                           
  3464 ;; *************** function _digitalWrite *****************
  3465 ;; Defined at:
  3466 ;;		line 14 in file "io.c"
  3467 ;; Parameters:    Size  Location     Type
  3468 ;;  pin             2    0[COMRAM] int 
  3469 ;;  value           2    2[COMRAM] int 
  3470 ;; Auto vars:     Size  Location     Type
  3471 ;;		None
  3472 ;; Return value:  Size  Location     Type
  3473 ;;                  1    wreg      void 
  3474 ;; Registers used:
  3475 ;;		wreg, status,2, status,0
  3476 ;; Tracked objects:
  3477 ;;		On entry : 0/0
  3478 ;;		On exit  : 0/0
  3479 ;;		Unchanged: 0/0
  3480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3481 ;;      Params:         4       0       0       0       0       0       0
  3482 ;;      Locals:         0       0       0       0       0       0       0
  3483 ;;      Temps:          2       0       0       0       0       0       0
  3484 ;;      Totals:         6       0       0       0       0       0       0
  3485 ;;Total ram usage:        6 bytes
  3486 ;; Hardware stack levels used:    1
  3487 ;; This function calls:
  3488 ;;		Nothing
  3489 ;; This function is called by:
  3490 ;;		_ssdUpdate
  3491 ;; This function uses a non-reentrant model
  3492 ;;
  3493                           
  3494                           	psect	text6
  3495  007110                     __ptext6:
  3496                           	callstack 0
  3497  007110                     _digitalWrite:
  3498                           	callstack 29
  3499  007110                     
  3500                           ;io.c: 16:     if(pin <8){
  3501  007110  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3502  007112  EF96  F038         	goto	u1940
  3503  007116  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3504  007118  E107               	bnz	u1941
  3505  00711A  0E08               	movlw	8
  3506  00711C  5C01               	subwf	digitalWrite@pin^0,w,c
  3507  00711E  B0D8               	btfsc	status,0,c
  3508  007120  EF94  F038         	goto	u1941
  3509  007124  EF96  F038         	goto	u1940
  3510  007128                     u1941:
  3511  007128  EFC0  F038         	goto	l2786
  3512  00712C                     u1940:
  3513  00712C                     
  3514                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  3515  00712C  5003               	movf	digitalWrite@value^0,w,c
  3516  00712E  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3517  007130  B4D8               	btfsc	status,2,c
  3518  007132  EF9D  F038         	goto	u1951
  3519  007136  EF9F  F038         	goto	u1950
  3520  00713A                     u1951:
  3521  00713A  EFAF  F038         	goto	l2784
  3522  00713E                     u1950:
  3523  00713E  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3524  007142  0E01               	movlw	1
  3525  007144  6E06               	movwf	(??_digitalWrite+1)^0,c
  3526  007146  2A05               	incf	??_digitalWrite^0,f,c
  3527  007148  EFA8  F038         	goto	u1964
  3528  00714C                     u1965:
  3529  00714C  90D8               	bcf	status,0,c
  3530  00714E  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3531  007150                     u1964:
  3532  007150  2E05               	decfsz	??_digitalWrite^0,f,c
  3533  007152  EFA6  F038         	goto	u1965
  3534  007156  5006               	movf	(??_digitalWrite+1)^0,w,c
  3535  007158  1280               	iorwf	128,f,c	;volatile
  3536  00715A  EFAE  F039         	goto	l280
  3537  00715E                     l2784:
  3538  00715E  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3539  007162  0E01               	movlw	1
  3540  007164  6E06               	movwf	(??_digitalWrite+1)^0,c
  3541  007166  2A05               	incf	??_digitalWrite^0,f,c
  3542  007168  EFB8  F038         	goto	u1974
  3543  00716C                     u1975:
  3544  00716C  90D8               	bcf	status,0,c
  3545  00716E  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3546  007170                     u1974:
  3547  007170  2E05               	decfsz	??_digitalWrite^0,f,c
  3548  007172  EFB6  F038         	goto	u1975
  3549  007176  5006               	movf	(??_digitalWrite+1)^0,w,c
  3550  007178  0AFF               	xorlw	255
  3551  00717A  1680               	andwf	128,f,c	;volatile
  3552  00717C  EFAE  F039         	goto	l280
  3553  007180                     l2786:
  3554  007180  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3555  007182  EFCE  F038         	goto	u1980
  3556  007186  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3557  007188  E107               	bnz	u1981
  3558  00718A  0E10               	movlw	16
  3559  00718C  5C01               	subwf	digitalWrite@pin^0,w,c
  3560  00718E  B0D8               	btfsc	status,0,c
  3561  007190  EFCC  F038         	goto	u1981
  3562  007194  EFCE  F038         	goto	u1980
  3563  007198                     u1981:
  3564  007198  EFFC  F038         	goto	l2794
  3565  00719C                     u1980:
  3566  00719C                     
  3567                           ;io.c: 20:         pin -=8;
  3568  00719C  0EF8               	movlw	248
  3569  00719E  2601               	addwf	digitalWrite@pin^0,f,c
  3570  0071A0  0EFF               	movlw	255
  3571  0071A2  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3572                           
  3573                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  3574  0071A4  5003               	movf	digitalWrite@value^0,w,c
  3575  0071A6  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3576  0071A8  B4D8               	btfsc	status,2,c
  3577  0071AA  EFD9  F038         	goto	u1991
  3578  0071AE  EFDB  F038         	goto	u1990
  3579  0071B2                     u1991:
  3580  0071B2  EFEB  F038         	goto	l2792
  3581  0071B6                     u1990:
  3582  0071B6  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3583  0071BA  0E01               	movlw	1
  3584  0071BC  6E06               	movwf	(??_digitalWrite+1)^0,c
  3585  0071BE  2A05               	incf	??_digitalWrite^0,f,c
  3586  0071C0  EFE4  F038         	goto	u2004
  3587  0071C4                     u2005:
  3588  0071C4  90D8               	bcf	status,0,c
  3589  0071C6  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3590  0071C8                     u2004:
  3591  0071C8  2E05               	decfsz	??_digitalWrite^0,f,c
  3592  0071CA  EFE2  F038         	goto	u2005
  3593  0071CE  5006               	movf	(??_digitalWrite+1)^0,w,c
  3594  0071D0  1281               	iorwf	129,f,c	;volatile
  3595  0071D2  EFAE  F039         	goto	l280
  3596  0071D6                     l2792:
  3597  0071D6  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3598  0071DA  0E01               	movlw	1
  3599  0071DC  6E06               	movwf	(??_digitalWrite+1)^0,c
  3600  0071DE  2A05               	incf	??_digitalWrite^0,f,c
  3601  0071E0  EFF4  F038         	goto	u2014
  3602  0071E4                     u2015:
  3603  0071E4  90D8               	bcf	status,0,c
  3604  0071E6  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3605  0071E8                     u2014:
  3606  0071E8  2E05               	decfsz	??_digitalWrite^0,f,c
  3607  0071EA  EFF2  F038         	goto	u2015
  3608  0071EE  5006               	movf	(??_digitalWrite+1)^0,w,c
  3609  0071F0  0AFF               	xorlw	255
  3610  0071F2  1681               	andwf	129,f,c	;volatile
  3611  0071F4  EFAE  F039         	goto	l280
  3612  0071F8                     l2794:
  3613  0071F8  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3614  0071FA  EF0A  F039         	goto	u2020
  3615  0071FE  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3616  007200  E107               	bnz	u2021
  3617  007202  0E18               	movlw	24
  3618  007204  5C01               	subwf	digitalWrite@pin^0,w,c
  3619  007206  B0D8               	btfsc	status,0,c
  3620  007208  EF08  F039         	goto	u2021
  3621  00720C  EF0A  F039         	goto	u2020
  3622  007210                     u2021:
  3623  007210  EF38  F039         	goto	l2802
  3624  007214                     u2020:
  3625  007214                     
  3626                           ;io.c: 24:         pin -=16;
  3627  007214  0EF0               	movlw	240
  3628  007216  2601               	addwf	digitalWrite@pin^0,f,c
  3629  007218  0EFF               	movlw	255
  3630  00721A  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3631                           
  3632                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  3633  00721C  5003               	movf	digitalWrite@value^0,w,c
  3634  00721E  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3635  007220  B4D8               	btfsc	status,2,c
  3636  007222  EF15  F039         	goto	u2031
  3637  007226  EF17  F039         	goto	u2030
  3638  00722A                     u2031:
  3639  00722A  EF27  F039         	goto	l2800
  3640  00722E                     u2030:
  3641  00722E  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3642  007232  0E01               	movlw	1
  3643  007234  6E06               	movwf	(??_digitalWrite+1)^0,c
  3644  007236  2A05               	incf	??_digitalWrite^0,f,c
  3645  007238  EF20  F039         	goto	u2044
  3646  00723C                     u2045:
  3647  00723C  90D8               	bcf	status,0,c
  3648  00723E  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3649  007240                     u2044:
  3650  007240  2E05               	decfsz	??_digitalWrite^0,f,c
  3651  007242  EF1E  F039         	goto	u2045
  3652  007246  5006               	movf	(??_digitalWrite+1)^0,w,c
  3653  007248  1282               	iorwf	130,f,c	;volatile
  3654  00724A  EFAE  F039         	goto	l280
  3655  00724E                     l2800:
  3656  00724E  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3657  007252  0E01               	movlw	1
  3658  007254  6E06               	movwf	(??_digitalWrite+1)^0,c
  3659  007256  2A05               	incf	??_digitalWrite^0,f,c
  3660  007258  EF30  F039         	goto	u2054
  3661  00725C                     u2055:
  3662  00725C  90D8               	bcf	status,0,c
  3663  00725E  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3664  007260                     u2054:
  3665  007260  2E05               	decfsz	??_digitalWrite^0,f,c
  3666  007262  EF2E  F039         	goto	u2055
  3667  007266  5006               	movf	(??_digitalWrite+1)^0,w,c
  3668  007268  0AFF               	xorlw	255
  3669  00726A  1682               	andwf	130,f,c	;volatile
  3670  00726C  EFAE  F039         	goto	l280
  3671  007270                     l2802:
  3672  007270  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3673  007272  EF46  F039         	goto	u2060
  3674  007276  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3675  007278  E107               	bnz	u2061
  3676  00727A  0E20               	movlw	32
  3677  00727C  5C01               	subwf	digitalWrite@pin^0,w,c
  3678  00727E  B0D8               	btfsc	status,0,c
  3679  007280  EF44  F039         	goto	u2061
  3680  007284  EF46  F039         	goto	u2060
  3681  007288                     u2061:
  3682  007288  EF74  F039         	goto	l2810
  3683  00728C                     u2060:
  3684  00728C                     
  3685                           ;io.c: 28:         pin -=24;
  3686  00728C  0EE8               	movlw	232
  3687  00728E  2601               	addwf	digitalWrite@pin^0,f,c
  3688  007290  0EFF               	movlw	255
  3689  007292  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3690                           
  3691                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  3692  007294  5003               	movf	digitalWrite@value^0,w,c
  3693  007296  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3694  007298  B4D8               	btfsc	status,2,c
  3695  00729A  EF51  F039         	goto	u2071
  3696  00729E  EF53  F039         	goto	u2070
  3697  0072A2                     u2071:
  3698  0072A2  EF63  F039         	goto	l2808
  3699  0072A6                     u2070:
  3700  0072A6  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3701  0072AA  0E01               	movlw	1
  3702  0072AC  6E06               	movwf	(??_digitalWrite+1)^0,c
  3703  0072AE  2A05               	incf	??_digitalWrite^0,f,c
  3704  0072B0  EF5C  F039         	goto	u2084
  3705  0072B4                     u2085:
  3706  0072B4  90D8               	bcf	status,0,c
  3707  0072B6  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3708  0072B8                     u2084:
  3709  0072B8  2E05               	decfsz	??_digitalWrite^0,f,c
  3710  0072BA  EF5A  F039         	goto	u2085
  3711  0072BE  5006               	movf	(??_digitalWrite+1)^0,w,c
  3712  0072C0  1283               	iorwf	131,f,c	;volatile
  3713  0072C2  EFAE  F039         	goto	l280
  3714  0072C6                     l2808:
  3715  0072C6  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3716  0072CA  0E01               	movlw	1
  3717  0072CC  6E06               	movwf	(??_digitalWrite+1)^0,c
  3718  0072CE  2A05               	incf	??_digitalWrite^0,f,c
  3719  0072D0  EF6C  F039         	goto	u2094
  3720  0072D4                     u2095:
  3721  0072D4  90D8               	bcf	status,0,c
  3722  0072D6  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3723  0072D8                     u2094:
  3724  0072D8  2E05               	decfsz	??_digitalWrite^0,f,c
  3725  0072DA  EF6A  F039         	goto	u2095
  3726  0072DE  5006               	movf	(??_digitalWrite+1)^0,w,c
  3727  0072E0  0AFF               	xorlw	255
  3728  0072E2  1683               	andwf	131,f,c	;volatile
  3729  0072E4  EFAE  F039         	goto	l280
  3730  0072E8                     l2810:
  3731  0072E8  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3732  0072EA  EF82  F039         	goto	u2100
  3733  0072EE  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3734  0072F0  E107               	bnz	u2101
  3735  0072F2  0E28               	movlw	40
  3736  0072F4  5C01               	subwf	digitalWrite@pin^0,w,c
  3737  0072F6  B0D8               	btfsc	status,0,c
  3738  0072F8  EF80  F039         	goto	u2101
  3739  0072FC  EF82  F039         	goto	u2100
  3740  007300                     u2101:
  3741  007300  EFAE  F039         	goto	l280
  3742  007304                     u2100:
  3743  007304                     
  3744                           ;io.c: 32:         pin -=32;
  3745  007304  0EE0               	movlw	224
  3746  007306  2601               	addwf	digitalWrite@pin^0,f,c
  3747  007308  0EFF               	movlw	255
  3748  00730A  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3749                           
  3750                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  3751  00730C  5003               	movf	digitalWrite@value^0,w,c
  3752  00730E  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3753  007310  B4D8               	btfsc	status,2,c
  3754  007312  EF8D  F039         	goto	u2111
  3755  007316  EF8F  F039         	goto	u2110
  3756  00731A                     u2111:
  3757  00731A  EF9F  F039         	goto	l2816
  3758  00731E                     u2110:
  3759  00731E  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3760  007322  0E01               	movlw	1
  3761  007324  6E06               	movwf	(??_digitalWrite+1)^0,c
  3762  007326  2A05               	incf	??_digitalWrite^0,f,c
  3763  007328  EF98  F039         	goto	u2124
  3764  00732C                     u2125:
  3765  00732C  90D8               	bcf	status,0,c
  3766  00732E  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3767  007330                     u2124:
  3768  007330  2E05               	decfsz	??_digitalWrite^0,f,c
  3769  007332  EF96  F039         	goto	u2125
  3770  007336  5006               	movf	(??_digitalWrite+1)^0,w,c
  3771  007338  1284               	iorwf	132,f,c	;volatile
  3772  00733A  EFAE  F039         	goto	l280
  3773  00733E                     l2816:
  3774  00733E  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3775  007342  0E01               	movlw	1
  3776  007344  6E06               	movwf	(??_digitalWrite+1)^0,c
  3777  007346  2A05               	incf	??_digitalWrite^0,f,c
  3778  007348  EFA8  F039         	goto	u2134
  3779  00734C                     u2135:
  3780  00734C  90D8               	bcf	status,0,c
  3781  00734E  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3782  007350                     u2134:
  3783  007350  2E05               	decfsz	??_digitalWrite^0,f,c
  3784  007352  EFA6  F039         	goto	u2135
  3785  007356  5006               	movf	(??_digitalWrite+1)^0,w,c
  3786  007358  0AFF               	xorlw	255
  3787  00735A  1684               	andwf	132,f,c	;volatile
  3788  00735C                     l280:
  3789  00735C  0012               	return		;funcret
  3790  00735E                     __end_of_digitalWrite:
  3791                           	callstack 0
  3792                           
  3793 ;; *************** function _ssdInit *****************
  3794 ;; Defined at:
  3795 ;;		line 101 in file "ssd.c"
  3796 ;; Parameters:    Size  Location     Type
  3797 ;;		None
  3798 ;; Auto vars:     Size  Location     Type
  3799 ;;		None
  3800 ;; Return value:  Size  Location     Type
  3801 ;;                  1    wreg      void 
  3802 ;; Registers used:
  3803 ;;		wreg, status,2, status,0, cstack
  3804 ;; Tracked objects:
  3805 ;;		On entry : 0/0
  3806 ;;		On exit  : 0/0
  3807 ;;		Unchanged: 0/0
  3808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3809 ;;      Params:         0       0       0       0       0       0       0
  3810 ;;      Locals:         0       0       0       0       0       0       0
  3811 ;;      Temps:          0       0       0       0       0       0       0
  3812 ;;      Totals:         0       0       0       0       0       0       0
  3813 ;;Total ram usage:        0 bytes
  3814 ;; Hardware stack levels used:    1
  3815 ;; Hardware stack levels required when called:    1
  3816 ;; This function calls:
  3817 ;;		_pinMode
  3818 ;; This function is called by:
  3819 ;;		_main
  3820 ;; This function uses a non-reentrant model
  3821 ;;
  3822                           
  3823                           	psect	text7
  3824  005FC0                     __ptext7:
  3825                           	callstack 0
  3826  005FC0                     _ssdInit:
  3827                           	callstack 29
  3828  005FC0                     
  3829                           ;ssd.c: 103:     pinMode(PIN_A2, 0);
  3830  005FC0  0E00               	movlw	0
  3831  005FC2  6E02               	movwf	(pinMode@pin+1)^0,c
  3832  005FC4  0E02               	movlw	2
  3833  005FC6  6E01               	movwf	pinMode@pin^0,c
  3834  005FC8  0E00               	movlw	0
  3835  005FCA  6E04               	movwf	(pinMode@type+1)^0,c
  3836  005FCC  0E00               	movlw	0
  3837  005FCE  6E03               	movwf	pinMode@type^0,c
  3838  005FD0  EC61  F037         	call	_pinMode	;wreg free
  3839                           
  3840                           ;ssd.c: 104:     pinMode(PIN_A3, 0);
  3841  005FD4  0E00               	movlw	0
  3842  005FD6  6E02               	movwf	(pinMode@pin+1)^0,c
  3843  005FD8  0E03               	movlw	3
  3844  005FDA  6E01               	movwf	pinMode@pin^0,c
  3845  005FDC  0E00               	movlw	0
  3846  005FDE  6E04               	movwf	(pinMode@type+1)^0,c
  3847  005FE0  0E00               	movlw	0
  3848  005FE2  6E03               	movwf	pinMode@type^0,c
  3849  005FE4  EC61  F037         	call	_pinMode	;wreg free
  3850                           
  3851                           ;ssd.c: 105:     pinMode(PIN_A4, 0);
  3852  005FE8  0E00               	movlw	0
  3853  005FEA  6E02               	movwf	(pinMode@pin+1)^0,c
  3854  005FEC  0E04               	movlw	4
  3855  005FEE  6E01               	movwf	pinMode@pin^0,c
  3856  005FF0  0E00               	movlw	0
  3857  005FF2  6E04               	movwf	(pinMode@type+1)^0,c
  3858  005FF4  0E00               	movlw	0
  3859  005FF6  6E03               	movwf	pinMode@type^0,c
  3860  005FF8  EC61  F037         	call	_pinMode	;wreg free
  3861                           
  3862                           ;ssd.c: 106:     pinMode(PIN_A5, 0);
  3863  005FFC  0E00               	movlw	0
  3864  005FFE  6E02               	movwf	(pinMode@pin+1)^0,c
  3865  006000  0E05               	movlw	5
  3866  006002  6E01               	movwf	pinMode@pin^0,c
  3867  006004  0E00               	movlw	0
  3868  006006  6E04               	movwf	(pinMode@type+1)^0,c
  3869  006008  0E00               	movlw	0
  3870  00600A  6E03               	movwf	pinMode@type^0,c
  3871  00600C  EC61  F037         	call	_pinMode	;wreg free
  3872  006010                     
  3873                           ;ssd.c: 109:     TRISD = 0x00;
  3874  006010  0E00               	movlw	0
  3875  006012  6E95               	movwf	149,c	;volatile
  3876  006014  0012               	return		;funcret
  3877  006016                     __end_of_ssdInit:
  3878                           	callstack 0
  3879                           
  3880 ;; *************** function _pinMode *****************
  3881 ;; Defined at:
  3882 ;;		line 54 in file "io.c"
  3883 ;; Parameters:    Size  Location     Type
  3884 ;;  pin             2    0[COMRAM] int 
  3885 ;;  type            2    2[COMRAM] int 
  3886 ;; Auto vars:     Size  Location     Type
  3887 ;;		None
  3888 ;; Return value:  Size  Location     Type
  3889 ;;                  1    wreg      void 
  3890 ;; Registers used:
  3891 ;;		wreg, status,2, status,0
  3892 ;; Tracked objects:
  3893 ;;		On entry : 0/0
  3894 ;;		On exit  : 0/0
  3895 ;;		Unchanged: 0/0
  3896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3897 ;;      Params:         4       0       0       0       0       0       0
  3898 ;;      Locals:         0       0       0       0       0       0       0
  3899 ;;      Temps:          2       0       0       0       0       0       0
  3900 ;;      Totals:         6       0       0       0       0       0       0
  3901 ;;Total ram usage:        6 bytes
  3902 ;; Hardware stack levels used:    1
  3903 ;; This function calls:
  3904 ;;		Nothing
  3905 ;; This function is called by:
  3906 ;;		_ssdInit
  3907 ;; This function uses a non-reentrant model
  3908 ;;
  3909                           
  3910                           	psect	text8
  3911  006EC2                     __ptext8:
  3912                           	callstack 0
  3913  006EC2                     _pinMode:
  3914                           	callstack 29
  3915  006EC2                     
  3916                           ;io.c: 56:     if(pin <8){
  3917  006EC2  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3918  006EC4  EF6F  F037         	goto	u2140
  3919  006EC8  5002               	movf	(pinMode@pin+1)^0,w,c
  3920  006ECA  E107               	bnz	u2141
  3921  006ECC  0E08               	movlw	8
  3922  006ECE  5C01               	subwf	pinMode@pin^0,w,c
  3923  006ED0  B0D8               	btfsc	status,0,c
  3924  006ED2  EF6D  F037         	goto	u2141
  3925  006ED6  EF6F  F037         	goto	u2140
  3926  006EDA                     u2141:
  3927  006EDA  EF99  F037         	goto	l2826
  3928  006EDE                     u2140:
  3929  006EDE                     
  3930                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  3931  006EDE  5003               	movf	pinMode@type^0,w,c
  3932  006EE0  1004               	iorwf	(pinMode@type+1)^0,w,c
  3933  006EE2  B4D8               	btfsc	status,2,c
  3934  006EE4  EF76  F037         	goto	u2151
  3935  006EE8  EF78  F037         	goto	u2150
  3936  006EEC                     u2151:
  3937  006EEC  EF88  F037         	goto	l2824
  3938  006EF0                     u2150:
  3939  006EF0  C001  F005         	movff	pinMode@pin,??_pinMode
  3940  006EF4  0E01               	movlw	1
  3941  006EF6  6E06               	movwf	(??_pinMode+1)^0,c
  3942  006EF8  2A05               	incf	??_pinMode^0,f,c
  3943  006EFA  EF81  F037         	goto	u2164
  3944  006EFE                     u2165:
  3945  006EFE  90D8               	bcf	status,0,c
  3946  006F00  3606               	rlcf	(??_pinMode+1)^0,f,c
  3947  006F02                     u2164:
  3948  006F02  2E05               	decfsz	??_pinMode^0,f,c
  3949  006F04  EF7F  F037         	goto	u2165
  3950  006F08  5006               	movf	(??_pinMode+1)^0,w,c
  3951  006F0A  1292               	iorwf	146,f,c	;volatile
  3952  006F0C  EF87  F038         	goto	l314
  3953  006F10                     l2824:
  3954  006F10  C001  F005         	movff	pinMode@pin,??_pinMode
  3955  006F14  0E01               	movlw	1
  3956  006F16  6E06               	movwf	(??_pinMode+1)^0,c
  3957  006F18  2A05               	incf	??_pinMode^0,f,c
  3958  006F1A  EF91  F037         	goto	u2174
  3959  006F1E                     u2175:
  3960  006F1E  90D8               	bcf	status,0,c
  3961  006F20  3606               	rlcf	(??_pinMode+1)^0,f,c
  3962  006F22                     u2174:
  3963  006F22  2E05               	decfsz	??_pinMode^0,f,c
  3964  006F24  EF8F  F037         	goto	u2175
  3965  006F28  5006               	movf	(??_pinMode+1)^0,w,c
  3966  006F2A  0AFF               	xorlw	255
  3967  006F2C  1692               	andwf	146,f,c	;volatile
  3968  006F2E  EF87  F038         	goto	l314
  3969  006F32                     l2826:
  3970  006F32  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3971  006F34  EFA7  F037         	goto	u2180
  3972  006F38  5002               	movf	(pinMode@pin+1)^0,w,c
  3973  006F3A  E107               	bnz	u2181
  3974  006F3C  0E10               	movlw	16
  3975  006F3E  5C01               	subwf	pinMode@pin^0,w,c
  3976  006F40  B0D8               	btfsc	status,0,c
  3977  006F42  EFA5  F037         	goto	u2181
  3978  006F46  EFA7  F037         	goto	u2180
  3979  006F4A                     u2181:
  3980  006F4A  EFD5  F037         	goto	l2834
  3981  006F4E                     u2180:
  3982  006F4E                     
  3983                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  3984  006F4E  5003               	movf	pinMode@type^0,w,c
  3985  006F50  1004               	iorwf	(pinMode@type+1)^0,w,c
  3986  006F52  B4D8               	btfsc	status,2,c
  3987  006F54  EFAE  F037         	goto	u2191
  3988  006F58  EFB0  F037         	goto	u2190
  3989  006F5C                     u2191:
  3990  006F5C  EFC2  F037         	goto	l2832
  3991  006F60                     u2190:
  3992  006F60  C001  F005         	movff	pinMode@pin,??_pinMode
  3993  006F64  0EF8               	movlw	-8
  3994  006F66  2605               	addwf	??_pinMode^0,f,c
  3995  006F68  0E01               	movlw	1
  3996  006F6A  6E06               	movwf	(??_pinMode+1)^0,c
  3997  006F6C  2A05               	incf	??_pinMode^0,f,c
  3998  006F6E  EFBB  F037         	goto	u2204
  3999  006F72                     u2205:
  4000  006F72  90D8               	bcf	status,0,c
  4001  006F74  3606               	rlcf	(??_pinMode+1)^0,f,c
  4002  006F76                     u2204:
  4003  006F76  2E05               	decfsz	??_pinMode^0,f,c
  4004  006F78  EFB9  F037         	goto	u2205
  4005  006F7C  5006               	movf	(??_pinMode+1)^0,w,c
  4006  006F7E  1293               	iorwf	147,f,c	;volatile
  4007  006F80  EF87  F038         	goto	l314
  4008  006F84                     l2832:
  4009  006F84  C001  F005         	movff	pinMode@pin,??_pinMode
  4010  006F88  0EF8               	movlw	-8
  4011  006F8A  2605               	addwf	??_pinMode^0,f,c
  4012  006F8C  0E01               	movlw	1
  4013  006F8E  6E06               	movwf	(??_pinMode+1)^0,c
  4014  006F90  2A05               	incf	??_pinMode^0,f,c
  4015  006F92  EFCD  F037         	goto	u2214
  4016  006F96                     u2215:
  4017  006F96  90D8               	bcf	status,0,c
  4018  006F98  3606               	rlcf	(??_pinMode+1)^0,f,c
  4019  006F9A                     u2214:
  4020  006F9A  2E05               	decfsz	??_pinMode^0,f,c
  4021  006F9C  EFCB  F037         	goto	u2215
  4022  006FA0  5006               	movf	(??_pinMode+1)^0,w,c
  4023  006FA2  0AFF               	xorlw	255
  4024  006FA4  1693               	andwf	147,f,c	;volatile
  4025  006FA6  EF87  F038         	goto	l314
  4026  006FAA                     l2834:
  4027  006FAA  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4028  006FAC  EFE3  F037         	goto	u2220
  4029  006FB0  5002               	movf	(pinMode@pin+1)^0,w,c
  4030  006FB2  E107               	bnz	u2221
  4031  006FB4  0E18               	movlw	24
  4032  006FB6  5C01               	subwf	pinMode@pin^0,w,c
  4033  006FB8  B0D8               	btfsc	status,0,c
  4034  006FBA  EFE1  F037         	goto	u2221
  4035  006FBE  EFE3  F037         	goto	u2220
  4036  006FC2                     u2221:
  4037  006FC2  EF11  F038         	goto	l2842
  4038  006FC6                     u2220:
  4039  006FC6                     
  4040                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  4041  006FC6  5003               	movf	pinMode@type^0,w,c
  4042  006FC8  1004               	iorwf	(pinMode@type+1)^0,w,c
  4043  006FCA  B4D8               	btfsc	status,2,c
  4044  006FCC  EFEA  F037         	goto	u2231
  4045  006FD0  EFEC  F037         	goto	u2230
  4046  006FD4                     u2231:
  4047  006FD4  EFFE  F037         	goto	l2840
  4048  006FD8                     u2230:
  4049  006FD8  C001  F005         	movff	pinMode@pin,??_pinMode
  4050  006FDC  0EF0               	movlw	-16
  4051  006FDE  2605               	addwf	??_pinMode^0,f,c
  4052  006FE0  0E01               	movlw	1
  4053  006FE2  6E06               	movwf	(??_pinMode+1)^0,c
  4054  006FE4  2A05               	incf	??_pinMode^0,f,c
  4055  006FE6  EFF7  F037         	goto	u2244
  4056  006FEA                     u2245:
  4057  006FEA  90D8               	bcf	status,0,c
  4058  006FEC  3606               	rlcf	(??_pinMode+1)^0,f,c
  4059  006FEE                     u2244:
  4060  006FEE  2E05               	decfsz	??_pinMode^0,f,c
  4061  006FF0  EFF5  F037         	goto	u2245
  4062  006FF4  5006               	movf	(??_pinMode+1)^0,w,c
  4063  006FF6  1294               	iorwf	148,f,c	;volatile
  4064  006FF8  EF87  F038         	goto	l314
  4065  006FFC                     l2840:
  4066  006FFC  C001  F005         	movff	pinMode@pin,??_pinMode
  4067  007000  0EF0               	movlw	-16
  4068  007002  2605               	addwf	??_pinMode^0,f,c
  4069  007004  0E01               	movlw	1
  4070  007006  6E06               	movwf	(??_pinMode+1)^0,c
  4071  007008  2A05               	incf	??_pinMode^0,f,c
  4072  00700A  EF09  F038         	goto	u2254
  4073  00700E                     u2255:
  4074  00700E  90D8               	bcf	status,0,c
  4075  007010  3606               	rlcf	(??_pinMode+1)^0,f,c
  4076  007012                     u2254:
  4077  007012  2E05               	decfsz	??_pinMode^0,f,c
  4078  007014  EF07  F038         	goto	u2255
  4079  007018  5006               	movf	(??_pinMode+1)^0,w,c
  4080  00701A  0AFF               	xorlw	255
  4081  00701C  1694               	andwf	148,f,c	;volatile
  4082  00701E  EF87  F038         	goto	l314
  4083  007022                     l2842:
  4084  007022  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4085  007024  EF1F  F038         	goto	u2260
  4086  007028  5002               	movf	(pinMode@pin+1)^0,w,c
  4087  00702A  E107               	bnz	u2261
  4088  00702C  0E20               	movlw	32
  4089  00702E  5C01               	subwf	pinMode@pin^0,w,c
  4090  007030  B0D8               	btfsc	status,0,c
  4091  007032  EF1D  F038         	goto	u2261
  4092  007036  EF1F  F038         	goto	u2260
  4093  00703A                     u2261:
  4094  00703A  EF4D  F038         	goto	l2850
  4095  00703E                     u2260:
  4096  00703E                     
  4097                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  4098  00703E  5003               	movf	pinMode@type^0,w,c
  4099  007040  1004               	iorwf	(pinMode@type+1)^0,w,c
  4100  007042  B4D8               	btfsc	status,2,c
  4101  007044  EF26  F038         	goto	u2271
  4102  007048  EF28  F038         	goto	u2270
  4103  00704C                     u2271:
  4104  00704C  EF3A  F038         	goto	l2848
  4105  007050                     u2270:
  4106  007050  C001  F005         	movff	pinMode@pin,??_pinMode
  4107  007054  0EE8               	movlw	-24
  4108  007056  2605               	addwf	??_pinMode^0,f,c
  4109  007058  0E01               	movlw	1
  4110  00705A  6E06               	movwf	(??_pinMode+1)^0,c
  4111  00705C  2A05               	incf	??_pinMode^0,f,c
  4112  00705E  EF33  F038         	goto	u2284
  4113  007062                     u2285:
  4114  007062  90D8               	bcf	status,0,c
  4115  007064  3606               	rlcf	(??_pinMode+1)^0,f,c
  4116  007066                     u2284:
  4117  007066  2E05               	decfsz	??_pinMode^0,f,c
  4118  007068  EF31  F038         	goto	u2285
  4119  00706C  5006               	movf	(??_pinMode+1)^0,w,c
  4120  00706E  1295               	iorwf	149,f,c	;volatile
  4121  007070  EF87  F038         	goto	l314
  4122  007074                     l2848:
  4123  007074  C001  F005         	movff	pinMode@pin,??_pinMode
  4124  007078  0EE8               	movlw	-24
  4125  00707A  2605               	addwf	??_pinMode^0,f,c
  4126  00707C  0E01               	movlw	1
  4127  00707E  6E06               	movwf	(??_pinMode+1)^0,c
  4128  007080  2A05               	incf	??_pinMode^0,f,c
  4129  007082  EF45  F038         	goto	u2294
  4130  007086                     u2295:
  4131  007086  90D8               	bcf	status,0,c
  4132  007088  3606               	rlcf	(??_pinMode+1)^0,f,c
  4133  00708A                     u2294:
  4134  00708A  2E05               	decfsz	??_pinMode^0,f,c
  4135  00708C  EF43  F038         	goto	u2295
  4136  007090  5006               	movf	(??_pinMode+1)^0,w,c
  4137  007092  0AFF               	xorlw	255
  4138  007094  1695               	andwf	149,f,c	;volatile
  4139  007096  EF87  F038         	goto	l314
  4140  00709A                     l2850:
  4141  00709A  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4142  00709C  EF5B  F038         	goto	u2300
  4143  0070A0  5002               	movf	(pinMode@pin+1)^0,w,c
  4144  0070A2  E107               	bnz	u2301
  4145  0070A4  0E28               	movlw	40
  4146  0070A6  5C01               	subwf	pinMode@pin^0,w,c
  4147  0070A8  B0D8               	btfsc	status,0,c
  4148  0070AA  EF59  F038         	goto	u2301
  4149  0070AE  EF5B  F038         	goto	u2300
  4150  0070B2                     u2301:
  4151  0070B2  EF87  F038         	goto	l314
  4152  0070B6                     u2300:
  4153  0070B6                     
  4154                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  4155  0070B6  5003               	movf	pinMode@type^0,w,c
  4156  0070B8  1004               	iorwf	(pinMode@type+1)^0,w,c
  4157  0070BA  B4D8               	btfsc	status,2,c
  4158  0070BC  EF62  F038         	goto	u2311
  4159  0070C0  EF64  F038         	goto	u2310
  4160  0070C4                     u2311:
  4161  0070C4  EF76  F038         	goto	l2856
  4162  0070C8                     u2310:
  4163  0070C8  C001  F005         	movff	pinMode@pin,??_pinMode
  4164  0070CC  0EE0               	movlw	-32
  4165  0070CE  2605               	addwf	??_pinMode^0,f,c
  4166  0070D0  0E01               	movlw	1
  4167  0070D2  6E06               	movwf	(??_pinMode+1)^0,c
  4168  0070D4  2A05               	incf	??_pinMode^0,f,c
  4169  0070D6  EF6F  F038         	goto	u2324
  4170  0070DA                     u2325:
  4171  0070DA  90D8               	bcf	status,0,c
  4172  0070DC  3606               	rlcf	(??_pinMode+1)^0,f,c
  4173  0070DE                     u2324:
  4174  0070DE  2E05               	decfsz	??_pinMode^0,f,c
  4175  0070E0  EF6D  F038         	goto	u2325
  4176  0070E4  5006               	movf	(??_pinMode+1)^0,w,c
  4177  0070E6  1296               	iorwf	150,f,c	;volatile
  4178  0070E8  EF87  F038         	goto	l314
  4179  0070EC                     l2856:
  4180  0070EC  C001  F005         	movff	pinMode@pin,??_pinMode
  4181  0070F0  0EE0               	movlw	-32
  4182  0070F2  2605               	addwf	??_pinMode^0,f,c
  4183  0070F4  0E01               	movlw	1
  4184  0070F6  6E06               	movwf	(??_pinMode+1)^0,c
  4185  0070F8  2A05               	incf	??_pinMode^0,f,c
  4186  0070FA  EF81  F038         	goto	u2334
  4187  0070FE                     u2335:
  4188  0070FE  90D8               	bcf	status,0,c
  4189  007100  3606               	rlcf	(??_pinMode+1)^0,f,c
  4190  007102                     u2334:
  4191  007102  2E05               	decfsz	??_pinMode^0,f,c
  4192  007104  EF7F  F038         	goto	u2335
  4193  007108  5006               	movf	(??_pinMode+1)^0,w,c
  4194  00710A  0AFF               	xorlw	255
  4195  00710C  1696               	andwf	150,f,c	;volatile
  4196  00710E                     l314:
  4197  00710E  0012               	return		;funcret
  4198  007110                     __end_of_pinMode:
  4199                           	callstack 0
  4200                           
  4201 ;; *************** function _ssdDigit *****************
  4202 ;; Defined at:
  4203 ;;		line 38 in file "ssd.c"
  4204 ;; Parameters:    Size  Location     Type
  4205 ;;  val             1    wreg     unsigned char 
  4206 ;;  pos             1   14[COMRAM] unsigned char 
  4207 ;; Auto vars:     Size  Location     Type
  4208 ;;  val             1   15[COMRAM] unsigned char 
  4209 ;; Return value:  Size  Location     Type
  4210 ;;                  1    wreg      void 
  4211 ;; Registers used:
  4212 ;;		wreg, status,2, status,0
  4213 ;; Tracked objects:
  4214 ;;		On entry : 0/0
  4215 ;;		On exit  : 0/0
  4216 ;;		Unchanged: 0/0
  4217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4218 ;;      Params:         1       0       0       0       0       0       0
  4219 ;;      Locals:         1       0       0       0       0       0       0
  4220 ;;      Temps:          0       0       0       0       0       0       0
  4221 ;;      Totals:         2       0       0       0       0       0       0
  4222 ;;Total ram usage:        2 bytes
  4223 ;; Hardware stack levels used:    1
  4224 ;; This function calls:
  4225 ;;		Nothing
  4226 ;; This function is called by:
  4227 ;;		_main
  4228 ;; This function uses a non-reentrant model
  4229 ;;
  4230                           
  4231                           	psect	text9
  4232  00606C                     __ptext9:
  4233                           	callstack 0
  4234  00606C                     _ssdDigit:
  4235                           	callstack 30
  4236                           
  4237                           ;incstack = 0
  4238                           ;ssdDigit@val stored from wreg
  4239  00606C  6E10               	movwf	ssdDigit@val^0,c
  4240  00606E                     
  4241                           ;ssd.c: 39:     if (pos == 0) {
  4242  00606E  500F               	movf	ssdDigit@pos^0,w,c
  4243  006070  A4D8               	btfss	status,2,c
  4244  006072  EF3D  F030         	goto	u2801
  4245  006076  EF3F  F030         	goto	u2800
  4246  00607A                     u2801:
  4247  00607A  EF41  F030         	goto	l3364
  4248  00607E                     u2800:
  4249  00607E                     
  4250                           ;ssd.c: 40:         v0 = val;
  4251  00607E  C010  F070         	movff	ssdDigit@val,_v0
  4252  006082                     l3364:
  4253                           
  4254                           ;ssd.c: 42:     if (pos == 1) {
  4255  006082  040F               	decf	ssdDigit@pos^0,w,c
  4256  006084  A4D8               	btfss	status,2,c
  4257  006086  EF47  F030         	goto	u2811
  4258  00608A  EF49  F030         	goto	u2810
  4259  00608E                     u2811:
  4260  00608E  EF4B  F030         	goto	l3368
  4261  006092                     u2810:
  4262  006092                     
  4263                           ;ssd.c: 43:         v1 = val;
  4264  006092  C010  F06F         	movff	ssdDigit@val,_v1
  4265  006096                     l3368:
  4266                           
  4267                           ;ssd.c: 45:     if (pos == 2) {
  4268  006096  0E02               	movlw	2
  4269  006098  180F               	xorwf	ssdDigit@pos^0,w,c
  4270  00609A  A4D8               	btfss	status,2,c
  4271  00609C  EF52  F030         	goto	u2821
  4272  0060A0  EF54  F030         	goto	u2820
  4273  0060A4                     u2821:
  4274  0060A4  EF56  F030         	goto	l3372
  4275  0060A8                     u2820:
  4276  0060A8                     
  4277                           ;ssd.c: 46:         v2 = val;
  4278  0060A8  C010  F06E         	movff	ssdDigit@val,_v2
  4279  0060AC                     l3372:
  4280                           
  4281                           ;ssd.c: 48:     if (pos == 3) {
  4282  0060AC  0E03               	movlw	3
  4283  0060AE  180F               	xorwf	ssdDigit@pos^0,w,c
  4284  0060B0  A4D8               	btfss	status,2,c
  4285  0060B2  EF5D  F030         	goto	u2831
  4286  0060B6  EF5F  F030         	goto	u2830
  4287  0060BA                     u2831:
  4288  0060BA  EF61  F030         	goto	l225
  4289  0060BE                     u2830:
  4290  0060BE                     
  4291                           ;ssd.c: 49:         v3 = val;
  4292  0060BE  C010  F06D         	movff	ssdDigit@val,_v3
  4293  0060C2                     l225:
  4294  0060C2  0012               	return		;funcret
  4295  0060C4                     __end_of_ssdDigit:
  4296                           	callstack 0
  4297                           
  4298 ;; *************** function _rtc_r *****************
  4299 ;; Defined at:
  4300 ;;		line 44 in file "rtc_r.c"
  4301 ;; Parameters:    Size  Location     Type
  4302 ;;		None
  4303 ;; Auto vars:     Size  Location     Type
  4304 ;;  gols            1    9[COMRAM] unsigned char 
  4305 ;; Return value:  Size  Location     Type
  4306 ;;                  1    wreg      void 
  4307 ;; Registers used:
  4308 ;;		wreg, status,2, status,0, cstack
  4309 ;; Tracked objects:
  4310 ;;		On entry : 0/0
  4311 ;;		On exit  : 0/0
  4312 ;;		Unchanged: 0/0
  4313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4314 ;;      Params:         0       0       0       0       0       0       0
  4315 ;;      Locals:         1       0       0       0       0       0       0
  4316 ;;      Temps:          0       0       0       0       0       0       0
  4317 ;;      Totals:         1       0       0       0       0       0       0
  4318 ;;Total ram usage:        1 bytes
  4319 ;; Hardware stack levels used:    1
  4320 ;; Hardware stack levels required when called:    2
  4321 ;; This function calls:
  4322 ;;		_getd
  4323 ;;		_getu
  4324 ;;		_i2c_rb
  4325 ;;		_i2c_start
  4326 ;;		_i2c_stop
  4327 ;;		_i2c_wb
  4328 ;; This function is called by:
  4329 ;;		_main
  4330 ;; This function uses a non-reentrant model
  4331 ;;
  4332                           
  4333                           	psect	text10
  4334  006846                     __ptext10:
  4335                           	callstack 0
  4336  006846                     _rtc_r:
  4337                           	callstack 28
  4338  006846                     
  4339                           ;rtc_r.c: 46:   unsigned char gols;;rtc_r.c: 48:   i2c_start();
  4340  006846  EC41  F02F         	call	_i2c_start	;wreg free
  4341                           
  4342                           ;rtc_r.c: 49:   i2c_wb(0xD0);
  4343  00684A  0ED0               	movlw	208
  4344  00684C  EC90  F030         	call	_i2c_wb
  4345                           
  4346                           ;rtc_r.c: 50:   i2c_wb(0);
  4347  006850  0E00               	movlw	0
  4348  006852  EC90  F030         	call	_i2c_wb
  4349                           
  4350                           ;rtc_r.c: 52:   i2c_start();
  4351  006856  EC41  F02F         	call	_i2c_start	;wreg free
  4352                           
  4353                           ;rtc_r.c: 53:   i2c_wb(0xD1);
  4354  00685A  0ED1               	movlw	209
  4355  00685C  EC90  F030         	call	_i2c_wb
  4356                           
  4357                           ;rtc_r.c: 54:   gols= 0x7F & i2c_rb(1);
  4358  006860  0E01               	movlw	1
  4359  006862  ECBF  F032         	call	_i2c_rb
  4360  006866  0B7F               	andlw	127
  4361  006868  6E0A               	movwf	rtc_r@gols^0,c
  4362  00686A                     
  4363                           ;rtc_r.c: 55:   time[5]=':';
  4364  00686A  0E3A               	movlw	58
  4365  00686C  6E62               	movwf	(_time+5)^0,c	;volatile
  4366  00686E                     
  4367                           ;rtc_r.c: 56:   time[6]=getd(gols);
  4368  00686E  500A               	movf	rtc_r@gols^0,w,c
  4369  006870  EC3B  F02F         	call	_getd
  4370  006874  6E63               	movwf	(_time+6)^0,c	;volatile
  4371  006876                     
  4372                           ;rtc_r.c: 57:   time[7]=getu(gols);
  4373  006876  500A               	movf	rtc_r@gols^0,w,c
  4374  006878  EC36  F02F         	call	_getu
  4375  00687C  6E64               	movwf	(_time+7)^0,c	;volatile
  4376  00687E                     
  4377                           ;rtc_r.c: 58:   time[8]=0;
  4378  00687E  0E00               	movlw	0
  4379  006880  6E65               	movwf	(_time+8)^0,c	;volatile
  4380                           
  4381                           ;rtc_r.c: 60:   gols= 0x7F & i2c_rb(1);
  4382  006882  0E01               	movlw	1
  4383  006884  ECBF  F032         	call	_i2c_rb
  4384  006888  0B7F               	andlw	127
  4385  00688A  6E0A               	movwf	rtc_r@gols^0,c
  4386  00688C                     
  4387                           ;rtc_r.c: 61:   time[2]=':';
  4388  00688C  0E3A               	movlw	58
  4389  00688E  6E5F               	movwf	(_time+2)^0,c	;volatile
  4390  006890                     
  4391                           ;rtc_r.c: 62:   time[3]=getd(gols);
  4392  006890  500A               	movf	rtc_r@gols^0,w,c
  4393  006892  EC3B  F02F         	call	_getd
  4394  006896  6E60               	movwf	(_time+3)^0,c	;volatile
  4395  006898                     
  4396                           ;rtc_r.c: 63:   time[4]=getu(gols);
  4397  006898  500A               	movf	rtc_r@gols^0,w,c
  4398  00689A  EC36  F02F         	call	_getu
  4399  00689E  6E61               	movwf	(_time+4)^0,c	;volatile
  4400  0068A0                     
  4401                           ;rtc_r.c: 65:   gols= 0x3F & i2c_rb(1);
  4402  0068A0  0E01               	movlw	1
  4403  0068A2  ECBF  F032         	call	_i2c_rb
  4404  0068A6  0B3F               	andlw	63
  4405  0068A8  6E0A               	movwf	rtc_r@gols^0,c
  4406  0068AA                     
  4407                           ;rtc_r.c: 66:   time[0]=getd(gols);
  4408  0068AA  500A               	movf	rtc_r@gols^0,w,c
  4409  0068AC  EC3B  F02F         	call	_getd
  4410  0068B0  6E5D               	movwf	_time^0,c	;volatile
  4411  0068B2                     
  4412                           ;rtc_r.c: 67:   time[1]=getu(gols);
  4413  0068B2  500A               	movf	rtc_r@gols^0,w,c
  4414  0068B4  EC36  F02F         	call	_getu
  4415  0068B8  6E5E               	movwf	(_time+1)^0,c	;volatile
  4416  0068BA                     
  4417                           ;rtc_r.c: 69:   i2c_rb(1);
  4418  0068BA  0E01               	movlw	1
  4419  0068BC  ECBF  F032         	call	_i2c_rb
  4420  0068C0                     
  4421                           ;rtc_r.c: 71:   gols= 0x3F & i2c_rb(1);
  4422  0068C0  0E01               	movlw	1
  4423  0068C2  ECBF  F032         	call	_i2c_rb
  4424  0068C6  0B3F               	andlw	63
  4425  0068C8  6E0A               	movwf	rtc_r@gols^0,c
  4426  0068CA                     
  4427                           ;rtc_r.c: 72:   date[0]=getd(gols);
  4428  0068CA  500A               	movf	rtc_r@gols^0,w,c
  4429  0068CC  EC3B  F02F         	call	_getd
  4430  0068D0  6E73               	movwf	_date^0,c	;volatile
  4431  0068D2                     
  4432                           ;rtc_r.c: 73:   date[1]=getu(gols);
  4433  0068D2  500A               	movf	rtc_r@gols^0,w,c
  4434  0068D4  EC36  F02F         	call	_getu
  4435  0068D8  6E74               	movwf	(_date+1)^0,c	;volatile
  4436  0068DA                     
  4437                           ;rtc_r.c: 76:   gols= 0x1F & i2c_rb(1);
  4438  0068DA  0E01               	movlw	1
  4439  0068DC  ECBF  F032         	call	_i2c_rb
  4440  0068E0  0B1F               	andlw	31
  4441  0068E2  6E0A               	movwf	rtc_r@gols^0,c
  4442  0068E4                     
  4443                           ;rtc_r.c: 77:   date[2]='/';
  4444  0068E4  0E2F               	movlw	47
  4445  0068E6  6E75               	movwf	(_date+2)^0,c	;volatile
  4446                           
  4447                           ;rtc_r.c: 78:   date[3]=getd(gols);
  4448  0068E8  500A               	movf	rtc_r@gols^0,w,c
  4449  0068EA  EC3B  F02F         	call	_getd
  4450  0068EE  6E76               	movwf	(_date+3)^0,c	;volatile
  4451                           
  4452                           ;rtc_r.c: 79:   date[4]=getu(gols);
  4453  0068F0  500A               	movf	rtc_r@gols^0,w,c
  4454  0068F2  EC36  F02F         	call	_getu
  4455  0068F6  6E77               	movwf	(_date+4)^0,c	;volatile
  4456                           
  4457                           ;rtc_r.c: 81:   gols= i2c_rb(0);
  4458  0068F8  0E00               	movlw	0
  4459  0068FA  ECBF  F032         	call	_i2c_rb
  4460  0068FE  6E0A               	movwf	rtc_r@gols^0,c
  4461  006900                     
  4462                           ;rtc_r.c: 82:   date[5]='/';
  4463  006900  0E2F               	movlw	47
  4464  006902  6E78               	movwf	(_date+5)^0,c	;volatile
  4465  006904                     
  4466                           ;rtc_r.c: 83:   date[6]=getd(gols);
  4467  006904  500A               	movf	rtc_r@gols^0,w,c
  4468  006906  EC3B  F02F         	call	_getd
  4469  00690A  6E79               	movwf	(_date+6)^0,c	;volatile
  4470  00690C                     
  4471                           ;rtc_r.c: 84:   date[7]=getu(gols);
  4472  00690C  500A               	movf	rtc_r@gols^0,w,c
  4473  00690E  EC36  F02F         	call	_getu
  4474  006912  6E7A               	movwf	(_date+7)^0,c	;volatile
  4475  006914                     
  4476                           ;rtc_r.c: 85:   date[8]=0;
  4477  006914  0E00               	movlw	0
  4478  006916  6E7B               	movwf	(_date+8)^0,c	;volatile
  4479                           
  4480                           ;rtc_r.c: 87:   i2c_stop();
  4481  006918  EC49  F02F         	call	_i2c_stop	;wreg free
  4482  00691C  0012               	return		;funcret
  4483  00691E                     __end_of_rtc_r:
  4484                           	callstack 0
  4485                           
  4486 ;; *************** function _i2c_wb *****************
  4487 ;; Defined at:
  4488 ;;		line 62 in file "i2c.c"
  4489 ;; Parameters:    Size  Location     Type
  4490 ;;  val             1    wreg     unsigned char 
  4491 ;; Auto vars:     Size  Location     Type
  4492 ;;  val             1    6[COMRAM] unsigned char 
  4493 ;;  i               1    7[COMRAM] unsigned char 
  4494 ;; Return value:  Size  Location     Type
  4495 ;;                  1    wreg      void 
  4496 ;; Registers used:
  4497 ;;		wreg, status,2, status,0, cstack
  4498 ;; Tracked objects:
  4499 ;;		On entry : 0/0
  4500 ;;		On exit  : 0/0
  4501 ;;		Unchanged: 0/0
  4502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4503 ;;      Params:         0       0       0       0       0       0       0
  4504 ;;      Locals:         2       0       0       0       0       0       0
  4505 ;;      Temps:          2       0       0       0       0       0       0
  4506 ;;      Totals:         4       0       0       0       0       0       0
  4507 ;;Total ram usage:        4 bytes
  4508 ;; Hardware stack levels used:    1
  4509 ;; Hardware stack levels required when called:    1
  4510 ;; This function calls:
  4511 ;;		_delay
  4512 ;; This function is called by:
  4513 ;;		_rtc_r
  4514 ;; This function uses a non-reentrant model
  4515 ;;
  4516                           
  4517                           	psect	text11
  4518  006120                     __ptext11:
  4519                           	callstack 0
  4520  006120                     _i2c_wb:
  4521                           	callstack 28
  4522                           
  4523                           ;incstack = 0
  4524                           ;i2c_wb@val stored from wreg
  4525  006120  6E07               	movwf	i2c_wb@val^0,c
  4526  006122                     
  4527                           ;i2c.c: 63:     unsigned char i;;i2c.c: 64:     PORTCbits.RC3 = 0;
  4528  006122  9682               	bcf	130,3,c	;volatile
  4529  006124                     
  4530                           ;i2c.c: 65:     for (i = 0; i < 8; i++) {
  4531  006124  0E00               	movlw	0
  4532  006126  6E08               	movwf	i2c_wb@i^0,c
  4533  006128                     l2880:
  4534                           
  4535                           ;i2c.c: 66:         PORTCbits.RC4 = ((val >> (7 - i))& 0x01);
  4536  006128  5008               	movf	i2c_wb@i^0,w,c
  4537  00612A  0807               	sublw	7
  4538  00612C  6E05               	movwf	??_i2c_wb^0,c
  4539  00612E  C007  F006         	movff	i2c_wb@val,??_i2c_wb+1
  4540  006132  2A05               	incf	??_i2c_wb^0,f,c
  4541  006134  EF9E  F030         	goto	u2344
  4542  006138                     u2345:
  4543  006138  90D8               	bcf	status,0,c
  4544  00613A  3206               	rrcf	(??_i2c_wb+1)^0,f,c
  4545  00613C                     u2344:
  4546  00613C  2E05               	decfsz	??_i2c_wb^0,f,c
  4547  00613E  EF9C  F030         	goto	u2345
  4548  006142  0E01               	movlw	1
  4549  006144  1606               	andwf	(??_i2c_wb+1)^0,f,c
  4550  006146  3A06               	swapf	(??_i2c_wb+1)^0,f,c
  4551  006148  5082               	movf	130,w,c	;volatile
  4552  00614A  1806               	xorwf	(??_i2c_wb+1)^0,w,c
  4553  00614C  0BEF               	andlw	-17
  4554  00614E  1806               	xorwf	(??_i2c_wb+1)^0,w,c
  4555  006150  6E82               	movwf	130,c	;volatile
  4556  006152                     
  4557                           ;i2c.c: 67:         PORTCbits.RC3 = 1;
  4558  006152  8682               	bsf	130,3,c	;volatile
  4559  006154                     
  4560                           ;i2c.c: 68:         delay();
  4561  006154  ECBE  F030         	call	_delay	;wreg free
  4562  006158                     
  4563                           ;i2c.c: 69:         PORTCbits.RC3 = 0;
  4564  006158  9682               	bcf	130,3,c	;volatile
  4565  00615A                     
  4566                           ;i2c.c: 70:     }
  4567  00615A  2A08               	incf	i2c_wb@i^0,f,c
  4568  00615C  0E07               	movlw	7
  4569  00615E  6408               	cpfsgt	i2c_wb@i^0,c
  4570  006160  EFB4  F030         	goto	u2351
  4571  006164  EFB6  F030         	goto	u2350
  4572  006168                     u2351:
  4573  006168  EF94  F030         	goto	l2880
  4574  00616C                     u2350:
  4575  00616C                     
  4576                           ;i2c.c: 71:     PORTCbits.RC4 = 1;
  4577  00616C  8882               	bsf	130,4,c	;volatile
  4578  00616E                     
  4579                           ;i2c.c: 72:     delay();
  4580  00616E  ECBE  F030         	call	_delay	;wreg free
  4581  006172                     
  4582                           ;i2c.c: 73:     PORTCbits.RC3 = 1;
  4583  006172  8682               	bsf	130,3,c	;volatile
  4584                           
  4585                           ;i2c.c: 74:     delay();
  4586  006174  ECBE  F030         	call	_delay	;wreg free
  4587  006178                     
  4588                           ;i2c.c: 75:     PORTCbits.RC3 = 0;
  4589  006178  9682               	bcf	130,3,c	;volatile
  4590  00617A  0012               	return		;funcret
  4591  00617C                     __end_of_i2c_wb:
  4592                           	callstack 0
  4593                           
  4594 ;; *************** function _i2c_stop *****************
  4595 ;; Defined at:
  4596 ;;		line 54 in file "i2c.c"
  4597 ;; Parameters:    Size  Location     Type
  4598 ;;		None
  4599 ;; Auto vars:     Size  Location     Type
  4600 ;;		None
  4601 ;; Return value:  Size  Location     Type
  4602 ;;                  1    wreg      void 
  4603 ;; Registers used:
  4604 ;;		wreg, status,2, status,0, cstack
  4605 ;; Tracked objects:
  4606 ;;		On entry : 0/0
  4607 ;;		On exit  : 0/0
  4608 ;;		Unchanged: 0/0
  4609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4610 ;;      Params:         0       0       0       0       0       0       0
  4611 ;;      Locals:         0       0       0       0       0       0       0
  4612 ;;      Temps:          0       0       0       0       0       0       0
  4613 ;;      Totals:         0       0       0       0       0       0       0
  4614 ;;Total ram usage:        0 bytes
  4615 ;; Hardware stack levels used:    1
  4616 ;; Hardware stack levels required when called:    1
  4617 ;; This function calls:
  4618 ;;		_delay
  4619 ;; This function is called by:
  4620 ;;		_rtc_r
  4621 ;; This function uses a non-reentrant model
  4622 ;;
  4623                           
  4624                           	psect	text12
  4625  005E92                     __ptext12:
  4626                           	callstack 0
  4627  005E92                     _i2c_stop:
  4628                           	callstack 28
  4629  005E92                     
  4630                           ;i2c.c: 55:     PORTCbits.RC3 = 1;
  4631  005E92  8682               	bsf	130,3,c	;volatile
  4632                           
  4633                           ;i2c.c: 56:     PORTCbits.RC4 = 0;
  4634  005E94  9882               	bcf	130,4,c	;volatile
  4635  005E96                     
  4636                           ;i2c.c: 57:     delay();
  4637  005E96  ECBE  F030         	call	_delay	;wreg free
  4638  005E9A                     
  4639                           ;i2c.c: 58:     PORTCbits.RC4 = 1;
  4640  005E9A  8882               	bsf	130,4,c	;volatile
  4641                           
  4642                           ;i2c.c: 59:     delay();
  4643  005E9C  ECBE  F030         	call	_delay	;wreg free
  4644  005EA0  0012               	return		;funcret
  4645  005EA2                     __end_of_i2c_stop:
  4646                           	callstack 0
  4647                           
  4648 ;; *************** function _i2c_start *****************
  4649 ;; Defined at:
  4650 ;;		line 46 in file "i2c.c"
  4651 ;; Parameters:    Size  Location     Type
  4652 ;;		None
  4653 ;; Auto vars:     Size  Location     Type
  4654 ;;		None
  4655 ;; Return value:  Size  Location     Type
  4656 ;;                  1    wreg      void 
  4657 ;; Registers used:
  4658 ;;		wreg, status,2, status,0, cstack
  4659 ;; Tracked objects:
  4660 ;;		On entry : 0/0
  4661 ;;		On exit  : 0/0
  4662 ;;		Unchanged: 0/0
  4663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4664 ;;      Params:         0       0       0       0       0       0       0
  4665 ;;      Locals:         0       0       0       0       0       0       0
  4666 ;;      Temps:          0       0       0       0       0       0       0
  4667 ;;      Totals:         0       0       0       0       0       0       0
  4668 ;;Total ram usage:        0 bytes
  4669 ;; Hardware stack levels used:    1
  4670 ;; Hardware stack levels required when called:    1
  4671 ;; This function calls:
  4672 ;;		_delay
  4673 ;; This function is called by:
  4674 ;;		_rtc_r
  4675 ;; This function uses a non-reentrant model
  4676 ;;
  4677                           
  4678                           	psect	text13
  4679  005E82                     __ptext13:
  4680                           	callstack 0
  4681  005E82                     _i2c_start:
  4682                           	callstack 28
  4683  005E82                     
  4684                           ;i2c.c: 47:     PORTCbits.RC3 = 1;
  4685  005E82  8682               	bsf	130,3,c	;volatile
  4686                           
  4687                           ;i2c.c: 48:     PORTCbits.RC4 = 1;
  4688  005E84  8882               	bsf	130,4,c	;volatile
  4689  005E86                     
  4690                           ;i2c.c: 49:     delay();
  4691  005E86  ECBE  F030         	call	_delay	;wreg free
  4692  005E8A                     
  4693                           ;i2c.c: 50:     PORTCbits.RC4 = 0;
  4694  005E8A  9882               	bcf	130,4,c	;volatile
  4695                           
  4696                           ;i2c.c: 51:     delay();
  4697  005E8C  ECBE  F030         	call	_delay	;wreg free
  4698  005E90  0012               	return		;funcret
  4699  005E92                     __end_of_i2c_start:
  4700                           	callstack 0
  4701                           
  4702 ;; *************** function _i2c_rb *****************
  4703 ;; Defined at:
  4704 ;;		line 78 in file "i2c.c"
  4705 ;; Parameters:    Size  Location     Type
  4706 ;;  ack             1    wreg     unsigned char 
  4707 ;; Auto vars:     Size  Location     Type
  4708 ;;  ack             1    6[COMRAM] unsigned char 
  4709 ;;  i               1    8[COMRAM] unsigned char 
  4710 ;;  ret             1    7[COMRAM] unsigned char 
  4711 ;; Return value:  Size  Location     Type
  4712 ;;                  1    wreg      unsigned char 
  4713 ;; Registers used:
  4714 ;;		wreg, status,2, status,0, cstack
  4715 ;; Tracked objects:
  4716 ;;		On entry : 0/0
  4717 ;;		On exit  : 0/0
  4718 ;;		Unchanged: 0/0
  4719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4720 ;;      Params:         0       0       0       0       0       0       0
  4721 ;;      Locals:         3       0       0       0       0       0       0
  4722 ;;      Temps:          2       0       0       0       0       0       0
  4723 ;;      Totals:         5       0       0       0       0       0       0
  4724 ;;Total ram usage:        5 bytes
  4725 ;; Hardware stack levels used:    1
  4726 ;; Hardware stack levels required when called:    1
  4727 ;; This function calls:
  4728 ;;		_delay
  4729 ;; This function is called by:
  4730 ;;		_rtc_r
  4731 ;; This function uses a non-reentrant model
  4732 ;;
  4733                           
  4734                           	psect	text14
  4735  00657E                     __ptext14:
  4736                           	callstack 0
  4737  00657E                     _i2c_rb:
  4738                           	callstack 28
  4739                           
  4740                           ;incstack = 0
  4741                           ;i2c_rb@ack stored from wreg
  4742  00657E  6E07               	movwf	i2c_rb@ack^0,c
  4743  006580                     
  4744                           ;i2c.c: 79:     char i;;i2c.c: 80:     unsigned char ret = 0;
  4745  006580  0E00               	movlw	0
  4746  006582  6E08               	movwf	i2c_rb@ret^0,c
  4747  006584                     
  4748                           ;i2c.c: 82:     PORTCbits.RC3 = 0;
  4749  006584  9682               	bcf	130,3,c	;volatile
  4750  006586                     
  4751                           ;i2c.c: 83:     TRISCbits.TRISC4 = 1;
  4752  006586  8894               	bsf	148,4,c	;volatile
  4753  006588                     
  4754                           ;i2c.c: 84:     PORTCbits.RC4 = 1;
  4755  006588  8882               	bsf	130,4,c	;volatile
  4756                           
  4757                           ;i2c.c: 85:     for (i = 0; i < 8; i++) {
  4758  00658A  0E00               	movlw	0
  4759  00658C  6E09               	movwf	i2c_rb@i^0,c
  4760  00658E                     l486:
  4761                           
  4762                           ;i2c.c: 86:         PORTCbits.RC3 = 1;
  4763  00658E  8682               	bsf	130,3,c	;volatile
  4764  006590                     
  4765                           ;i2c.c: 87:         delay();
  4766  006590  ECBE  F030         	call	_delay	;wreg free
  4767  006594                     
  4768                           ;i2c.c: 88:         ret |= (PORTCbits.RC4 << (7 - i));
  4769  006594  5009               	movf	i2c_rb@i^0,w,c
  4770  006596  0807               	sublw	7
  4771  006598  6E05               	movwf	??_i2c_rb^0,c
  4772  00659A  B882               	btfsc	130,4,c	;volatile
  4773  00659C  EFD2  F032         	goto	u2361
  4774  0065A0  EFD6  F032         	goto	u2360
  4775  0065A4                     u2361:
  4776  0065A4  6A06               	clrf	(??_i2c_rb+1)^0,c
  4777  0065A6  2A06               	incf	(??_i2c_rb+1)^0,f,c
  4778  0065A8  EFD7  F032         	goto	u2368
  4779  0065AC                     u2360:
  4780  0065AC  6A06               	clrf	(??_i2c_rb+1)^0,c
  4781  0065AE                     u2368:
  4782  0065AE  2A05               	incf	??_i2c_rb^0,f,c
  4783  0065B0  EFDC  F032         	goto	u2374
  4784  0065B4                     u2375:
  4785  0065B4  90D8               	bcf	status,0,c
  4786  0065B6  3606               	rlcf	(??_i2c_rb+1)^0,f,c
  4787  0065B8                     u2374:
  4788  0065B8  2E05               	decfsz	??_i2c_rb^0,f,c
  4789  0065BA  EFDA  F032         	goto	u2375
  4790  0065BE  5006               	movf	(??_i2c_rb+1)^0,w,c
  4791  0065C0  1208               	iorwf	i2c_rb@ret^0,f,c
  4792  0065C2                     
  4793                           ;i2c.c: 89:         PORTCbits.RC3 = 0;
  4794  0065C2  9682               	bcf	130,3,c	;volatile
  4795  0065C4                     
  4796                           ;i2c.c: 90:     }
  4797  0065C4  2A09               	incf	i2c_rb@i^0,f,c
  4798  0065C6  0E07               	movlw	7
  4799  0065C8  6409               	cpfsgt	i2c_rb@i^0,c
  4800  0065CA  EFE9  F032         	goto	u2381
  4801  0065CE  EFEB  F032         	goto	u2380
  4802  0065D2                     u2381:
  4803  0065D2  EFC7  F032         	goto	l486
  4804  0065D6                     u2380:
  4805  0065D6                     
  4806                           ;i2c.c: 91:     TRISCbits.TRISC4 = 0;
  4807  0065D6  9894               	bcf	148,4,c	;volatile
  4808  0065D8                     
  4809                           ;i2c.c: 92:     if (ack)
  4810  0065D8  5007               	movf	i2c_rb@ack^0,w,c
  4811  0065DA  B4D8               	btfsc	status,2,c
  4812  0065DC  EFF2  F032         	goto	u2391
  4813  0065E0  EFF4  F032         	goto	u2390
  4814  0065E4                     u2391:
  4815  0065E4  EFF7  F032         	goto	l488
  4816  0065E8                     u2390:
  4817  0065E8                     
  4818                           ;i2c.c: 93:         PORTCbits.RC4 = 0;
  4819  0065E8  9882               	bcf	130,4,c	;volatile
  4820  0065EA  EFF8  F032         	goto	l2924
  4821  0065EE                     l488:
  4822                           
  4823                           ;i2c.c: 95:         PORTCbits.RC4 = 1;
  4824  0065EE  8882               	bsf	130,4,c	;volatile
  4825  0065F0                     l2924:
  4826                           
  4827                           ;i2c.c: 96:     delay();
  4828  0065F0  ECBE  F030         	call	_delay	;wreg free
  4829  0065F4                     
  4830                           ;i2c.c: 97:     PORTCbits.RC3 = 1;
  4831  0065F4  8682               	bsf	130,3,c	;volatile
  4832                           
  4833                           ;i2c.c: 98:     delay();
  4834  0065F6  ECBE  F030         	call	_delay	;wreg free
  4835  0065FA                     
  4836                           ;i2c.c: 99:     PORTCbits.RC3 = 0;
  4837  0065FA  9682               	bcf	130,3,c	;volatile
  4838  0065FC                     
  4839                           ;i2c.c: 101:     return ret;
  4840  0065FC  5008               	movf	i2c_rb@ret^0,w,c
  4841  0065FE  0012               	return		;funcret
  4842  006600                     __end_of_i2c_rb:
  4843                           	callstack 0
  4844                           
  4845 ;; *************** function _delay *****************
  4846 ;; Defined at:
  4847 ;;		line 29 in file "i2c.c"
  4848 ;; Parameters:    Size  Location     Type
  4849 ;;		None
  4850 ;; Auto vars:     Size  Location     Type
  4851 ;;  i               2    0[COMRAM] unsigned int 
  4852 ;;  k               1    3[COMRAM] volatile unsigned char 
  4853 ;;  j               1    2[COMRAM] volatile unsigned char 
  4854 ;; Return value:  Size  Location     Type
  4855 ;;                  1    wreg      void 
  4856 ;; Registers used:
  4857 ;;		wreg, status,2, status,0
  4858 ;; Tracked objects:
  4859 ;;		On entry : 0/0
  4860 ;;		On exit  : 0/0
  4861 ;;		Unchanged: 0/0
  4862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4863 ;;      Params:         0       0       0       0       0       0       0
  4864 ;;      Locals:         4       0       0       0       0       0       0
  4865 ;;      Temps:          0       0       0       0       0       0       0
  4866 ;;      Totals:         4       0       0       0       0       0       0
  4867 ;;Total ram usage:        4 bytes
  4868 ;; Hardware stack levels used:    1
  4869 ;; This function calls:
  4870 ;;		Nothing
  4871 ;; This function is called by:
  4872 ;;		_i2c_start
  4873 ;;		_i2c_stop
  4874 ;;		_i2c_wb
  4875 ;;		_i2c_rb
  4876 ;; This function uses a non-reentrant model
  4877 ;;
  4878                           
  4879                           	psect	text15
  4880  00617C                     __ptext15:
  4881                           	callstack 0
  4882  00617C                     _delay:
  4883                           	callstack 28
  4884  00617C                     
  4885                           ;i2c.c: 30:     unsigned int i;;i2c.c: 31:     volatile unsigned char j, k;;i2c.c: 33:  
      +                             for (i = 0; i < 5; i++) {
  4886  00617C  0E00               	movlw	0
  4887  00617E  6E02               	movwf	(delay@i+1)^0,c
  4888  006180  0E00               	movlw	0
  4889  006182  6E01               	movwf	delay@i^0,c
  4890  006184                     l2732:
  4891                           
  4892                           ;i2c.c: 34:         for (j = 0; j < 41; j++) {
  4893  006184  0E00               	movlw	0
  4894  006186  6E03               	movwf	delay@j^0,c	;volatile
  4895  006188                     l2734:
  4896  006188  0E28               	movlw	40
  4897  00618A  6403               	cpfsgt	delay@j^0,c	;volatile
  4898  00618C  EFCA  F030         	goto	u1881
  4899  006190  EFCC  F030         	goto	u1880
  4900  006194                     u1881:
  4901  006194  EFCE  F030         	goto	l2738
  4902  006198                     u1880:
  4903  006198  EFE0  F030         	goto	l2752
  4904  00619C                     l2738:
  4905                           
  4906                           ;i2c.c: 35:             for (k = 0; k < 3; k++);
  4907  00619C  0E00               	movlw	0
  4908  00619E  6E04               	movwf	delay@k^0,c	;volatile
  4909  0061A0                     l2740:
  4910  0061A0  0E02               	movlw	2
  4911  0061A2  6404               	cpfsgt	delay@k^0,c	;volatile
  4912  0061A4  EFD6  F030         	goto	u1891
  4913  0061A8  EFD8  F030         	goto	u1890
  4914  0061AC                     u1891:
  4915  0061AC  EFDA  F030         	goto	l2744
  4916  0061B0                     u1890:
  4917  0061B0  EFDD  F030         	goto	l2748
  4918  0061B4                     l2744:
  4919  0061B4  2A04               	incf	delay@k^0,f,c	;volatile
  4920  0061B6  EFD0  F030         	goto	l2740
  4921  0061BA                     l2748:
  4922                           
  4923                           ;i2c.c: 36:         }
  4924  0061BA  2A03               	incf	delay@j^0,f,c	;volatile
  4925  0061BC  EFC4  F030         	goto	l2734
  4926  0061C0                     l2752:
  4927                           
  4928                           ;i2c.c: 37:     }
  4929  0061C0  4A01               	infsnz	delay@i^0,f,c
  4930  0061C2  2A02               	incf	(delay@i+1)^0,f,c
  4931  0061C4  5002               	movf	(delay@i+1)^0,w,c
  4932  0061C6  E109               	bnz	u1900
  4933  0061C8  0E05               	movlw	5
  4934  0061CA  5C01               	subwf	delay@i^0,w,c
  4935  0061CC  A0D8               	btfss	status,0,c
  4936  0061CE  EFEB  F030         	goto	u1901
  4937  0061D2  EFED  F030         	goto	u1900
  4938  0061D6                     u1901:
  4939  0061D6  EFC2  F030         	goto	l2732
  4940  0061DA                     u1900:
  4941  0061DA  0012               	return		;funcret
  4942  0061DC                     __end_of_delay:
  4943                           	callstack 0
  4944                           
  4945 ;; *************** function _getu *****************
  4946 ;; Defined at:
  4947 ;;		line 38 in file "rtc_r.c"
  4948 ;; Parameters:    Size  Location     Type
  4949 ;;  nn              1    wreg     unsigned char 
  4950 ;; Auto vars:     Size  Location     Type
  4951 ;;  nn              1    0[COMRAM] unsigned char 
  4952 ;; Return value:  Size  Location     Type
  4953 ;;                  1    wreg      unsigned char 
  4954 ;; Registers used:
  4955 ;;		wreg, status,2, status,0
  4956 ;; Tracked objects:
  4957 ;;		On entry : 0/0
  4958 ;;		On exit  : 0/0
  4959 ;;		Unchanged: 0/0
  4960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4961 ;;      Params:         0       0       0       0       0       0       0
  4962 ;;      Locals:         1       0       0       0       0       0       0
  4963 ;;      Temps:          0       0       0       0       0       0       0
  4964 ;;      Totals:         1       0       0       0       0       0       0
  4965 ;;Total ram usage:        1 bytes
  4966 ;; Hardware stack levels used:    1
  4967 ;; This function calls:
  4968 ;;		Nothing
  4969 ;; This function is called by:
  4970 ;;		_rtc_r
  4971 ;; This function uses a non-reentrant model
  4972 ;;
  4973                           
  4974                           	psect	text16
  4975  005E6C                     __ptext16:
  4976                           	callstack 0
  4977  005E6C                     _getu:
  4978                           	callstack 29
  4979                           
  4980                           ;incstack = 0
  4981                           ;getu@nn stored from wreg
  4982  005E6C  6E01               	movwf	getu@nn^0,c
  4983  005E6E                     
  4984                           ;rtc_r.c: 38: unsigned char getu(unsigned char nn);rtc_r.c: 39: {;rtc_r.c: 40:   return 
      +                          (nn & 0x0F)+0x30;
  4985  005E6E  5001               	movf	getu@nn^0,w,c
  4986  005E70  0B0F               	andlw	15
  4987  005E72  0F30               	addlw	48
  4988  005E74  0012               	return		;funcret
  4989  005E76                     __end_of_getu:
  4990                           	callstack 0
  4991                           
  4992 ;; *************** function _getd *****************
  4993 ;; Defined at:
  4994 ;;		line 33 in file "rtc_r.c"
  4995 ;; Parameters:    Size  Location     Type
  4996 ;;  nn              1    wreg     unsigned char 
  4997 ;; Auto vars:     Size  Location     Type
  4998 ;;  nn              1    0[COMRAM] unsigned char 
  4999 ;; Return value:  Size  Location     Type
  5000 ;;                  1    wreg      unsigned char 
  5001 ;; Registers used:
  5002 ;;		wreg, status,2, status,0
  5003 ;; Tracked objects:
  5004 ;;		On entry : 0/0
  5005 ;;		On exit  : 0/0
  5006 ;;		Unchanged: 0/0
  5007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5008 ;;      Params:         0       0       0       0       0       0       0
  5009 ;;      Locals:         1       0       0       0       0       0       0
  5010 ;;      Temps:          0       0       0       0       0       0       0
  5011 ;;      Totals:         1       0       0       0       0       0       0
  5012 ;;Total ram usage:        1 bytes
  5013 ;; Hardware stack levels used:    1
  5014 ;; This function calls:
  5015 ;;		Nothing
  5016 ;; This function is called by:
  5017 ;;		_rtc_r
  5018 ;; This function uses a non-reentrant model
  5019 ;;
  5020                           
  5021                           	psect	text17
  5022  005E76                     __ptext17:
  5023                           	callstack 0
  5024  005E76                     _getd:
  5025                           	callstack 29
  5026                           
  5027                           ;incstack = 0
  5028                           ;getd@nn stored from wreg
  5029  005E76  6E01               	movwf	getd@nn^0,c
  5030  005E78                     
  5031                           ;rtc_r.c: 33: unsigned char getd(unsigned char nn);rtc_r.c: 34: {;rtc_r.c: 35:  return (
      +                          (nn & 0xF0)>>4)+0x30;
  5032  005E78  3801               	swapf	getd@nn^0,w,c
  5033  005E7A  0B0F               	andlw	15
  5034  005E7C  0B0F               	andlw	15
  5035  005E7E  0F30               	addlw	48
  5036  005E80  0012               	return		;funcret
  5037  005E82                     __end_of_getd:
  5038                           	callstack 0
  5039                           
  5040 ;; *************** function _pwmSet1 *****************
  5041 ;; Defined at:
  5042 ;;		line 23 in file "pwm.c"
  5043 ;; Parameters:    Size  Location     Type
  5044 ;;  porcento        1    wreg     unsigned char 
  5045 ;; Auto vars:     Size  Location     Type
  5046 ;;  porcento        1    9[COMRAM] unsigned char 
  5047 ;;  val             2   10[COMRAM] unsigned int 
  5048 ;; Return value:  Size  Location     Type
  5049 ;;                  1    wreg      void 
  5050 ;; Registers used:
  5051 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5052 ;; Tracked objects:
  5053 ;;		On entry : 0/0
  5054 ;;		On exit  : 0/0
  5055 ;;		Unchanged: 0/0
  5056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5057 ;;      Params:         0       0       0       0       0       0       0
  5058 ;;      Locals:         3       0       0       0       0       0       0
  5059 ;;      Temps:          2       0       0       0       0       0       0
  5060 ;;      Totals:         5       0       0       0       0       0       0
  5061 ;;Total ram usage:        5 bytes
  5062 ;; Hardware stack levels used:    1
  5063 ;; Hardware stack levels required when called:    1
  5064 ;; This function calls:
  5065 ;;		___lwdiv
  5066 ;;		___wmul
  5067 ;; This function is called by:
  5068 ;;		_main
  5069 ;; This function uses a non-reentrant model
  5070 ;;
  5071                           
  5072                           	psect	text18
  5073  006240                     __ptext18:
  5074                           	callstack 0
  5075  006240                     _pwmSet1:
  5076                           	callstack 29
  5077                           
  5078                           ;incstack = 0
  5079                           ;pwmSet1@porcento stored from wreg
  5080  006240  6E0A               	movwf	pwmSet1@porcento^0,c
  5081  006242                     
  5082                           ;pwm.c: 23: void pwmSet1(unsigned char porcento);pwm.c: 24: {;pwm.c: 30:  unsigned int v
      +                          al = ((unsigned int)porcento) *((*(volatile __near unsigned char*)0xFCB)+1);
  5083  006242  0E01               	movlw	1
  5084  006244  24CB               	addwf	203,w,c	;volatile
  5085  006246  6E01               	movwf	___wmul@multiplier^0,c
  5086  006248  6A02               	clrf	(___wmul@multiplier+1)^0,c
  5087  00624A  0E00               	movlw	0
  5088  00624C  2202               	addwfc	(___wmul@multiplier+1)^0,f,c
  5089  00624E  C00A  F003         	movff	pwmSet1@porcento,___wmul@multiplicand
  5090  006252  6A04               	clrf	(___wmul@multiplicand+1)^0,c
  5091  006254  EC74  F02F         	call	___wmul	;wreg free
  5092  006258  C001  F00B         	movff	?___wmul,pwmSet1@val
  5093  00625C  C002  F00C         	movff	?___wmul+1,pwmSet1@val+1
  5094  006260                     
  5095                           ;pwm.c: 31:  val = val / 25;
  5096  006260  C00B  F001         	movff	pwmSet1@val,___lwdiv@dividend
  5097  006264  C00C  F002         	movff	pwmSet1@val+1,___lwdiv@dividend+1
  5098  006268  0E00               	movlw	0
  5099  00626A  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  5100  00626C  0E19               	movlw	25
  5101  00626E  6E03               	movwf	___lwdiv@divisor^0,c
  5102  006270  EC56  F031         	call	___lwdiv	;wreg free
  5103  006274  C001  F00B         	movff	?___lwdiv,pwmSet1@val
  5104  006278  C002  F00C         	movff	?___lwdiv+1,pwmSet1@val+1
  5105  00627C                     
  5106                           ;pwm.c: 33:  val &= 0x03ff;
  5107  00627C  0EFF               	movlw	255
  5108  00627E  160B               	andwf	pwmSet1@val^0,f,c
  5109  006280  0E03               	movlw	3
  5110  006282  160C               	andwf	(pwmSet1@val+1)^0,f,c
  5111  006284                     
  5112                           ;pwm.c: 35:  (*(volatile __near unsigned char*)0xFBE) = val >> 2;
  5113  006284  C00B  F008         	movff	pwmSet1@val,??_pwmSet1
  5114  006288  C00C  F009         	movff	pwmSet1@val+1,??_pwmSet1+1
  5115  00628C  90D8               	bcf	status,0,c
  5116  00628E  3209               	rrcf	(??_pwmSet1+1)^0,f,c
  5117  006290  3208               	rrcf	??_pwmSet1^0,f,c
  5118  006292  90D8               	bcf	status,0,c
  5119  006294  3209               	rrcf	(??_pwmSet1+1)^0,f,c
  5120  006296  3208               	rrcf	??_pwmSet1^0,f,c
  5121  006298  5008               	movf	??_pwmSet1^0,w,c
  5122  00629A  6EBE               	movwf	190,c	;volatile
  5123  00629C                     
  5124                           ;pwm.c: 37:  (*(volatile __near unsigned char*)0xFBD) |= (val & 0x0003) << 4;
  5125  00629C  C00B  F008         	movff	pwmSet1@val,??_pwmSet1
  5126  0062A0  0E03               	movlw	3
  5127  0062A2  1608               	andwf	??_pwmSet1^0,f,c
  5128  0062A4  3808               	swapf	??_pwmSet1^0,w,c
  5129  0062A6  0BF0               	andlw	240
  5130  0062A8  12BD               	iorwf	189,f,c	;volatile
  5131  0062AA  0012               	return		;funcret
  5132  0062AC                     __end_of_pwmSet1:
  5133                           	callstack 0
  5134                           
  5135 ;; *************** function ___lwdiv *****************
  5136 ;; Defined at:
  5137 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\lwdiv.c"
  5138 ;; Parameters:    Size  Location     Type
  5139 ;;  dividend        2    0[COMRAM] unsigned int 
  5140 ;;  divisor         2    2[COMRAM] unsigned int 
  5141 ;; Auto vars:     Size  Location     Type
  5142 ;;  quotient        2    4[COMRAM] unsigned int 
  5143 ;;  counter         1    6[COMRAM] unsigned char 
  5144 ;; Return value:  Size  Location     Type
  5145 ;;                  2    0[COMRAM] unsigned int 
  5146 ;; Registers used:
  5147 ;;		wreg, status,2, status,0
  5148 ;; Tracked objects:
  5149 ;;		On entry : 0/0
  5150 ;;		On exit  : 0/0
  5151 ;;		Unchanged: 0/0
  5152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5153 ;;      Params:         4       0       0       0       0       0       0
  5154 ;;      Locals:         3       0       0       0       0       0       0
  5155 ;;      Temps:          0       0       0       0       0       0       0
  5156 ;;      Totals:         7       0       0       0       0       0       0
  5157 ;;Total ram usage:        7 bytes
  5158 ;; Hardware stack levels used:    1
  5159 ;; This function calls:
  5160 ;;		Nothing
  5161 ;; This function is called by:
  5162 ;;		_pwmSet1
  5163 ;;		_pwmSet2
  5164 ;; This function uses a non-reentrant model
  5165 ;;
  5166                           
  5167                           	psect	text19
  5168  0062AC                     __ptext19:
  5169                           	callstack 0
  5170  0062AC                     ___lwdiv:
  5171                           	callstack 29
  5172  0062AC  0E00               	movlw	0
  5173  0062AE  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  5174  0062B0  0E00               	movlw	0
  5175  0062B2  6E05               	movwf	___lwdiv@quotient^0,c
  5176  0062B4  5003               	movf	___lwdiv@divisor^0,w,c
  5177  0062B6  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  5178  0062B8  B4D8               	btfsc	status,2,c
  5179  0062BA  EF61  F031         	goto	u2461
  5180  0062BE  EF63  F031         	goto	u2460
  5181  0062C2                     u2461:
  5182  0062C2  EF8B  F031         	goto	l984
  5183  0062C6                     u2460:
  5184  0062C6  0E01               	movlw	1
  5185  0062C8  6E07               	movwf	___lwdiv@counter^0,c
  5186  0062CA  EF6B  F031         	goto	l2998
  5187  0062CE                     l2996:
  5188  0062CE  90D8               	bcf	status,0,c
  5189  0062D0  3603               	rlcf	___lwdiv@divisor^0,f,c
  5190  0062D2  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  5191  0062D4  2A07               	incf	___lwdiv@counter^0,f,c
  5192  0062D6                     l2998:
  5193  0062D6  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  5194  0062D8  EF70  F031         	goto	u2471
  5195  0062DC  EF72  F031         	goto	u2470
  5196  0062E0                     u2471:
  5197  0062E0  EF67  F031         	goto	l2996
  5198  0062E4                     u2470:
  5199  0062E4                     l3000:
  5200  0062E4  90D8               	bcf	status,0,c
  5201  0062E6  3605               	rlcf	___lwdiv@quotient^0,f,c
  5202  0062E8  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  5203  0062EA  5003               	movf	___lwdiv@divisor^0,w,c
  5204  0062EC  5C01               	subwf	___lwdiv@dividend^0,w,c
  5205  0062EE  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  5206  0062F0  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  5207  0062F2  A0D8               	btfss	status,0,c
  5208  0062F4  EF7E  F031         	goto	u2481
  5209  0062F8  EF80  F031         	goto	u2480
  5210  0062FC                     u2481:
  5211  0062FC  EF85  F031         	goto	l3008
  5212  006300                     u2480:
  5213  006300  5003               	movf	___lwdiv@divisor^0,w,c
  5214  006302  5E01               	subwf	___lwdiv@dividend^0,f,c
  5215  006304  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  5216  006306  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  5217  006308  8005               	bsf	___lwdiv@quotient^0,0,c
  5218  00630A                     l3008:
  5219  00630A  90D8               	bcf	status,0,c
  5220  00630C  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  5221  00630E  3203               	rrcf	___lwdiv@divisor^0,f,c
  5222  006310  2E07               	decfsz	___lwdiv@counter^0,f,c
  5223  006312  EF72  F031         	goto	l3000
  5224  006316                     l984:
  5225  006316  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  5226  00631A  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5227  00631E  0012               	return		;funcret
  5228  006320                     __end_of___lwdiv:
  5229                           	callstack 0
  5230                           
  5231 ;; *************** function _pwmInit *****************
  5232 ;; Defined at:
  5233 ;;		line 59 in file "pwm.c"
  5234 ;; Parameters:    Size  Location     Type
  5235 ;;		None
  5236 ;; Auto vars:     Size  Location     Type
  5237 ;;		None
  5238 ;; Return value:  Size  Location     Type
  5239 ;;                  1    wreg      void 
  5240 ;; Registers used:
  5241 ;;		wreg, status,2, status,0
  5242 ;; Tracked objects:
  5243 ;;		On entry : 0/0
  5244 ;;		On exit  : 0/0
  5245 ;;		Unchanged: 0/0
  5246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5247 ;;      Params:         0       0       0       0       0       0       0
  5248 ;;      Locals:         0       0       0       0       0       0       0
  5249 ;;      Temps:          0       0       0       0       0       0       0
  5250 ;;      Totals:         0       0       0       0       0       0       0
  5251 ;;Total ram usage:        0 bytes
  5252 ;; Hardware stack levels used:    1
  5253 ;; This function calls:
  5254 ;;		Nothing
  5255 ;; This function is called by:
  5256 ;;		_main
  5257 ;; This function uses a non-reentrant model
  5258 ;;
  5259                           
  5260                           	psect	text20
  5261  005EB2                     __ptext20:
  5262                           	callstack 0
  5263  005EB2                     _pwmInit:
  5264                           	callstack 30
  5265  005EB2                     
  5266                           ;pwm.c: 61:  (((*(volatile __near unsigned char*)0xF94)) &= ~(1<<1));
  5267  005EB2  9294               	bcf	148,1,c	;volatile
  5268                           
  5269                           ;pwm.c: 62:  (((*(volatile __near unsigned char*)0xF94)) &= ~(1<<2));
  5270  005EB4  9494               	bcf	148,2,c	;volatile
  5271  005EB6                     
  5272                           ;pwm.c: 64:  (*(volatile __near unsigned char*)0xFCA) |= 0b00000011;
  5273  005EB6  0E03               	movlw	3
  5274  005EB8  12CA               	iorwf	202,f,c	;volatile
  5275  005EBA                     
  5276                           ;pwm.c: 65:  (((*(volatile __near unsigned char*)0xFCA)) |= (1<<2));
  5277  005EBA  84CA               	bsf	202,2,c	;volatile
  5278                           
  5279                           ;pwm.c: 68:  (*(volatile __near unsigned char*)0xFBD) |= 0b00001100;
  5280  005EBC  0E0C               	movlw	12
  5281  005EBE  12BD               	iorwf	189,f,c	;volatile
  5282                           
  5283                           ;pwm.c: 69:  (*(volatile __near unsigned char*)0xFBA) |= 0b00001100;
  5284  005EC0  0E0C               	movlw	12
  5285  005EC2  12BA               	iorwf	186,f,c	;volatile
  5286  005EC4  0012               	return		;funcret
  5287  005EC6                     __end_of_pwmInit:
  5288                           	callstack 0
  5289                           
  5290 ;; *************** function _pwmFrequency *****************
  5291 ;; Defined at:
  5292 ;;		line 52 in file "pwm.c"
  5293 ;; Parameters:    Size  Location     Type
  5294 ;;  freq            2   14[COMRAM] unsigned int 
  5295 ;; Auto vars:     Size  Location     Type
  5296 ;;		None
  5297 ;; Return value:  Size  Location     Type
  5298 ;;                  1    wreg      void 
  5299 ;; Registers used:
  5300 ;;		wreg, status,2, status,0, cstack
  5301 ;; Tracked objects:
  5302 ;;		On entry : 0/0
  5303 ;;		On exit  : 0/0
  5304 ;;		Unchanged: 0/0
  5305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5306 ;;      Params:         2       0       0       0       0       0       0
  5307 ;;      Locals:         0       0       0       0       0       0       0
  5308 ;;      Temps:          0       0       0       0       0       0       0
  5309 ;;      Totals:         2       0       0       0       0       0       0
  5310 ;;Total ram usage:        2 bytes
  5311 ;; Hardware stack levels used:    1
  5312 ;; Hardware stack levels required when called:    1
  5313 ;; This function calls:
  5314 ;;		___aldiv
  5315 ;; This function is called by:
  5316 ;;		_main
  5317 ;; This function uses a non-reentrant model
  5318 ;;
  5319                           
  5320                           	psect	text21
  5321  005F0E                     __ptext21:
  5322                           	callstack 0
  5323  005F0E                     _pwmFrequency:
  5324                           	callstack 29
  5325  005F0E                     
  5326                           ;pwm.c: 52: void pwmFrequency(unsigned int freq);pwm.c: 53: {;pwm.c: 56:  (*(volatile __
      +                          near unsigned char*)0xFCB) = (125000/(freq)) - 1;
  5327  005F0E  0E48               	movlw	72
  5328  005F10  6E01               	movwf	___aldiv@dividend^0,c
  5329  005F12  0EE8               	movlw	232
  5330  005F14  6E02               	movwf	(___aldiv@dividend+1)^0,c
  5331  005F16  0E01               	movlw	1
  5332  005F18  6E03               	movwf	(___aldiv@dividend+2)^0,c
  5333  005F1A  0E00               	movlw	0
  5334  005F1C  6E04               	movwf	(___aldiv@dividend+3)^0,c
  5335  005F1E  C00F  F005         	movff	pwmFrequency@freq,___aldiv@divisor
  5336  005F22  C010  F006         	movff	pwmFrequency@freq+1,___aldiv@divisor+1
  5337  005F26  6A07               	clrf	(___aldiv@divisor+2)^0,c
  5338  005F28  6A08               	clrf	(___aldiv@divisor+3)^0,c
  5339  005F2A  EC76  F035         	call	___aldiv	;wreg free
  5340  005F2E  0401               	decf	?___aldiv^0,w,c
  5341  005F30  6ECB               	movwf	203,c	;volatile
  5342  005F32  0012               	return		;funcret
  5343  005F34                     __end_of_pwmFrequency:
  5344                           	callstack 0
  5345                           
  5346 ;; *************** function ___aldiv *****************
  5347 ;; Defined at:
  5348 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aldiv.c"
  5349 ;; Parameters:    Size  Location     Type
  5350 ;;  dividend        4    0[COMRAM] long 
  5351 ;;  divisor         4    4[COMRAM] long 
  5352 ;; Auto vars:     Size  Location     Type
  5353 ;;  quotient        4   10[COMRAM] long 
  5354 ;;  sign            1    9[COMRAM] unsigned char 
  5355 ;;  counter         1    8[COMRAM] unsigned char 
  5356 ;; Return value:  Size  Location     Type
  5357 ;;                  4    0[COMRAM] long 
  5358 ;; Registers used:
  5359 ;;		wreg, status,2, status,0
  5360 ;; Tracked objects:
  5361 ;;		On entry : 0/0
  5362 ;;		On exit  : 0/0
  5363 ;;		Unchanged: 0/0
  5364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5365 ;;      Params:         8       0       0       0       0       0       0
  5366 ;;      Locals:         6       0       0       0       0       0       0
  5367 ;;      Temps:          0       0       0       0       0       0       0
  5368 ;;      Totals:        14       0       0       0       0       0       0
  5369 ;;Total ram usage:       14 bytes
  5370 ;; Hardware stack levels used:    1
  5371 ;; This function calls:
  5372 ;;		Nothing
  5373 ;; This function is called by:
  5374 ;;		_pwmFrequency
  5375 ;; This function uses a non-reentrant model
  5376 ;;
  5377                           
  5378                           	psect	text22
  5379  006AEC                     __ptext22:
  5380                           	callstack 0
  5381  006AEC                     ___aldiv:
  5382                           	callstack 29
  5383  006AEC  0E00               	movlw	0
  5384  006AEE  6E0A               	movwf	___aldiv@sign^0,c
  5385  006AF0  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  5386  006AF2  EF7F  F035         	goto	u2400
  5387  006AF6  EF7D  F035         	goto	u2401
  5388  006AFA                     u2401:
  5389  006AFA  EF89  F035         	goto	l2954
  5390  006AFE                     u2400:
  5391  006AFE  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  5392  006B00  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  5393  006B02  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  5394  006B04  6C05               	negf	___aldiv@divisor^0,c
  5395  006B06  0E00               	movlw	0
  5396  006B08  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  5397  006B0A  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  5398  006B0C  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  5399  006B0E  0E01               	movlw	1
  5400  006B10  6E0A               	movwf	___aldiv@sign^0,c
  5401  006B12                     l2954:
  5402  006B12  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  5403  006B14  EF90  F035         	goto	u2410
  5404  006B18  EF8E  F035         	goto	u2411
  5405  006B1C                     u2411:
  5406  006B1C  EF9A  F035         	goto	l2960
  5407  006B20                     u2410:
  5408  006B20  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  5409  006B22  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  5410  006B24  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  5411  006B26  6C01               	negf	___aldiv@dividend^0,c
  5412  006B28  0E00               	movlw	0
  5413  006B2A  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  5414  006B2C  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  5415  006B2E  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  5416  006B30  0E01               	movlw	1
  5417  006B32  1A0A               	xorwf	___aldiv@sign^0,f,c
  5418  006B34                     l2960:
  5419  006B34  0E00               	movlw	0
  5420  006B36  6E0B               	movwf	___aldiv@quotient^0,c
  5421  006B38  0E00               	movlw	0
  5422  006B3A  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  5423  006B3C  0E00               	movlw	0
  5424  006B3E  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  5425  006B40  0E00               	movlw	0
  5426  006B42  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  5427  006B44  5005               	movf	___aldiv@divisor^0,w,c
  5428  006B46  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  5429  006B48  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  5430  006B4A  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  5431  006B4C  B4D8               	btfsc	status,2,c
  5432  006B4E  EFAB  F035         	goto	u2421
  5433  006B52  EFAD  F035         	goto	u2420
  5434  006B56                     u2421:
  5435  006B56  EFE3  F035         	goto	l2982
  5436  006B5A                     u2420:
  5437  006B5A  0E01               	movlw	1
  5438  006B5C  6E09               	movwf	___aldiv@counter^0,c
  5439  006B5E  EFB7  F035         	goto	l2968
  5440  006B62                     l2966:
  5441  006B62  90D8               	bcf	status,0,c
  5442  006B64  3605               	rlcf	___aldiv@divisor^0,f,c
  5443  006B66  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  5444  006B68  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  5445  006B6A  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  5446  006B6C  2A09               	incf	___aldiv@counter^0,f,c
  5447  006B6E                     l2968:
  5448  006B6E  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  5449  006B70  EFBC  F035         	goto	u2431
  5450  006B74  EFBE  F035         	goto	u2430
  5451  006B78                     u2431:
  5452  006B78  EFB1  F035         	goto	l2966
  5453  006B7C                     u2430:
  5454  006B7C                     l2970:
  5455  006B7C  90D8               	bcf	status,0,c
  5456  006B7E  360B               	rlcf	___aldiv@quotient^0,f,c
  5457  006B80  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  5458  006B82  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  5459  006B84  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  5460  006B86  5005               	movf	___aldiv@divisor^0,w,c
  5461  006B88  5C01               	subwf	___aldiv@dividend^0,w,c
  5462  006B8A  5006               	movf	(___aldiv@divisor+1)^0,w,c
  5463  006B8C  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  5464  006B8E  5007               	movf	(___aldiv@divisor+2)^0,w,c
  5465  006B90  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  5466  006B92  5008               	movf	(___aldiv@divisor+3)^0,w,c
  5467  006B94  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  5468  006B96  A0D8               	btfss	status,0,c
  5469  006B98  EFD0  F035         	goto	u2441
  5470  006B9C  EFD2  F035         	goto	u2440
  5471  006BA0                     u2441:
  5472  006BA0  EFDB  F035         	goto	l2978
  5473  006BA4                     u2440:
  5474  006BA4  5005               	movf	___aldiv@divisor^0,w,c
  5475  006BA6  5E01               	subwf	___aldiv@dividend^0,f,c
  5476  006BA8  5006               	movf	(___aldiv@divisor+1)^0,w,c
  5477  006BAA  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  5478  006BAC  5007               	movf	(___aldiv@divisor+2)^0,w,c
  5479  006BAE  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  5480  006BB0  5008               	movf	(___aldiv@divisor+3)^0,w,c
  5481  006BB2  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  5482  006BB4  800B               	bsf	___aldiv@quotient^0,0,c
  5483  006BB6                     l2978:
  5484  006BB6  90D8               	bcf	status,0,c
  5485  006BB8  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  5486  006BBA  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  5487  006BBC  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  5488  006BBE  3205               	rrcf	___aldiv@divisor^0,f,c
  5489  006BC0  2E09               	decfsz	___aldiv@counter^0,f,c
  5490  006BC2  EFBE  F035         	goto	l2970
  5491  006BC6                     l2982:
  5492  006BC6  500A               	movf	___aldiv@sign^0,w,c
  5493  006BC8  B4D8               	btfsc	status,2,c
  5494  006BCA  EFE9  F035         	goto	u2451
  5495  006BCE  EFEB  F035         	goto	u2450
  5496  006BD2                     u2451:
  5497  006BD2  EFF3  F035         	goto	l2986
  5498  006BD6                     u2450:
  5499  006BD6  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  5500  006BD8  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  5501  006BDA  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  5502  006BDC  6C0B               	negf	___aldiv@quotient^0,c
  5503  006BDE  0E00               	movlw	0
  5504  006BE0  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  5505  006BE2  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  5506  006BE4  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  5507  006BE6                     l2986:
  5508  006BE6  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  5509  006BEA  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  5510  006BEE  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  5511  006BF2  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  5512  006BF6  0012               	return		;funcret
  5513  006BF8                     __end_of___aldiv:
  5514                           	callstack 0
  5515                           
  5516 ;; *************** function _partida_andamento *****************
  5517 ;; Defined at:
  5518 ;;		line 153 in file "main.c"
  5519 ;; Parameters:    Size  Location     Type
  5520 ;;  gols            1    wreg     unsigned char 
  5521 ;;  gols2           1   12[COMRAM] unsigned char 
  5522 ;;  turno           1   13[COMRAM] unsigned char 
  5523 ;; Auto vars:     Size  Location     Type
  5524 ;;  gols            1   14[COMRAM] unsigned char 
  5525 ;; Return value:  Size  Location     Type
  5526 ;;                  1    wreg      void 
  5527 ;; Registers used:
  5528 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5529 ;; Tracked objects:
  5530 ;;		On entry : 0/0
  5531 ;;		On exit  : 0/0
  5532 ;;		Unchanged: 0/0
  5533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5534 ;;      Params:         2       0       0       0       0       0       0
  5535 ;;      Locals:         1       0       0       0       0       0       0
  5536 ;;      Temps:          0       0       0       0       0       0       0
  5537 ;;      Totals:         3       0       0       0       0       0       0
  5538 ;;Total ram usage:        3 bytes
  5539 ;; Hardware stack levels used:    1
  5540 ;; Hardware stack levels required when called:    3
  5541 ;; This function calls:
  5542 ;;		_lcd_cmd
  5543 ;;		_lcd_dat
  5544 ;;		_lcd_str
  5545 ;; This function is called by:
  5546 ;;		_main
  5547 ;; This function uses a non-reentrant model
  5548 ;;
  5549                           
  5550                           	psect	text23
  5551  006320                     __ptext23:
  5552                           	callstack 0
  5553  006320                     _partida_andamento:
  5554                           	callstack 27
  5555                           
  5556                           ;incstack = 0
  5557                           ;partida_andamento@gols stored from wreg
  5558  006320  6E0F               	movwf	partida_andamento@gols^0,c
  5559  006322                     
  5560                           ;main.c: 154:     lcd_cmd(0x01);
  5561  006322  0E01               	movlw	1
  5562  006324  EC9A  F02F         	call	_lcd_cmd
  5563                           
  5564                           ;main.c: 156:     lcd_cmd(0x80);
  5565  006328  0E80               	movlw	128
  5566  00632A  EC9A  F02F         	call	_lcd_cmd
  5567  00632E                     
  5568                           ;main.c: 157:     lcd_str("  Em Andamento");
  5569  00632E  0E5F               	movlw	low STR_4
  5570  006330  6E08               	movwf	lcd_str@str^0,c
  5571  006332  0E7F               	movlw	high STR_4
  5572  006334  6E09               	movwf	(lcd_str@str+1)^0,c
  5573  006336  ECCB  F031         	call	_lcd_str	;wreg free
  5574  00633A                     
  5575                           ;main.c: 158:     lcd_cmd(0xC0);
  5576  00633A  0EC0               	movlw	192
  5577  00633C  EC9A  F02F         	call	_lcd_cmd
  5578  006340                     
  5579                           ;main.c: 159:     lcd_dat(turno);
  5580  006340  500E               	movf	partida_andamento@turno^0,w,c
  5581  006342  ECAF  F02F         	call	_lcd_dat
  5582  006346                     
  5583                           ;main.c: 160:     lcd_dat(0xDF);
  5584  006346  0EDF               	movlw	223
  5585  006348  ECAF  F02F         	call	_lcd_dat
  5586                           
  5587                           ;main.c: 161:     lcd_str(" Tempo");
  5588  00634C  0EE3               	movlw	low STR_5
  5589  00634E  6E08               	movwf	lcd_str@str^0,c
  5590  006350  0E7F               	movlw	high STR_5
  5591  006352  6E09               	movwf	(lcd_str@str+1)^0,c
  5592  006354  ECCB  F031         	call	_lcd_str	;wreg free
  5593  006358                     
  5594                           ;main.c: 162:     lcd_cmd(0x90);
  5595  006358  0E90               	movlw	144
  5596  00635A  EC9A  F02F         	call	_lcd_cmd
  5597  00635E                     
  5598                           ;main.c: 163:     lcd_str("Time A -");
  5599  00635E  0EC8               	movlw	low STR_6
  5600  006360  6E08               	movwf	lcd_str@str^0,c
  5601  006362  0E7F               	movlw	high STR_6
  5602  006364  6E09               	movwf	(lcd_str@str+1)^0,c
  5603  006366  ECCB  F031         	call	_lcd_str	;wreg free
  5604                           
  5605                           ;main.c: 164:     lcd_cmd(0x90 + 9);
  5606  00636A  0E99               	movlw	153
  5607  00636C  EC9A  F02F         	call	_lcd_cmd
  5608                           
  5609                           ;main.c: 165:     lcd_dat(gols);
  5610  006370  500F               	movf	partida_andamento@gols^0,w,c
  5611  006372  ECAF  F02F         	call	_lcd_dat
  5612                           
  5613                           ;main.c: 166:     lcd_cmd(0xD0);
  5614  006376  0ED0               	movlw	208
  5615  006378  EC9A  F02F         	call	_lcd_cmd
  5616  00637C                     
  5617                           ;main.c: 167:     lcd_str("Time B -");
  5618  00637C  0ED1               	movlw	low STR_7
  5619  00637E  6E08               	movwf	lcd_str@str^0,c
  5620  006380  0E7F               	movlw	high STR_7
  5621  006382  6E09               	movwf	(lcd_str@str+1)^0,c
  5622  006384  ECCB  F031         	call	_lcd_str	;wreg free
  5623  006388                     
  5624                           ;main.c: 168:     lcd_cmd(0xD0 + 9);
  5625  006388  0ED9               	movlw	217
  5626  00638A  EC9A  F02F         	call	_lcd_cmd
  5627  00638E                     
  5628                           ;main.c: 169:     lcd_dat(gols2);
  5629  00638E  500D               	movf	partida_andamento@gols2^0,w,c
  5630  006390  ECAF  F02F         	call	_lcd_dat
  5631  006394  0012               	return		;funcret
  5632  006396                     __end_of_partida_andamento:
  5633                           	callstack 0
  5634                           
  5635 ;; *************** function _nike_logo *****************
  5636 ;; Defined at:
  5637 ;;		line 76 in file "main.c"
  5638 ;; Parameters:    Size  Location     Type
  5639 ;;		None
  5640 ;; Auto vars:     Size  Location     Type
  5641 ;;  nike_logo      56   12[COMRAM] unsigned char [56]
  5642 ;;  i               1   69[COMRAM] unsigned char 
  5643 ;;  j               1   68[COMRAM] unsigned char 
  5644 ;; Return value:  Size  Location     Type
  5645 ;;                  1    wreg      void 
  5646 ;; Registers used:
  5647 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5648 ;; Tracked objects:
  5649 ;;		On entry : 0/0
  5650 ;;		On exit  : 0/0
  5651 ;;		Unchanged: 0/0
  5652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5653 ;;      Params:         0       0       0       0       0       0       0
  5654 ;;      Locals:        58       0       0       0       0       0       0
  5655 ;;      Temps:          0       0       0       0       0       0       0
  5656 ;;      Totals:        58       0       0       0       0       0       0
  5657 ;;Total ram usage:       58 bytes
  5658 ;; Hardware stack levels used:    1
  5659 ;; Hardware stack levels required when called:    3
  5660 ;; This function calls:
  5661 ;;		_atraso_ms
  5662 ;;		_lcd_cmd
  5663 ;;		_lcd_dat
  5664 ;;		_lcd_str
  5665 ;; This function is called by:
  5666 ;;		_main
  5667 ;; This function uses a non-reentrant model
  5668 ;;
  5669                           
  5670                           	psect	text24
  5671  006A02                     __ptext24:
  5672                           	callstack 0
  5673  006A02                     _nike_logo:
  5674                           	callstack 27
  5675  006A02                     
  5676                           ;main.c: 77:     unsigned char i, j;;main.c: 78:     char nike_logo[56] = {
  5677  006A02  EE21  F000         	lfsr	2,nike_logo@F2453
  5678  006A06  EE10  F00D         	lfsr	1,nike_logo@nike_logo
  5679  006A0A  0E37               	movlw	55
  5680  006A0C                     u2561:
  5681  006A0C  CFDB FFE3          	movff	plusw2,plusw1
  5682  006A10  06E8               	decf	wreg,f,c
  5683  006A12  E2FC               	bc	u2561
  5684  006A14                     
  5685                           ;main.c: 87:     lcd_cmd(0x40);
  5686  006A14  0E40               	movlw	64
  5687  006A16  EC9A  F02F         	call	_lcd_cmd
  5688  006A1A                     
  5689                           ;main.c: 89:     for (i = 0; i < 56; i++) {
  5690  006A1A  0E00               	movlw	0
  5691  006A1C  6E46               	movwf	nike_logo@i^0,c
  5692  006A1E                     l3096:
  5693                           
  5694                           ;main.c: 90:         lcd_dat(nike_logo[i]);
  5695  006A1E  0E0D               	movlw	low nike_logo@nike_logo
  5696  006A20  2446               	addwf	nike_logo@i^0,w,c
  5697  006A22  6ED9               	movwf	fsr2l,c
  5698  006A24  6ADA               	clrf	fsr2h,c
  5699  006A26  0E00               	movlw	high nike_logo@nike_logo
  5700  006A28  22DA               	addwfc	fsr2h,f,c
  5701  006A2A  50DF               	movf	indf2,w,c
  5702  006A2C  ECAF  F02F         	call	_lcd_dat
  5703  006A30                     
  5704                           ;main.c: 91:     }
  5705  006A30  2A46               	incf	nike_logo@i^0,f,c
  5706  006A32  0E37               	movlw	55
  5707  006A34  6446               	cpfsgt	nike_logo@i^0,c
  5708  006A36  EF1F  F035         	goto	u2571
  5709  006A3A  EF21  F035         	goto	u2570
  5710  006A3E                     u2571:
  5711  006A3E  EF0F  F035         	goto	l3096
  5712  006A42                     u2570:
  5713  006A42                     
  5714                           ;main.c: 92:     lcd_cmd(0x90 + 9);
  5715  006A42  0E99               	movlw	153
  5716  006A44  EC9A  F02F         	call	_lcd_cmd
  5717                           
  5718                           ;main.c: 93:     lcd_dat(0);
  5719  006A48  0E00               	movlw	0
  5720  006A4A  ECAF  F02F         	call	_lcd_dat
  5721                           
  5722                           ;main.c: 94:     lcd_dat(1);
  5723  006A4E  0E01               	movlw	1
  5724  006A50  ECAF  F02F         	call	_lcd_dat
  5725                           
  5726                           ;main.c: 95:     lcd_dat(2);
  5727  006A54  0E02               	movlw	2
  5728  006A56  ECAF  F02F         	call	_lcd_dat
  5729                           
  5730                           ;main.c: 96:     lcd_dat(3);
  5731  006A5A  0E03               	movlw	3
  5732  006A5C  ECAF  F02F         	call	_lcd_dat
  5733                           
  5734                           ;main.c: 97:     lcd_cmd(0xD0 + 9);
  5735  006A60  0ED9               	movlw	217
  5736  006A62  EC9A  F02F         	call	_lcd_cmd
  5737                           
  5738                           ;main.c: 98:     lcd_dat(4);
  5739  006A66  0E04               	movlw	4
  5740  006A68  ECAF  F02F         	call	_lcd_dat
  5741                           
  5742                           ;main.c: 99:     lcd_dat(5);
  5743  006A6C  0E05               	movlw	5
  5744  006A6E  ECAF  F02F         	call	_lcd_dat
  5745                           
  5746                           ;main.c: 100:     lcd_dat(6);
  5747  006A72  0E06               	movlw	6
  5748  006A74  ECAF  F02F         	call	_lcd_dat
  5749  006A78                     
  5750                           ;main.c: 101:     lcd_str("NIKE");
  5751  006A78  0EF1               	movlw	low STR_2
  5752  006A7A  6E08               	movwf	lcd_str@str^0,c
  5753  006A7C  0E7F               	movlw	high STR_2
  5754  006A7E  6E09               	movwf	(lcd_str@str+1)^0,c
  5755  006A80  ECCB  F031         	call	_lcd_str	;wreg free
  5756  006A84                     
  5757                           ;main.c: 103:     for (j = 0; j < 1; j++) {
  5758  006A84  0E00               	movlw	0
  5759  006A86  6E45               	movwf	nike_logo@j^0,c
  5760  006A88                     l3112:
  5761                           
  5762                           ;main.c: 104:         for (i = 0; i < 25; i++) {
  5763  006A88  0E00               	movlw	0
  5764  006A8A  6E46               	movwf	nike_logo@i^0,c
  5765  006A8C                     l3118:
  5766                           
  5767                           ;main.c: 105:             atraso_ms(150);
  5768  006A8C  0E00               	movlw	0
  5769  006A8E  6E02               	movwf	(atraso_ms@t+1)^0,c
  5770  006A90  0E96               	movlw	150
  5771  006A92  6E01               	movwf	atraso_ms@t^0,c
  5772  006A94  ECEE  F030         	call	_atraso_ms	;wreg free
  5773                           
  5774                           ;main.c: 106:             lcd_cmd(0x18);
  5775  006A98  0E18               	movlw	24
  5776  006A9A  EC9A  F02F         	call	_lcd_cmd
  5777  006A9E                     
  5778                           ;main.c: 107:         }
  5779  006A9E  2A46               	incf	nike_logo@i^0,f,c
  5780  006AA0  0E18               	movlw	24
  5781  006AA2  6446               	cpfsgt	nike_logo@i^0,c
  5782  006AA4  EF56  F035         	goto	u2581
  5783  006AA8  EF58  F035         	goto	u2580
  5784  006AAC                     u2581:
  5785  006AAC  EF46  F035         	goto	l3118
  5786  006AB0                     u2580:
  5787  006AB0                     
  5788                           ;main.c: 109:         for (i = 0; i < 26; i++) {
  5789  006AB0  0E00               	movlw	0
  5790  006AB2  6E46               	movwf	nike_logo@i^0,c
  5791  006AB4                     l3130:
  5792                           
  5793                           ;main.c: 110:             atraso_ms(150);
  5794  006AB4  0E00               	movlw	0
  5795  006AB6  6E02               	movwf	(atraso_ms@t+1)^0,c
  5796  006AB8  0E96               	movlw	150
  5797  006ABA  6E01               	movwf	atraso_ms@t^0,c
  5798  006ABC  ECEE  F030         	call	_atraso_ms	;wreg free
  5799                           
  5800                           ;main.c: 111:             lcd_cmd(0x1C);
  5801  006AC0  0E1C               	movlw	28
  5802  006AC2  EC9A  F02F         	call	_lcd_cmd
  5803  006AC6                     
  5804                           ;main.c: 112:         }
  5805  006AC6  2A46               	incf	nike_logo@i^0,f,c
  5806  006AC8  0E19               	movlw	25
  5807  006ACA  6446               	cpfsgt	nike_logo@i^0,c
  5808  006ACC  EF6A  F035         	goto	u2591
  5809  006AD0  EF6C  F035         	goto	u2590
  5810  006AD4                     u2591:
  5811  006AD4  EF5A  F035         	goto	l3130
  5812  006AD8                     u2590:
  5813  006AD8                     
  5814                           ;main.c: 113:     }
  5815  006AD8  2A45               	incf	nike_logo@j^0,f,c
  5816  006ADA  5045               	movf	nike_logo@j^0,w,c
  5817  006ADC  B4D8               	btfsc	status,2,c
  5818  006ADE  EF73  F035         	goto	u2601
  5819  006AE2  EF75  F035         	goto	u2600
  5820  006AE6                     u2601:
  5821  006AE6  EF44  F035         	goto	l3112
  5822  006AEA                     u2600:
  5823  006AEA  0012               	return		;funcret
  5824  006AEC                     __end_of_nike_logo:
  5825                           	callstack 0
  5826                           
  5827 ;; *************** function _lcd_init *****************
  5828 ;; Defined at:
  5829 ;;		line 57 in file "lcd.c"
  5830 ;; Parameters:    Size  Location     Type
  5831 ;;		None
  5832 ;; Auto vars:     Size  Location     Type
  5833 ;;		None
  5834 ;; Return value:  Size  Location     Type
  5835 ;;                  1    wreg      void 
  5836 ;; Registers used:
  5837 ;;		wreg, status,2, status,0, cstack
  5838 ;; Tracked objects:
  5839 ;;		On entry : 0/0
  5840 ;;		On exit  : 0/0
  5841 ;;		Unchanged: 0/0
  5842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5843 ;;      Params:         0       0       0       0       0       0       0
  5844 ;;      Locals:         0       0       0       0       0       0       0
  5845 ;;      Temps:          0       0       0       0       0       0       0
  5846 ;;      Totals:         0       0       0       0       0       0       0
  5847 ;;Total ram usage:        0 bytes
  5848 ;; Hardware stack levels used:    1
  5849 ;; Hardware stack levels required when called:    2
  5850 ;; This function calls:
  5851 ;;		_atraso_ms
  5852 ;;		_lcd_cmd
  5853 ;; This function is called by:
  5854 ;;		_main
  5855 ;; This function uses a non-reentrant model
  5856 ;;
  5857                           
  5858                           	psect	text25
  5859  0060C4                     __ptext25:
  5860                           	callstack 0
  5861  0060C4                     _lcd_init:
  5862                           	callstack 28
  5863  0060C4                     
  5864                           ;lcd.c: 59:  PORTEbits.RE1=0;
  5865  0060C4  9284               	bcf	132,1,c	;volatile
  5866                           
  5867                           ;lcd.c: 60:  PORTEbits.RE2=0;
  5868  0060C6  9484               	bcf	132,2,c	;volatile
  5869  0060C8                     
  5870                           ;lcd.c: 61:  atraso_ms(20);
  5871  0060C8  0E00               	movlw	0
  5872  0060CA  6E02               	movwf	(atraso_ms@t+1)^0,c
  5873  0060CC  0E14               	movlw	20
  5874  0060CE  6E01               	movwf	atraso_ms@t^0,c
  5875  0060D0  ECEE  F030         	call	_atraso_ms	;wreg free
  5876  0060D4                     
  5877                           ;lcd.c: 62:  PORTEbits.RE1=1;
  5878  0060D4  8284               	bsf	132,1,c	;volatile
  5879                           
  5880                           ;lcd.c: 64:  lcd_cmd(0x38);
  5881  0060D6  0E38               	movlw	56
  5882  0060D8  EC9A  F02F         	call	_lcd_cmd
  5883                           
  5884                           ;lcd.c: 65:  atraso_ms(5);
  5885  0060DC  0E00               	movlw	0
  5886  0060DE  6E02               	movwf	(atraso_ms@t+1)^0,c
  5887  0060E0  0E05               	movlw	5
  5888  0060E2  6E01               	movwf	atraso_ms@t^0,c
  5889  0060E4  ECEE  F030         	call	_atraso_ms	;wreg free
  5890                           
  5891                           ;lcd.c: 66:  lcd_cmd(0x38);
  5892  0060E8  0E38               	movlw	56
  5893  0060EA  EC9A  F02F         	call	_lcd_cmd
  5894                           
  5895                           ;lcd.c: 67:         atraso_ms(1);
  5896  0060EE  0E00               	movlw	0
  5897  0060F0  6E02               	movwf	(atraso_ms@t+1)^0,c
  5898  0060F2  0E01               	movlw	1
  5899  0060F4  6E01               	movwf	atraso_ms@t^0,c
  5900  0060F6  ECEE  F030         	call	_atraso_ms	;wreg free
  5901                           
  5902                           ;lcd.c: 68:  lcd_cmd(0x38);
  5903  0060FA  0E38               	movlw	56
  5904  0060FC  EC9A  F02F         	call	_lcd_cmd
  5905                           
  5906                           ;lcd.c: 69:  lcd_cmd(0x08);
  5907  006100  0E08               	movlw	8
  5908  006102  EC9A  F02F         	call	_lcd_cmd
  5909                           
  5910                           ;lcd.c: 70:  lcd_cmd(0x0F);
  5911  006106  0E0F               	movlw	15
  5912  006108  EC9A  F02F         	call	_lcd_cmd
  5913                           
  5914                           ;lcd.c: 71:  lcd_cmd(0x01);
  5915  00610C  0E01               	movlw	1
  5916  00610E  EC9A  F02F         	call	_lcd_cmd
  5917                           
  5918                           ;lcd.c: 72:  lcd_cmd(0x38);
  5919  006112  0E38               	movlw	56
  5920  006114  EC9A  F02F         	call	_lcd_cmd
  5921                           
  5922                           ;lcd.c: 73:         lcd_cmd(0x80);
  5923  006118  0E80               	movlw	128
  5924  00611A  EC9A  F02F         	call	_lcd_cmd
  5925  00611E  0012               	return		;funcret
  5926  006120                     __end_of_lcd_init:
  5927                           	callstack 0
  5928                           
  5929 ;; *************** function _kpRead *****************
  5930 ;; Defined at:
  5931 ;;		line 35 in file "keypad.c"
  5932 ;; Parameters:    Size  Location     Type
  5933 ;;		None
  5934 ;; Auto vars:     Size  Location     Type
  5935 ;;		None
  5936 ;; Return value:  Size  Location     Type
  5937 ;;                  2    0[COMRAM] unsigned int 
  5938 ;; Registers used:
  5939 ;;		None
  5940 ;; Tracked objects:
  5941 ;;		On entry : 0/0
  5942 ;;		On exit  : 0/0
  5943 ;;		Unchanged: 0/0
  5944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5945 ;;      Params:         2       0       0       0       0       0       0
  5946 ;;      Locals:         0       0       0       0       0       0       0
  5947 ;;      Temps:          0       0       0       0       0       0       0
  5948 ;;      Totals:         2       0       0       0       0       0       0
  5949 ;;Total ram usage:        2 bytes
  5950 ;; Hardware stack levels used:    1
  5951 ;; This function calls:
  5952 ;;		Nothing
  5953 ;; This function is called by:
  5954 ;;		_main
  5955 ;; This function uses a non-reentrant model
  5956 ;;
  5957                           
  5958                           	psect	text26
  5959  005E62                     __ptext26:
  5960                           	callstack 0
  5961  005E62                     _kpRead:
  5962                           	callstack 30
  5963  005E62                     
  5964                           ;keypad.c: 36:     return valor;
  5965  005E62  C06B  F001         	movff	_valor,?_kpRead
  5966  005E66  C06C  F002         	movff	_valor+1,?_kpRead+1
  5967  005E6A  0012               	return		;funcret
  5968  005E6C                     __end_of_kpRead:
  5969                           	callstack 0
  5970                           
  5971 ;; *************** function _kpInit *****************
  5972 ;; Defined at:
  5973 ;;		line 87 in file "keypad.c"
  5974 ;; Parameters:    Size  Location     Type
  5975 ;;		None
  5976 ;; Auto vars:     Size  Location     Type
  5977 ;;		None
  5978 ;; Return value:  Size  Location     Type
  5979 ;;                  1    wreg      void 
  5980 ;; Registers used:
  5981 ;;		wreg, status,2, status,0
  5982 ;; Tracked objects:
  5983 ;;		On entry : 0/0
  5984 ;;		On exit  : 0/0
  5985 ;;		Unchanged: 0/0
  5986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5987 ;;      Params:         0       0       0       0       0       0       0
  5988 ;;      Locals:         0       0       0       0       0       0       0
  5989 ;;      Temps:          0       0       0       0       0       0       0
  5990 ;;      Totals:         0       0       0       0       0       0       0
  5991 ;;Total ram usage:        0 bytes
  5992 ;; Hardware stack levels used:    1
  5993 ;; This function calls:
  5994 ;;		Nothing
  5995 ;; This function is called by:
  5996 ;;		_main
  5997 ;; This function uses a non-reentrant model
  5998 ;;
  5999                           
  6000                           	psect	text27
  6001  005E58                     __ptext27:
  6002                           	callstack 0
  6003  005E58                     _kpInit:
  6004                           	callstack 30
  6005  005E58                     
  6006                           ;keypad.c: 89:     TRISB &= 0x07;
  6007  005E58  0E07               	movlw	7
  6008  005E5A  1693               	andwf	147,f,c	;volatile
  6009                           
  6010                           ;keypad.c: 91:     TRISD |= 0x0f;
  6011  005E5C  0E0F               	movlw	15
  6012  005E5E  1295               	iorwf	149,f,c	;volatile
  6013  005E60  0012               	return		;funcret
  6014  005E62                     __end_of_kpInit:
  6015                           	callstack 0
  6016                           
  6017 ;; *************** function _kpDebounce *****************
  6018 ;; Defined at:
  6019 ;;		line 39 in file "keypad.c"
  6020 ;; Parameters:    Size  Location     Type
  6021 ;;		None
  6022 ;; Auto vars:     Size  Location     Type
  6023 ;;  k               2    6[COMRAM] int 
  6024 ;;  i               1    9[COMRAM] unsigned char 
  6025 ;;  j               1    8[COMRAM] unsigned char 
  6026 ;;  old_D           1    5[COMRAM] unsigned char 
  6027 ;; Return value:  Size  Location     Type
  6028 ;;                  1    wreg      void 
  6029 ;; Registers used:
  6030 ;;		wreg, status,2, status,0, prodl, prodh
  6031 ;; Tracked objects:
  6032 ;;		On entry : 0/0
  6033 ;;		On exit  : 0/0
  6034 ;;		Unchanged: 0/0
  6035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6036 ;;      Params:         0       0       0       0       0       0       0
  6037 ;;      Locals:         5       0       0       0       0       0       0
  6038 ;;      Temps:          5       0       0       0       0       0       0
  6039 ;;      Totals:        10       0       0       0       0       0       0
  6040 ;;Total ram usage:       10 bytes
  6041 ;; Hardware stack levels used:    1
  6042 ;; This function calls:
  6043 ;;		Nothing
  6044 ;; This function is called by:
  6045 ;;		_main
  6046 ;; This function uses a non-reentrant model
  6047 ;;
  6048                           
  6049                           	psect	text28
  6050  006D48                     __ptext28:
  6051                           	callstack 0
  6052  006D48                     _kpDebounce:
  6053                           	callstack 30
  6054  006D48                     
  6055                           ;keypad.c: 40:     unsigned char i, j;;keypad.c: 41:     static unsigned char tempo;;key
      +                          pad.c: 42:     static unsigned int valorNovo = 0x0000;;keypad.c: 43:     static unsigned
      +                           int valorAntigo = 0x0000;;keypad.c: 46:     unsigned char old_D;;keypad.c: 47:     old_
      +                          D = PORTD;
  6056  006D48  CF83 F006          	movff	3971,kpDebounce@old_D	;volatile
  6057  006D4C                     
  6058                           ;keypad.c: 51:     TRISD |= 0x0f;
  6059  006D4C  0E0F               	movlw	15
  6060  006D4E  1295               	iorwf	149,f,c	;volatile
  6061  006D50                     
  6062                           ;keypad.c: 53:     for (i = 0; i < 3; i++) {
  6063  006D50  0E00               	movlw	0
  6064  006D52  6E0A               	movwf	kpDebounce@i^0,c
  6065  006D54                     l3314:
  6066                           
  6067                           ;keypad.c: 55:         TRISB &= 0xF8;
  6068  006D54  0EF8               	movlw	248
  6069  006D56  1693               	andwf	147,f,c	;volatile
  6070                           
  6071                           ;keypad.c: 57:         ((TRISB) |= (1<<(i)));
  6072  006D58  C00A  F001         	movff	kpDebounce@i,??_kpDebounce
  6073  006D5C  0E01               	movlw	1
  6074  006D5E  6E02               	movwf	(??_kpDebounce+1)^0,c
  6075  006D60  2A01               	incf	??_kpDebounce^0,f,c
  6076  006D62  EFB5  F036         	goto	u2694
  6077  006D66                     u2695:
  6078  006D66  90D8               	bcf	status,0,c
  6079  006D68  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  6080  006D6A                     u2694:
  6081  006D6A  2E01               	decfsz	??_kpDebounce^0,f,c
  6082  006D6C  EFB3  F036         	goto	u2695
  6083  006D70  5002               	movf	(??_kpDebounce+1)^0,w,c
  6084  006D72  1293               	iorwf	147,f,c	;volatile
  6085                           
  6086                           ;keypad.c: 59:         PORTB |= 0x07;
  6087  006D74  0E07               	movlw	7
  6088  006D76  1281               	iorwf	129,f,c	;volatile
  6089                           
  6090                           ;keypad.c: 60:         ((PORTB) &= ~(1<<(i)));
  6091  006D78  C00A  F001         	movff	kpDebounce@i,??_kpDebounce
  6092  006D7C  0E01               	movlw	1
  6093  006D7E  6E02               	movwf	(??_kpDebounce+1)^0,c
  6094  006D80  2A01               	incf	??_kpDebounce^0,f,c
  6095  006D82  EFC5  F036         	goto	u2704
  6096  006D86                     u2705:
  6097  006D86  90D8               	bcf	status,0,c
  6098  006D88  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  6099  006D8A                     u2704:
  6100  006D8A  2E01               	decfsz	??_kpDebounce^0,f,c
  6101  006D8C  EFC3  F036         	goto	u2705
  6102  006D90  5002               	movf	(??_kpDebounce+1)^0,w,c
  6103  006D92  0AFF               	xorlw	255
  6104  006D94  1681               	andwf	129,f,c	;volatile
  6105  006D96                     
  6106                           ;keypad.c: 63:         for (int k = 0; k < 10; k++);
  6107  006D96  0E00               	movlw	0
  6108  006D98  6E08               	movwf	(kpDebounce@k+1)^0,c
  6109  006D9A  0E00               	movlw	0
  6110  006D9C  6E07               	movwf	kpDebounce@k^0,c
  6111  006D9E                     l3322:
  6112  006D9E  4A07               	infsnz	kpDebounce@k^0,f,c
  6113  006DA0  2A08               	incf	(kpDebounce@k+1)^0,f,c
  6114  006DA2  BE08               	btfsc	(kpDebounce@k+1)^0,7,c
  6115  006DA4  EFDD  F036         	goto	u2711
  6116  006DA8  5008               	movf	(kpDebounce@k+1)^0,w,c
  6117  006DAA  E109               	bnz	u2710
  6118  006DAC  0E0A               	movlw	10
  6119  006DAE  5C07               	subwf	kpDebounce@k^0,w,c
  6120  006DB0  A0D8               	btfss	status,0,c
  6121  006DB2  EFDD  F036         	goto	u2711
  6122  006DB6  EFDF  F036         	goto	u2710
  6123  006DBA                     u2711:
  6124  006DBA  EFCF  F036         	goto	l3322
  6125  006DBE                     u2710:
  6126  006DBE                     
  6127                           ;keypad.c: 66:         for (j = 0; j < 4; j++) {
  6128  006DBE  0E00               	movlw	0
  6129  006DC0  6E09               	movwf	kpDebounce@j^0,c
  6130  006DC2                     l3332:
  6131                           
  6132                           ;keypad.c: 67:             if (!((PORTD) & (1<<(j)))) {
  6133  006DC2  C009  F001         	movff	kpDebounce@j,??_kpDebounce
  6134  006DC6  0E01               	movlw	1
  6135  006DC8  6E02               	movwf	(??_kpDebounce+1)^0,c
  6136  006DCA  2A01               	incf	??_kpDebounce^0,f,c
  6137  006DCC  EFEA  F036         	goto	u2724
  6138  006DD0                     u2725:
  6139  006DD0  90D8               	bcf	status,0,c
  6140  006DD2  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  6141  006DD4                     u2724:
  6142  006DD4  2E01               	decfsz	??_kpDebounce^0,f,c
  6143  006DD6  EFE8  F036         	goto	u2725
  6144  006DDA  5002               	movf	(??_kpDebounce+1)^0,w,c
  6145  006DDC  1483               	andwf	131,w,c	;volatile
  6146  006DDE  0900               	iorlw	0
  6147  006DE0  A4D8               	btfss	status,2,c
  6148  006DE2  EFF5  F036         	goto	u2731
  6149  006DE6  EFF7  F036         	goto	u2730
  6150  006DEA                     u2731:
  6151  006DEA  EF0F  F037         	goto	l3336
  6152  006DEE                     u2730:
  6153  006DEE                     
  6154                           ;keypad.c: 68:                 ((valorNovo) |= (1<<((i * 4) + j)));
  6155  006DEE  500A               	movf	kpDebounce@i^0,w,c
  6156  006DF0  0D04               	mullw	4
  6157  006DF2  50F3               	movf	243,w,c
  6158  006DF4  2409               	addwf	kpDebounce@j^0,w,c
  6159  006DF6  6E01               	movwf	??_kpDebounce^0,c
  6160  006DF8  0E01               	movlw	1
  6161  006DFA  6E02               	movwf	(??_kpDebounce+1)^0,c
  6162  006DFC  0E00               	movlw	0
  6163  006DFE  6E03               	movwf	(??_kpDebounce+2)^0,c
  6164  006E00  2A01               	incf	??_kpDebounce^0,f,c
  6165  006E02  EF06  F037         	goto	u2744
  6166  006E06                     u2745:
  6167  006E06  90D8               	bcf	status,0,c
  6168  006E08  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  6169  006E0A  3603               	rlcf	(??_kpDebounce+2)^0,f,c
  6170  006E0C                     u2744:
  6171  006E0C  2E01               	decfsz	??_kpDebounce^0,f,c
  6172  006E0E  EF03  F037         	goto	u2745
  6173  006E12  5002               	movf	(??_kpDebounce+1)^0,w,c
  6174  006E14  1269               	iorwf	kpDebounce@valorNovo^0,f,c
  6175  006E16  5003               	movf	(??_kpDebounce+2)^0,w,c
  6176  006E18  126A               	iorwf	(kpDebounce@valorNovo+1)^0,f,c
  6177                           
  6178                           ;keypad.c: 69:             } else {
  6179  006E1A  EF29  F037         	goto	l3338
  6180  006E1E                     l3336:
  6181                           
  6182                           ;keypad.c: 70:                 ((valorNovo) &= ~(1<<((i * 4) + j)));
  6183  006E1E  500A               	movf	kpDebounce@i^0,w,c
  6184  006E20  0D04               	mullw	4
  6185  006E22  50F3               	movf	243,w,c
  6186  006E24  2409               	addwf	kpDebounce@j^0,w,c
  6187  006E26  6E01               	movwf	??_kpDebounce^0,c
  6188  006E28  0E01               	movlw	1
  6189  006E2A  6E02               	movwf	(??_kpDebounce+1)^0,c
  6190  006E2C  0E00               	movlw	0
  6191  006E2E  6E03               	movwf	(??_kpDebounce+2)^0,c
  6192  006E30  2A01               	incf	??_kpDebounce^0,f,c
  6193  006E32  EF1E  F037         	goto	u2754
  6194  006E36                     u2755:
  6195  006E36  90D8               	bcf	status,0,c
  6196  006E38  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  6197  006E3A  3603               	rlcf	(??_kpDebounce+2)^0,f,c
  6198  006E3C                     u2754:
  6199  006E3C  2E01               	decfsz	??_kpDebounce^0,f,c
  6200  006E3E  EF1B  F037         	goto	u2755
  6201  006E42  1C02               	comf	(??_kpDebounce+1)^0,w,c
  6202  006E44  6E04               	movwf	(??_kpDebounce+3)^0,c
  6203  006E46  1C03               	comf	(??_kpDebounce+2)^0,w,c
  6204  006E48  6E05               	movwf	(??_kpDebounce+4)^0,c
  6205  006E4A  5004               	movf	(??_kpDebounce+3)^0,w,c
  6206  006E4C  1669               	andwf	kpDebounce@valorNovo^0,f,c
  6207  006E4E  5005               	movf	(??_kpDebounce+4)^0,w,c
  6208  006E50  166A               	andwf	(kpDebounce@valorNovo+1)^0,f,c
  6209  006E52                     l3338:
  6210                           
  6211                           ;keypad.c: 72:         }
  6212  006E52  2A09               	incf	kpDebounce@j^0,f,c
  6213  006E54  0E03               	movlw	3
  6214  006E56  6409               	cpfsgt	kpDebounce@j^0,c
  6215  006E58  EF30  F037         	goto	u2761
  6216  006E5C  EF32  F037         	goto	u2760
  6217  006E60                     u2761:
  6218  006E60  EFE1  F036         	goto	l3332
  6219  006E64                     u2760:
  6220  006E64                     
  6221                           ;keypad.c: 73:     }
  6222  006E64  2A0A               	incf	kpDebounce@i^0,f,c
  6223  006E66  0E02               	movlw	2
  6224  006E68  640A               	cpfsgt	kpDebounce@i^0,c
  6225  006E6A  EF39  F037         	goto	u2771
  6226  006E6E  EF3B  F037         	goto	u2770
  6227  006E72                     u2771:
  6228  006E72  EFAA  F036         	goto	l3314
  6229  006E76                     u2770:
  6230  006E76                     
  6231                           ;keypad.c: 74:     if (valorAntigo == valorNovo) {
  6232  006E76  5069               	movf	kpDebounce@valorNovo^0,w,c
  6233  006E78  1867               	xorwf	kpDebounce@valorAntigo^0,w,c
  6234  006E7A  E107               	bnz	u2781
  6235  006E7C  506A               	movf	(kpDebounce@valorNovo+1)^0,w,c
  6236  006E7E  1868               	xorwf	(kpDebounce@valorAntigo+1)^0,w,c
  6237  006E80  A4D8               	btfss	status,2,c
  6238  006E82  EF45  F037         	goto	u2781
  6239  006E86  EF47  F037         	goto	u2780
  6240  006E8A                     u2781:
  6241  006E8A  EF4A  F037         	goto	l3350
  6242  006E8E                     u2780:
  6243  006E8E                     
  6244                           ;keypad.c: 75:         tempo--;
  6245  006E8E  0672               	decf	kpDebounce@tempo^0,f,c
  6246                           
  6247                           ;keypad.c: 76:     } else {
  6248  006E90  EF50  F037         	goto	l193
  6249  006E94                     l3350:
  6250                           
  6251                           ;keypad.c: 77:         tempo = 10;
  6252  006E94  0E0A               	movlw	10
  6253  006E96  6E72               	movwf	kpDebounce@tempo^0,c
  6254  006E98                     
  6255                           ;keypad.c: 78:         valorAntigo = valorNovo;
  6256  006E98  C069  F067         	movff	kpDebounce@valorNovo,kpDebounce@valorAntigo
  6257  006E9C  C06A  F068         	movff	kpDebounce@valorNovo+1,kpDebounce@valorAntigo+1
  6258  006EA0                     l193:
  6259                           
  6260                           ;keypad.c: 80:     if (tempo == 0) {
  6261  006EA0  5072               	movf	kpDebounce@tempo^0,w,c
  6262  006EA2  A4D8               	btfss	status,2,c
  6263  006EA4  EF56  F037         	goto	u2791
  6264  006EA8  EF58  F037         	goto	u2790
  6265  006EAC                     u2791:
  6266  006EAC  EF5C  F037         	goto	l194
  6267  006EB0                     u2790:
  6268  006EB0                     
  6269                           ;keypad.c: 81:         valor = valorAntigo;
  6270  006EB0  C067  F06B         	movff	kpDebounce@valorAntigo,_valor
  6271  006EB4  C068  F06C         	movff	kpDebounce@valorAntigo+1,_valor+1
  6272  006EB8                     l194:
  6273                           
  6274                           ;keypad.c: 83:     PORTD = old_D;
  6275  006EB8  C006  FF83         	movff	kpDebounce@old_D,3971	;volatile
  6276  006EBC                     
  6277                           ;keypad.c: 84:     TRISD = 0x00;
  6278  006EBC  0E00               	movlw	0
  6279  006EBE  6E95               	movwf	149,c	;volatile
  6280  006EC0  0012               	return		;funcret
  6281  006EC2                     __end_of_kpDebounce:
  6282                           	callstack 0
  6283                           
  6284 ;; *************** function _chevrolet *****************
  6285 ;; Defined at:
  6286 ;;		line 14 in file "main.c"
  6287 ;; Parameters:    Size  Location     Type
  6288 ;;		None
  6289 ;; Auto vars:     Size  Location     Type
  6290 ;;  chevrolete_l   32   12[COMRAM] unsigned char [32]
  6291 ;;  i               1   45[COMRAM] unsigned char 
  6292 ;;  j               1   44[COMRAM] unsigned char 
  6293 ;; Return value:  Size  Location     Type
  6294 ;;                  1    wreg      void 
  6295 ;; Registers used:
  6296 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6297 ;; Tracked objects:
  6298 ;;		On entry : 0/0
  6299 ;;		On exit  : 0/0
  6300 ;;		Unchanged: 0/0
  6301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6302 ;;      Params:         0       0       0       0       0       0       0
  6303 ;;      Locals:        34       0       0       0       0       0       0
  6304 ;;      Temps:          0       0       0       0       0       0       0
  6305 ;;      Totals:        34       0       0       0       0       0       0
  6306 ;;Total ram usage:       34 bytes
  6307 ;; Hardware stack levels used:    1
  6308 ;; Hardware stack levels required when called:    3
  6309 ;; This function calls:
  6310 ;;		_atraso_ms
  6311 ;;		_lcd_cmd
  6312 ;;		_lcd_dat
  6313 ;;		_lcd_str
  6314 ;; This function is called by:
  6315 ;;		_main
  6316 ;; This function uses a non-reentrant model
  6317 ;;
  6318                           
  6319                           	psect	text29
  6320  006774                     __ptext29:
  6321                           	callstack 0
  6322  006774                     _chevrolet:
  6323                           	callstack 27
  6324  006774                     
  6325                           ;main.c: 15:     unsigned char i, j;;main.c: 17:     unsigned char chevrolete_logo[32] =
      +                           {
  6326  006774  EE20  F0E0         	lfsr	2,chevrolet@F2443
  6327  006778  EE10  F00D         	lfsr	1,chevrolet@chevrolete_logo
  6328  00677C  0E1F               	movlw	31
  6329  00677E                     u2491:
  6330  00677E  CFDB FFE3          	movff	plusw2,plusw1
  6331  006782  06E8               	decf	wreg,f,c
  6332  006784  E2FC               	bc	u2491
  6333  006786                     
  6334                           ;main.c: 23:     lcd_cmd(0x40);
  6335  006786  0E40               	movlw	64
  6336  006788  EC9A  F02F         	call	_lcd_cmd
  6337  00678C                     
  6338                           ;main.c: 24:     for (i = 0; i < 32; i++) {
  6339  00678C  0E00               	movlw	0
  6340  00678E  6E2E               	movwf	chevrolet@i^0,c
  6341  006790                     l3022:
  6342                           
  6343                           ;main.c: 25:         lcd_dat(chevrolete_logo[i]);
  6344  006790  0E0D               	movlw	low chevrolet@chevrolete_logo
  6345  006792  242E               	addwf	chevrolet@i^0,w,c
  6346  006794  6ED9               	movwf	fsr2l,c
  6347  006796  6ADA               	clrf	fsr2h,c
  6348  006798  0E00               	movlw	high chevrolet@chevrolete_logo
  6349  00679A  22DA               	addwfc	fsr2h,f,c
  6350  00679C  50DF               	movf	indf2,w,c
  6351  00679E  ECAF  F02F         	call	_lcd_dat
  6352  0067A2                     
  6353                           ;main.c: 26:     }
  6354  0067A2  2A2E               	incf	chevrolet@i^0,f,c
  6355  0067A4  0E1F               	movlw	31
  6356  0067A6  642E               	cpfsgt	chevrolet@i^0,c
  6357  0067A8  EFD8  F033         	goto	u2501
  6358  0067AC  EFDA  F033         	goto	u2500
  6359  0067B0                     u2501:
  6360  0067B0  EFC8  F033         	goto	l3022
  6361  0067B4                     u2500:
  6362  0067B4                     
  6363                           ;main.c: 27:     lcd_cmd(0x90 + 3);
  6364  0067B4  0E93               	movlw	147
  6365  0067B6  EC9A  F02F         	call	_lcd_cmd
  6366                           
  6367                           ;main.c: 28:     lcd_dat(0);
  6368  0067BA  0E00               	movlw	0
  6369  0067BC  ECAF  F02F         	call	_lcd_dat
  6370                           
  6371                           ;main.c: 29:     lcd_dat(1);
  6372  0067C0  0E01               	movlw	1
  6373  0067C2  ECAF  F02F         	call	_lcd_dat
  6374                           
  6375                           ;main.c: 30:     lcd_dat(2);
  6376  0067C6  0E02               	movlw	2
  6377  0067C8  ECAF  F02F         	call	_lcd_dat
  6378                           
  6379                           ;main.c: 31:     lcd_dat(3);
  6380  0067CC  0E03               	movlw	3
  6381  0067CE  ECAF  F02F         	call	_lcd_dat
  6382  0067D2                     
  6383                           ;main.c: 32:     lcd_str("Chevrolet");
  6384  0067D2  0EBE               	movlw	low STR_1
  6385  0067D4  6E08               	movwf	lcd_str@str^0,c
  6386  0067D6  0E7F               	movlw	high STR_1
  6387  0067D8  6E09               	movwf	(lcd_str@str+1)^0,c
  6388  0067DA  ECCB  F031         	call	_lcd_str	;wreg free
  6389  0067DE                     
  6390                           ;main.c: 34:     for (j = 0; j < 1; j++) {
  6391  0067DE  0E00               	movlw	0
  6392  0067E0  6E2D               	movwf	chevrolet@j^0,c
  6393  0067E2                     l3038:
  6394                           
  6395                           ;main.c: 35:         for (i = 0; i < 19; i++) {
  6396  0067E2  0E00               	movlw	0
  6397  0067E4  6E2E               	movwf	chevrolet@i^0,c
  6398  0067E6                     l3044:
  6399                           
  6400                           ;main.c: 36:             atraso_ms(150);
  6401  0067E6  0E00               	movlw	0
  6402  0067E8  6E02               	movwf	(atraso_ms@t+1)^0,c
  6403  0067EA  0E96               	movlw	150
  6404  0067EC  6E01               	movwf	atraso_ms@t^0,c
  6405  0067EE  ECEE  F030         	call	_atraso_ms	;wreg free
  6406                           
  6407                           ;main.c: 37:             lcd_cmd(0x18);
  6408  0067F2  0E18               	movlw	24
  6409  0067F4  EC9A  F02F         	call	_lcd_cmd
  6410  0067F8                     
  6411                           ;main.c: 38:         }
  6412  0067F8  2A2E               	incf	chevrolet@i^0,f,c
  6413  0067FA  0E12               	movlw	18
  6414  0067FC  642E               	cpfsgt	chevrolet@i^0,c
  6415  0067FE  EF03  F034         	goto	u2511
  6416  006802  EF05  F034         	goto	u2510
  6417  006806                     u2511:
  6418  006806  EFF3  F033         	goto	l3044
  6419  00680A                     u2510:
  6420  00680A                     
  6421                           ;main.c: 40:         for (i = 0; i < 20; i++) {
  6422  00680A  0E00               	movlw	0
  6423  00680C  6E2E               	movwf	chevrolet@i^0,c
  6424  00680E                     l3056:
  6425                           
  6426                           ;main.c: 41:             atraso_ms(150);
  6427  00680E  0E00               	movlw	0
  6428  006810  6E02               	movwf	(atraso_ms@t+1)^0,c
  6429  006812  0E96               	movlw	150
  6430  006814  6E01               	movwf	atraso_ms@t^0,c
  6431  006816  ECEE  F030         	call	_atraso_ms	;wreg free
  6432                           
  6433                           ;main.c: 42:             lcd_cmd(0x1C);
  6434  00681A  0E1C               	movlw	28
  6435  00681C  EC9A  F02F         	call	_lcd_cmd
  6436  006820                     
  6437                           ;main.c: 43:         }
  6438  006820  2A2E               	incf	chevrolet@i^0,f,c
  6439  006822  0E13               	movlw	19
  6440  006824  642E               	cpfsgt	chevrolet@i^0,c
  6441  006826  EF17  F034         	goto	u2521
  6442  00682A  EF19  F034         	goto	u2520
  6443  00682E                     u2521:
  6444  00682E  EF07  F034         	goto	l3056
  6445  006832                     u2520:
  6446  006832                     
  6447                           ;main.c: 44:     }
  6448  006832  2A2D               	incf	chevrolet@j^0,f,c
  6449  006834  502D               	movf	chevrolet@j^0,w,c
  6450  006836  B4D8               	btfsc	status,2,c
  6451  006838  EF20  F034         	goto	u2531
  6452  00683C  EF22  F034         	goto	u2530
  6453  006840                     u2531:
  6454  006840  EFF1  F033         	goto	l3038
  6455  006844                     u2530:
  6456  006844  0012               	return		;funcret
  6457  006846                     __end_of_chevrolet:
  6458                           	callstack 0
  6459                           
  6460 ;; *************** function _atraso_s *****************
  6461 ;; Defined at:
  6462 ;;		line 14 in file "delay.c"
  6463 ;; Parameters:    Size  Location     Type
  6464 ;;  t               2    6[COMRAM] unsigned int 
  6465 ;; Auto vars:     Size  Location     Type
  6466 ;;  i               2    8[COMRAM] volatile unsigned int 
  6467 ;;  k               1   11[COMRAM] volatile unsigned char 
  6468 ;;  j               1   10[COMRAM] volatile unsigned char 
  6469 ;; Return value:  Size  Location     Type
  6470 ;;                  1    wreg      void 
  6471 ;; Registers used:
  6472 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6473 ;; Tracked objects:
  6474 ;;		On entry : 0/0
  6475 ;;		On exit  : 0/0
  6476 ;;		Unchanged: 0/0
  6477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6478 ;;      Params:         2       0       0       0       0       0       0
  6479 ;;      Locals:         4       0       0       0       0       0       0
  6480 ;;      Temps:          0       0       0       0       0       0       0
  6481 ;;      Totals:         6       0       0       0       0       0       0
  6482 ;;Total ram usage:        6 bytes
  6483 ;; Hardware stack levels used:    1
  6484 ;; Hardware stack levels required when called:    1
  6485 ;; This function calls:
  6486 ;;		___wmul
  6487 ;; This function is called by:
  6488 ;;		_main
  6489 ;; This function uses a non-reentrant model
  6490 ;;
  6491                           
  6492                           	psect	text30
  6493  00640E                     __ptext30:
  6494                           	callstack 0
  6495  00640E                     _atraso_s:
  6496                           	callstack 29
  6497  00640E                     
  6498                           ;delay.c: 15:     volatile unsigned char j, k;;delay.c: 16:     volatile unsigned int i;
      +                          ;delay.c: 17:     for (i = 0; i < (t * 1000); i++) {
  6499  00640E  0E00               	movlw	0
  6500  006410  6E0A               	movwf	(atraso_s@i+1)^0,c	;volatile
  6501  006412  0E00               	movlw	0
  6502  006414  6E09               	movwf	atraso_s@i^0,c	;volatile
  6503  006416  EF2D  F032         	goto	l3244
  6504  00641A                     l3222:
  6505                           
  6506                           ;delay.c: 18:         for (j = 0; j < 41; j++) {
  6507  00641A  0E00               	movlw	0
  6508  00641C  6E0B               	movwf	atraso_s@j^0,c	;volatile
  6509  00641E                     l3224:
  6510  00641E  0E28               	movlw	40
  6511  006420  640B               	cpfsgt	atraso_s@j^0,c	;volatile
  6512  006422  EF15  F032         	goto	u2661
  6513  006426  EF17  F032         	goto	u2660
  6514  00642A                     u2661:
  6515  00642A  EF19  F032         	goto	l3228
  6516  00642E                     u2660:
  6517  00642E  EF2B  F032         	goto	l3242
  6518  006432                     l3228:
  6519                           
  6520                           ;delay.c: 19:             for (k = 0; k < 3; k++);
  6521  006432  0E00               	movlw	0
  6522  006434  6E0C               	movwf	atraso_s@k^0,c	;volatile
  6523  006436                     l3230:
  6524  006436  0E02               	movlw	2
  6525  006438  640C               	cpfsgt	atraso_s@k^0,c	;volatile
  6526  00643A  EF21  F032         	goto	u2671
  6527  00643E  EF23  F032         	goto	u2670
  6528  006442                     u2671:
  6529  006442  EF25  F032         	goto	l3234
  6530  006446                     u2670:
  6531  006446  EF28  F032         	goto	l3238
  6532  00644A                     l3234:
  6533  00644A  2A0C               	incf	atraso_s@k^0,f,c	;volatile
  6534  00644C  EF1B  F032         	goto	l3230
  6535  006450                     l3238:
  6536                           
  6537                           ;delay.c: 20:         }
  6538  006450  2A0B               	incf	atraso_s@j^0,f,c	;volatile
  6539  006452  EF0F  F032         	goto	l3224
  6540  006456                     l3242:
  6541                           
  6542                           ;delay.c: 21:     }
  6543  006456  4A09               	infsnz	atraso_s@i^0,f,c	;volatile
  6544  006458  2A0A               	incf	(atraso_s@i+1)^0,f,c	;volatile
  6545  00645A                     l3244:
  6546  00645A  C007  F001         	movff	atraso_s@t,___wmul@multiplier
  6547  00645E  C008  F002         	movff	atraso_s@t+1,___wmul@multiplier+1
  6548  006462  0E03               	movlw	3
  6549  006464  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6550  006466  0EE8               	movlw	232
  6551  006468  6E03               	movwf	___wmul@multiplicand^0,c
  6552  00646A  EC74  F02F         	call	___wmul	;wreg free
  6553  00646E  5001               	movf	?___wmul^0,w,c
  6554  006470  5C09               	subwf	atraso_s@i^0,w,c	;volatile
  6555  006472  5002               	movf	(?___wmul+1)^0,w,c
  6556  006474  580A               	subwfb	(atraso_s@i+1)^0,w,c	;volatile
  6557  006476  A0D8               	btfss	status,0,c
  6558  006478  EF40  F032         	goto	u2681
  6559  00647C  EF42  F032         	goto	u2680
  6560  006480                     u2681:
  6561  006480  EF0D  F032         	goto	l3222
  6562  006484                     u2680:
  6563  006484  0012               	return		;funcret
  6564  006486                     __end_of_atraso_s:
  6565                           	callstack 0
  6566                           
  6567 ;; *************** function ___wmul *****************
  6568 ;; Defined at:
  6569 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul16.c"
  6570 ;; Parameters:    Size  Location     Type
  6571 ;;  multiplier      2    0[COMRAM] unsigned int 
  6572 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6573 ;; Auto vars:     Size  Location     Type
  6574 ;;  product         2    4[COMRAM] unsigned int 
  6575 ;; Return value:  Size  Location     Type
  6576 ;;                  2    0[COMRAM] unsigned int 
  6577 ;; Registers used:
  6578 ;;		wreg, status,2, status,0, prodl, prodh
  6579 ;; Tracked objects:
  6580 ;;		On entry : 0/0
  6581 ;;		On exit  : 0/0
  6582 ;;		Unchanged: 0/0
  6583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6584 ;;      Params:         4       0       0       0       0       0       0
  6585 ;;      Locals:         2       0       0       0       0       0       0
  6586 ;;      Temps:          0       0       0       0       0       0       0
  6587 ;;      Totals:         6       0       0       0       0       0       0
  6588 ;;Total ram usage:        6 bytes
  6589 ;; Hardware stack levels used:    1
  6590 ;; This function calls:
  6591 ;;		Nothing
  6592 ;; This function is called by:
  6593 ;;		_atraso_s
  6594 ;;		_pwmSet1
  6595 ;;		_pwmSet2
  6596 ;; This function uses a non-reentrant model
  6597 ;;
  6598                           
  6599                           	psect	text31
  6600  005EE8                     __ptext31:
  6601                           	callstack 0
  6602  005EE8                     ___wmul:
  6603                           	callstack 29
  6604  005EE8  5001               	movf	___wmul@multiplier^0,w,c
  6605  005EEA  0203               	mulwf	___wmul@multiplicand^0,c
  6606  005EEC  CFF3 F005          	movff	prodl,___wmul@product
  6607  005EF0  CFF4 F006          	movff	prodh,___wmul@product+1
  6608  005EF4  5001               	movf	___wmul@multiplier^0,w,c
  6609  005EF6  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  6610  005EF8  50F3               	movf	243,w,c
  6611  005EFA  2606               	addwf	(___wmul@product+1)^0,f,c
  6612  005EFC  5002               	movf	(___wmul@multiplier+1)^0,w,c
  6613  005EFE  0203               	mulwf	___wmul@multiplicand^0,c
  6614  005F00  50F3               	movf	243,w,c
  6615  005F02  2606               	addwf	(___wmul@product+1)^0,f,c
  6616  005F04  C005  F001         	movff	___wmul@product,?___wmul
  6617  005F08  C006  F002         	movff	___wmul@product+1,?___wmul+1
  6618  005F0C  0012               	return		;funcret
  6619  005F0E                     __end_of___wmul:
  6620                           	callstack 0
  6621                           
  6622 ;; *************** function _adidas_logo *****************
  6623 ;; Defined at:
  6624 ;;		line 116 in file "main.c"
  6625 ;; Parameters:    Size  Location     Type
  6626 ;;		None
  6627 ;; Auto vars:     Size  Location     Type
  6628 ;;  adidas         48   12[COMRAM] unsigned char [48]
  6629 ;;  i               1   61[COMRAM] unsigned char 
  6630 ;;  j               1   60[COMRAM] unsigned char 
  6631 ;; Return value:  Size  Location     Type
  6632 ;;                  1    wreg      void 
  6633 ;; Registers used:
  6634 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6635 ;; Tracked objects:
  6636 ;;		On entry : 0/0
  6637 ;;		On exit  : 0/0
  6638 ;;		Unchanged: 0/0
  6639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6640 ;;      Params:         0       0       0       0       0       0       0
  6641 ;;      Locals:        50       0       0       0       0       0       0
  6642 ;;      Temps:          0       0       0       0       0       0       0
  6643 ;;      Totals:        50       0       0       0       0       0       0
  6644 ;;Total ram usage:       50 bytes
  6645 ;; Hardware stack levels used:    1
  6646 ;; Hardware stack levels required when called:    3
  6647 ;; This function calls:
  6648 ;;		_atraso_ms
  6649 ;;		_lcd_cmd
  6650 ;;		_lcd_dat
  6651 ;;		_lcd_str
  6652 ;; This function is called by:
  6653 ;;		_main
  6654 ;; This function uses a non-reentrant model
  6655 ;;
  6656                           
  6657                           	psect	text32
  6658  00691E                     __ptext32:
  6659                           	callstack 0
  6660  00691E                     _adidas_logo:
  6661                           	callstack 27
  6662  00691E                     
  6663                           ;main.c: 117:     unsigned char i, j;;main.c: 118:     char adidas[48] = {
  6664  00691E  EE20  F080         	lfsr	2,adidas_logo@F2458
  6665  006922  EE10  F00D         	lfsr	1,adidas_logo@adidas
  6666  006926  0E2F               	movlw	47
  6667  006928                     u2611:
  6668  006928  CFDB FFE3          	movff	plusw2,plusw1
  6669  00692C  06E8               	decf	wreg,f,c
  6670  00692E  E2FC               	bc	u2611
  6671  006930                     
  6672                           ;main.c: 126:     lcd_cmd(0x40);
  6673  006930  0E40               	movlw	64
  6674  006932  EC9A  F02F         	call	_lcd_cmd
  6675  006936                     
  6676                           ;main.c: 128:     for (i = 0; i < 48; i++) {
  6677  006936  0E00               	movlw	0
  6678  006938  6E3E               	movwf	adidas_logo@i^0,c
  6679  00693A                     l3150:
  6680                           
  6681                           ;main.c: 129:         lcd_dat(adidas[i]);
  6682  00693A  0E0D               	movlw	low adidas_logo@adidas
  6683  00693C  243E               	addwf	adidas_logo@i^0,w,c
  6684  00693E  6ED9               	movwf	fsr2l,c
  6685  006940  6ADA               	clrf	fsr2h,c
  6686  006942  0E00               	movlw	high adidas_logo@adidas
  6687  006944  22DA               	addwfc	fsr2h,f,c
  6688  006946  50DF               	movf	indf2,w,c
  6689  006948  ECAF  F02F         	call	_lcd_dat
  6690  00694C                     
  6691                           ;main.c: 130:     }
  6692  00694C  2A3E               	incf	adidas_logo@i^0,f,c
  6693  00694E  0E2F               	movlw	47
  6694  006950  643E               	cpfsgt	adidas_logo@i^0,c
  6695  006952  EFAD  F034         	goto	u2621
  6696  006956  EFAF  F034         	goto	u2620
  6697  00695A                     u2621:
  6698  00695A  EF9D  F034         	goto	l3150
  6699  00695E                     u2620:
  6700  00695E                     
  6701                           ;main.c: 131:     lcd_cmd(0x90 + 7);
  6702  00695E  0E97               	movlw	151
  6703  006960  EC9A  F02F         	call	_lcd_cmd
  6704                           
  6705                           ;main.c: 132:     lcd_dat(0);
  6706  006964  0E00               	movlw	0
  6707  006966  ECAF  F02F         	call	_lcd_dat
  6708                           
  6709                           ;main.c: 133:     lcd_dat(1);
  6710  00696A  0E01               	movlw	1
  6711  00696C  ECAF  F02F         	call	_lcd_dat
  6712                           
  6713                           ;main.c: 134:     lcd_dat(2);
  6714  006970  0E02               	movlw	2
  6715  006972  ECAF  F02F         	call	_lcd_dat
  6716                           
  6717                           ;main.c: 135:     lcd_cmd(0xD0 + 7);
  6718  006976  0ED7               	movlw	215
  6719  006978  EC9A  F02F         	call	_lcd_cmd
  6720                           
  6721                           ;main.c: 136:     lcd_dat(3);
  6722  00697C  0E03               	movlw	3
  6723  00697E  ECAF  F02F         	call	_lcd_dat
  6724                           
  6725                           ;main.c: 137:     lcd_dat(4);
  6726  006982  0E04               	movlw	4
  6727  006984  ECAF  F02F         	call	_lcd_dat
  6728                           
  6729                           ;main.c: 138:     lcd_dat(5);
  6730  006988  0E05               	movlw	5
  6731  00698A  ECAF  F02F         	call	_lcd_dat
  6732  00698E                     
  6733                           ;main.c: 139:     lcd_str("adidas");
  6734  00698E  0EEA               	movlw	low STR_3
  6735  006990  6E08               	movwf	lcd_str@str^0,c
  6736  006992  0E7F               	movlw	high STR_3
  6737  006994  6E09               	movwf	(lcd_str@str+1)^0,c
  6738  006996  ECCB  F031         	call	_lcd_str	;wreg free
  6739  00699A                     
  6740                           ;main.c: 140:     for (j = 0; j < 1; j++) {
  6741  00699A  0E00               	movlw	0
  6742  00699C  6E3D               	movwf	adidas_logo@j^0,c
  6743  00699E                     l3166:
  6744                           
  6745                           ;main.c: 141:         for (i = 0; i < 23; i++) {
  6746  00699E  0E00               	movlw	0
  6747  0069A0  6E3E               	movwf	adidas_logo@i^0,c
  6748  0069A2                     l3172:
  6749                           
  6750                           ;main.c: 142:             atraso_ms(150);
  6751  0069A2  0E00               	movlw	0
  6752  0069A4  6E02               	movwf	(atraso_ms@t+1)^0,c
  6753  0069A6  0E96               	movlw	150
  6754  0069A8  6E01               	movwf	atraso_ms@t^0,c
  6755  0069AA  ECEE  F030         	call	_atraso_ms	;wreg free
  6756                           
  6757                           ;main.c: 143:             lcd_cmd(0x18);
  6758  0069AE  0E18               	movlw	24
  6759  0069B0  EC9A  F02F         	call	_lcd_cmd
  6760  0069B4                     
  6761                           ;main.c: 144:         }
  6762  0069B4  2A3E               	incf	adidas_logo@i^0,f,c
  6763  0069B6  0E16               	movlw	22
  6764  0069B8  643E               	cpfsgt	adidas_logo@i^0,c
  6765  0069BA  EFE1  F034         	goto	u2631
  6766  0069BE  EFE3  F034         	goto	u2630
  6767  0069C2                     u2631:
  6768  0069C2  EFD1  F034         	goto	l3172
  6769  0069C6                     u2630:
  6770  0069C6                     
  6771                           ;main.c: 146:         for (i = 0; i < 24; i++) {
  6772  0069C6  0E00               	movlw	0
  6773  0069C8  6E3E               	movwf	adidas_logo@i^0,c
  6774  0069CA                     l3184:
  6775                           
  6776                           ;main.c: 147:             atraso_ms(150);
  6777  0069CA  0E00               	movlw	0
  6778  0069CC  6E02               	movwf	(atraso_ms@t+1)^0,c
  6779  0069CE  0E96               	movlw	150
  6780  0069D0  6E01               	movwf	atraso_ms@t^0,c
  6781  0069D2  ECEE  F030         	call	_atraso_ms	;wreg free
  6782                           
  6783                           ;main.c: 148:             lcd_cmd(0x1C);
  6784  0069D6  0E1C               	movlw	28
  6785  0069D8  EC9A  F02F         	call	_lcd_cmd
  6786  0069DC                     
  6787                           ;main.c: 149:         }
  6788  0069DC  2A3E               	incf	adidas_logo@i^0,f,c
  6789  0069DE  0E17               	movlw	23
  6790  0069E0  643E               	cpfsgt	adidas_logo@i^0,c
  6791  0069E2  EFF5  F034         	goto	u2641
  6792  0069E6  EFF7  F034         	goto	u2640
  6793  0069EA                     u2641:
  6794  0069EA  EFE5  F034         	goto	l3184
  6795  0069EE                     u2640:
  6796  0069EE                     
  6797                           ;main.c: 150:     }
  6798  0069EE  2A3D               	incf	adidas_logo@j^0,f,c
  6799  0069F0  503D               	movf	adidas_logo@j^0,w,c
  6800  0069F2  B4D8               	btfsc	status,2,c
  6801  0069F4  EFFE  F034         	goto	u2651
  6802  0069F8  EF00  F035         	goto	u2650
  6803  0069FC                     u2651:
  6804  0069FC  EFCF  F034         	goto	l3166
  6805  006A00                     u2650:
  6806  006A00  0012               	return		;funcret
  6807  006A02                     __end_of_adidas_logo:
  6808                           	callstack 0
  6809                           
  6810 ;; *************** function _lcd_str *****************
  6811 ;; Defined at:
  6812 ;;		line 76 in file "lcd.c"
  6813 ;; Parameters:    Size  Location     Type
  6814 ;;  str             2    7[COMRAM] PTR const unsigned char 
  6815 ;;		 -> STR_36(15), STR_35(16), STR_34(7), STR_33(7), 
  6816 ;;		 -> STR_32(13), STR_31(17), STR_30(7), STR_29(7), 
  6817 ;;		 -> STR_28(10), STR_27(7), STR_26(9), STR_25(17), 
  6818 ;;		 -> STR_24(17), STR_23(17), STR_22(17), STR_21(4), 
  6819 ;;		 -> STR_20(4), STR_19(4), STR_18(4), STR_17(16), 
  6820 ;;		 -> STR_16(16), STR_15(15), STR_14(17), STR_13(17), 
  6821 ;;		 -> STR_12(7), STR_11(7), date(10), STR_10(14), 
  6822 ;;		 -> STR_9(14), STR_8(14), STR_7(9), STR_6(9), 
  6823 ;;		 -> STR_5(7), STR_4(15), STR_3(7), STR_2(5), 
  6824 ;;		 -> STR_1(10), 
  6825 ;; Auto vars:     Size  Location     Type
  6826 ;;  i               1   11[COMRAM] unsigned char 
  6827 ;; Return value:  Size  Location     Type
  6828 ;;                  1    wreg      void 
  6829 ;; Registers used:
  6830 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6831 ;; Tracked objects:
  6832 ;;		On entry : 0/0
  6833 ;;		On exit  : 0/0
  6834 ;;		Unchanged: 0/0
  6835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6836 ;;      Params:         2       0       0       0       0       0       0
  6837 ;;      Locals:         1       0       0       0       0       0       0
  6838 ;;      Temps:          2       0       0       0       0       0       0
  6839 ;;      Totals:         5       0       0       0       0       0       0
  6840 ;;Total ram usage:        5 bytes
  6841 ;; Hardware stack levels used:    1
  6842 ;; Hardware stack levels required when called:    2
  6843 ;; This function calls:
  6844 ;;		_lcd_dat
  6845 ;; This function is called by:
  6846 ;;		_chevrolet
  6847 ;;		_nike_logo
  6848 ;;		_adidas_logo
  6849 ;;		_partida_andamento
  6850 ;;		_main
  6851 ;; This function uses a non-reentrant model
  6852 ;;
  6853                           
  6854                           	psect	text33
  6855  006396                     __ptext33:
  6856                           	callstack 0
  6857  006396                     _lcd_str:
  6858                           	callstack 27
  6859  006396                     
  6860                           ;lcd.c: 76: void lcd_str(const char* str);lcd.c: 77: {;lcd.c: 78:  unsigned char i=0;
  6861  006396  0E00               	movlw	0
  6862  006398  6E0C               	movwf	lcd_str@i^0,c
  6863                           
  6864                           ;lcd.c: 80:  while(str[i] != 0 )
  6865  00639A  EFE8  F031         	goto	l2776
  6866  00639E                     l2772:
  6867                           
  6868                           ;lcd.c: 81:  {;lcd.c: 82:    lcd_dat(str[i]);
  6869  00639E  500C               	movf	lcd_str@i^0,w,c
  6870  0063A0  2408               	addwf	lcd_str@str^0,w,c
  6871  0063A2  6E0A               	movwf	??_lcd_str^0,c
  6872  0063A4  0E00               	movlw	0
  6873  0063A6  2009               	addwfc	(lcd_str@str+1)^0,w,c
  6874  0063A8  6E0B               	movwf	(??_lcd_str+1)^0,c
  6875  0063AA  C00A  FFF6         	movff	??_lcd_str,tblptrl
  6876  0063AE  C00B  FFF7         	movff	??_lcd_str+1,tblptrh
  6877  0063B2  6AF8               	clrf	tblptru,c
  6878  0063B4  0E05               	movlw	(high __ramtop+-1)
  6879  0063B6  64F7               	cpfsgt	tblptrh,c
  6880  0063B8  D003               	bra	u1917
  6881  0063BA  0008               	tblrd		*
  6882  0063BC  50F5               	movf	tablat,w,c
  6883  0063BE  D005               	bra	u1910
  6884  0063C0                     u1917:
  6885  0063C0  CFF6 FFE9          	movff	tblptrl,fsr0l
  6886  0063C4  CFF7 FFEA          	movff	tblptrh,fsr0h
  6887  0063C8  50EF               	movf	indf0,w,c
  6888  0063CA                     u1910:
  6889  0063CA  ECAF  F02F         	call	_lcd_dat
  6890  0063CE                     
  6891                           ;lcd.c: 83:    i++;
  6892  0063CE  2A0C               	incf	lcd_str@i^0,f,c
  6893  0063D0                     l2776:
  6894                           
  6895                           ;lcd.c: 80:  while(str[i] != 0 )
  6896  0063D0  500C               	movf	lcd_str@i^0,w,c
  6897  0063D2  2408               	addwf	lcd_str@str^0,w,c
  6898  0063D4  6E0A               	movwf	??_lcd_str^0,c
  6899  0063D6  0E00               	movlw	0
  6900  0063D8  2009               	addwfc	(lcd_str@str+1)^0,w,c
  6901  0063DA  6E0B               	movwf	(??_lcd_str+1)^0,c
  6902  0063DC  C00A  FFF6         	movff	??_lcd_str,tblptrl
  6903  0063E0  C00B  FFF7         	movff	??_lcd_str+1,tblptrh
  6904  0063E4  6AF8               	clrf	tblptru,c
  6905  0063E6  0E05               	movlw	(high __ramtop+-1)
  6906  0063E8  64F7               	cpfsgt	tblptrh,c
  6907  0063EA  D003               	bra	u1927
  6908  0063EC  0008               	tblrd		*
  6909  0063EE  50F5               	movf	tablat,w,c
  6910  0063F0  D005               	bra	u1920
  6911  0063F2                     u1927:
  6912  0063F2  CFF6 FFE9          	movff	tblptrl,fsr0l
  6913  0063F6  CFF7 FFEA          	movff	tblptrh,fsr0h
  6914  0063FA  50EF               	movf	indf0,w,c
  6915  0063FC                     u1920:
  6916  0063FC  0900               	iorlw	0
  6917  0063FE  A4D8               	btfss	status,2,c
  6918  006400  EF04  F032         	goto	u1931
  6919  006404  EF06  F032         	goto	u1930
  6920  006408                     u1931:
  6921  006408  EFCF  F031         	goto	l2772
  6922  00640C                     u1930:
  6923  00640C  0012               	return		;funcret
  6924  00640E                     __end_of_lcd_str:
  6925                           	callstack 0
  6926                           
  6927 ;; *************** function _lcd_dat *****************
  6928 ;; Defined at:
  6929 ;;		line 46 in file "lcd.c"
  6930 ;; Parameters:    Size  Location     Type
  6931 ;;  val             1    wreg     unsigned char 
  6932 ;; Auto vars:     Size  Location     Type
  6933 ;;  val             1    6[COMRAM] unsigned char 
  6934 ;; Return value:  Size  Location     Type
  6935 ;;                  1    wreg      void 
  6936 ;; Registers used:
  6937 ;;		wreg, status,2, status,0, cstack
  6938 ;; Tracked objects:
  6939 ;;		On entry : 0/0
  6940 ;;		On exit  : 0/0
  6941 ;;		Unchanged: 0/0
  6942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6943 ;;      Params:         0       0       0       0       0       0       0
  6944 ;;      Locals:         1       0       0       0       0       0       0
  6945 ;;      Temps:          0       0       0       0       0       0       0
  6946 ;;      Totals:         1       0       0       0       0       0       0
  6947 ;;Total ram usage:        1 bytes
  6948 ;; Hardware stack levels used:    1
  6949 ;; Hardware stack levels required when called:    1
  6950 ;; This function calls:
  6951 ;;		_atraso_ms
  6952 ;;		_lcd_wr
  6953 ;; This function is called by:
  6954 ;;		_chevrolet
  6955 ;;		_unifeilogo
  6956 ;;		_nike_logo
  6957 ;;		_adidas_logo
  6958 ;;		_partida_andamento
  6959 ;;		_main
  6960 ;;		_lcd_str
  6961 ;; This function uses a non-reentrant model
  6962 ;;
  6963                           
  6964                           	psect	text34
  6965  005F5E                     __ptext34:
  6966                           	callstack 0
  6967  005F5E                     _lcd_dat:
  6968                           	callstack 28
  6969                           
  6970                           ;incstack = 0
  6971                           ;lcd_dat@val stored from wreg
  6972  005F5E  6E07               	movwf	lcd_dat@val^0,c
  6973  005F60                     
  6974                           ;lcd.c: 46: void lcd_dat(unsigned char val);lcd.c: 47: {;lcd.c: 48:  PORTEbits.RE1=1;
  6975  005F60  8284               	bsf	132,1,c	;volatile
  6976  005F62                     
  6977                           ;lcd.c: 49:         lcd_wr(val);
  6978  005F62  5007               	movf	lcd_dat@val^0,w,c
  6979  005F64  EC24  F02F         	call	_lcd_wr
  6980  005F68                     
  6981                           ;lcd.c: 50:         PORTEbits.RE2=1;
  6982  005F68  8484               	bsf	132,2,c	;volatile
  6983  005F6A                     
  6984                           ;lcd.c: 51:         atraso_ms(3);
  6985  005F6A  0E00               	movlw	0
  6986  005F6C  6E02               	movwf	(atraso_ms@t+1)^0,c
  6987  005F6E  0E03               	movlw	3
  6988  005F70  6E01               	movwf	atraso_ms@t^0,c
  6989  005F72  ECEE  F030         	call	_atraso_ms	;wreg free
  6990  005F76                     
  6991                           ;lcd.c: 52:         PORTEbits.RE1=0;
  6992  005F76  9284               	bcf	132,1,c	;volatile
  6993  005F78                     
  6994                           ;lcd.c: 53:         atraso_ms(3);
  6995  005F78  0E00               	movlw	0
  6996  005F7A  6E02               	movwf	(atraso_ms@t+1)^0,c
  6997  005F7C  0E03               	movlw	3
  6998  005F7E  6E01               	movwf	atraso_ms@t^0,c
  6999  005F80  ECEE  F030         	call	_atraso_ms	;wreg free
  7000  005F84                     
  7001                           ;lcd.c: 54:  PORTEbits.RE1=1;
  7002  005F84  8284               	bsf	132,1,c	;volatile
  7003  005F86  0012               	return		;funcret
  7004  005F88                     __end_of_lcd_dat:
  7005                           	callstack 0
  7006                           
  7007 ;; *************** function _lcd_cmd *****************
  7008 ;; Defined at:
  7009 ;;		line 35 in file "lcd.c"
  7010 ;; Parameters:    Size  Location     Type
  7011 ;;  val             1    wreg     unsigned char 
  7012 ;; Auto vars:     Size  Location     Type
  7013 ;;  val             1    6[COMRAM] unsigned char 
  7014 ;; Return value:  Size  Location     Type
  7015 ;;                  1    wreg      void 
  7016 ;; Registers used:
  7017 ;;		wreg, status,2, status,0, cstack
  7018 ;; Tracked objects:
  7019 ;;		On entry : 0/0
  7020 ;;		On exit  : 0/0
  7021 ;;		Unchanged: 0/0
  7022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7023 ;;      Params:         0       0       0       0       0       0       0
  7024 ;;      Locals:         1       0       0       0       0       0       0
  7025 ;;      Temps:          0       0       0       0       0       0       0
  7026 ;;      Totals:         1       0       0       0       0       0       0
  7027 ;;Total ram usage:        1 bytes
  7028 ;; Hardware stack levels used:    1
  7029 ;; Hardware stack levels required when called:    1
  7030 ;; This function calls:
  7031 ;;		_atraso_ms
  7032 ;;		_lcd_wr
  7033 ;; This function is called by:
  7034 ;;		_chevrolet
  7035 ;;		_unifeilogo
  7036 ;;		_nike_logo
  7037 ;;		_adidas_logo
  7038 ;;		_partida_andamento
  7039 ;;		_main
  7040 ;;		_lcd_init
  7041 ;; This function uses a non-reentrant model
  7042 ;;
  7043                           
  7044                           	psect	text35
  7045  005F34                     __ptext35:
  7046                           	callstack 0
  7047  005F34                     _lcd_cmd:
  7048                           	callstack 28
  7049                           
  7050                           ;incstack = 0
  7051                           ;lcd_cmd@val stored from wreg
  7052  005F34  6E07               	movwf	lcd_cmd@val^0,c
  7053  005F36                     
  7054                           ;lcd.c: 35: void lcd_cmd(unsigned char val);lcd.c: 36: {;lcd.c: 37:  PORTEbits.RE1=1;
  7055  005F36  8284               	bsf	132,1,c	;volatile
  7056  005F38                     
  7057                           ;lcd.c: 38:         lcd_wr(val);
  7058  005F38  5007               	movf	lcd_cmd@val^0,w,c
  7059  005F3A  EC24  F02F         	call	_lcd_wr
  7060  005F3E                     
  7061                           ;lcd.c: 39:         PORTEbits.RE2=0;
  7062  005F3E  9484               	bcf	132,2,c	;volatile
  7063  005F40                     
  7064                           ;lcd.c: 40:         atraso_ms(3);
  7065  005F40  0E00               	movlw	0
  7066  005F42  6E02               	movwf	(atraso_ms@t+1)^0,c
  7067  005F44  0E03               	movlw	3
  7068  005F46  6E01               	movwf	atraso_ms@t^0,c
  7069  005F48  ECEE  F030         	call	_atraso_ms	;wreg free
  7070  005F4C                     
  7071                           ;lcd.c: 41:         PORTEbits.RE1=0;
  7072  005F4C  9284               	bcf	132,1,c	;volatile
  7073  005F4E                     
  7074                           ;lcd.c: 42:         atraso_ms(3);
  7075  005F4E  0E00               	movlw	0
  7076  005F50  6E02               	movwf	(atraso_ms@t+1)^0,c
  7077  005F52  0E03               	movlw	3
  7078  005F54  6E01               	movwf	atraso_ms@t^0,c
  7079  005F56  ECEE  F030         	call	_atraso_ms	;wreg free
  7080  005F5A                     
  7081                           ;lcd.c: 43:  PORTEbits.RE1=1;
  7082  005F5A  8284               	bsf	132,1,c	;volatile
  7083  005F5C  0012               	return		;funcret
  7084  005F5E                     __end_of_lcd_cmd:
  7085                           	callstack 0
  7086                           
  7087 ;; *************** function _lcd_wr *****************
  7088 ;; Defined at:
  7089 ;;		line 30 in file "lcd.c"
  7090 ;; Parameters:    Size  Location     Type
  7091 ;;  val             1    wreg     unsigned char 
  7092 ;; Auto vars:     Size  Location     Type
  7093 ;;  val             1    0[COMRAM] unsigned char 
  7094 ;; Return value:  Size  Location     Type
  7095 ;;                  1    wreg      void 
  7096 ;; Registers used:
  7097 ;;		wreg
  7098 ;; Tracked objects:
  7099 ;;		On entry : 0/0
  7100 ;;		On exit  : 0/0
  7101 ;;		Unchanged: 0/0
  7102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7103 ;;      Params:         0       0       0       0       0       0       0
  7104 ;;      Locals:         1       0       0       0       0       0       0
  7105 ;;      Temps:          0       0       0       0       0       0       0
  7106 ;;      Totals:         1       0       0       0       0       0       0
  7107 ;;Total ram usage:        1 bytes
  7108 ;; Hardware stack levels used:    1
  7109 ;; This function calls:
  7110 ;;		Nothing
  7111 ;; This function is called by:
  7112 ;;		_lcd_cmd
  7113 ;;		_lcd_dat
  7114 ;; This function uses a non-reentrant model
  7115 ;;
  7116                           
  7117                           	psect	text36
  7118  005E48                     __ptext36:
  7119                           	callstack 0
  7120  005E48                     _lcd_wr:
  7121                           	callstack 28
  7122                           
  7123                           ;incstack = 0
  7124                           ;lcd_wr@val stored from wreg
  7125  005E48  6E01               	movwf	lcd_wr@val^0,c
  7126  005E4A                     
  7127                           ;lcd.c: 30: void lcd_wr(unsigned char val);lcd.c: 31: {;lcd.c: 32:   PORTD=val;
  7128  005E4A  C001  FF83         	movff	lcd_wr@val,3971	;volatile
  7129  005E4E  0012               	return		;funcret
  7130  005E50                     __end_of_lcd_wr:
  7131                           	callstack 0
  7132                           
  7133 ;; *************** function _atraso_ms *****************
  7134 ;; Defined at:
  7135 ;;		line 3 in file "delay.c"
  7136 ;; Parameters:    Size  Location     Type
  7137 ;;  t               2    0[COMRAM] unsigned int 
  7138 ;; Auto vars:     Size  Location     Type
  7139 ;;  i               2    2[COMRAM] volatile unsigned int 
  7140 ;;  k               1    5[COMRAM] volatile unsigned char 
  7141 ;;  j               1    4[COMRAM] volatile unsigned char 
  7142 ;; Return value:  Size  Location     Type
  7143 ;;                  1    wreg      void 
  7144 ;; Registers used:
  7145 ;;		wreg, status,2, status,0
  7146 ;; Tracked objects:
  7147 ;;		On entry : 0/0
  7148 ;;		On exit  : 0/0
  7149 ;;		Unchanged: 0/0
  7150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7151 ;;      Params:         2       0       0       0       0       0       0
  7152 ;;      Locals:         4       0       0       0       0       0       0
  7153 ;;      Temps:          0       0       0       0       0       0       0
  7154 ;;      Totals:         6       0       0       0       0       0       0
  7155 ;;Total ram usage:        6 bytes
  7156 ;; Hardware stack levels used:    1
  7157 ;; This function calls:
  7158 ;;		Nothing
  7159 ;; This function is called by:
  7160 ;;		_chevrolet
  7161 ;;		_nike_logo
  7162 ;;		_adidas_logo
  7163 ;;		_main
  7164 ;;		_lcd_cmd
  7165 ;;		_lcd_dat
  7166 ;;		_lcd_init
  7167 ;;		_tc_tecla
  7168 ;; This function uses a non-reentrant model
  7169 ;;
  7170                           
  7171                           	psect	text37
  7172  0061DC                     __ptext37:
  7173                           	callstack 0
  7174  0061DC                     _atraso_ms:
  7175                           	callstack 28
  7176  0061DC                     
  7177                           ;delay.c: 4:     volatile unsigned char j, k;;delay.c: 5:     volatile unsigned int i;;d
      +                          elay.c: 6:     for (i = 0; i < t; i++) {
  7178  0061DC  0E00               	movlw	0
  7179  0061DE  6E04               	movwf	(atraso_ms@i+1)^0,c	;volatile
  7180  0061E0  0E00               	movlw	0
  7181  0061E2  6E03               	movwf	atraso_ms@i^0,c	;volatile
  7182  0061E4  EF14  F031         	goto	l2708
  7183  0061E8                     l2686:
  7184                           
  7185                           ;delay.c: 7:         for (j = 0; j < 41; j++) {
  7186  0061E8  0E00               	movlw	0
  7187  0061EA  6E05               	movwf	atraso_ms@j^0,c	;volatile
  7188  0061EC                     l2688:
  7189  0061EC  0E28               	movlw	40
  7190  0061EE  6405               	cpfsgt	atraso_ms@j^0,c	;volatile
  7191  0061F0  EFFC  F030         	goto	u1851
  7192  0061F4  EFFE  F030         	goto	u1850
  7193  0061F8                     u1851:
  7194  0061F8  EF00  F031         	goto	l2692
  7195  0061FC                     u1850:
  7196  0061FC  EF12  F031         	goto	l2706
  7197  006200                     l2692:
  7198                           
  7199                           ;delay.c: 8:             for (k = 0; k < 3; k++);
  7200  006200  0E00               	movlw	0
  7201  006202  6E06               	movwf	atraso_ms@k^0,c	;volatile
  7202  006204                     l2694:
  7203  006204  0E02               	movlw	2
  7204  006206  6406               	cpfsgt	atraso_ms@k^0,c	;volatile
  7205  006208  EF08  F031         	goto	u1861
  7206  00620C  EF0A  F031         	goto	u1860
  7207  006210                     u1861:
  7208  006210  EF0C  F031         	goto	l2698
  7209  006214                     u1860:
  7210  006214  EF0F  F031         	goto	l2702
  7211  006218                     l2698:
  7212  006218  2A06               	incf	atraso_ms@k^0,f,c	;volatile
  7213  00621A  EF02  F031         	goto	l2694
  7214  00621E                     l2702:
  7215                           
  7216                           ;delay.c: 9:         }
  7217  00621E  2A05               	incf	atraso_ms@j^0,f,c	;volatile
  7218  006220  EFF6  F030         	goto	l2688
  7219  006224                     l2706:
  7220                           
  7221                           ;delay.c: 10:     }
  7222  006224  4A03               	infsnz	atraso_ms@i^0,f,c	;volatile
  7223  006226  2A04               	incf	(atraso_ms@i+1)^0,f,c	;volatile
  7224  006228                     l2708:
  7225  006228  5001               	movf	atraso_ms@t^0,w,c
  7226  00622A  5C03               	subwf	atraso_ms@i^0,w,c	;volatile
  7227  00622C  5002               	movf	(atraso_ms@t+1)^0,w,c
  7228  00622E  5804               	subwfb	(atraso_ms@i+1)^0,w,c	;volatile
  7229  006230  A0D8               	btfss	status,0,c
  7230  006232  EF1D  F031         	goto	u1871
  7231  006236  EF1F  F031         	goto	u1870
  7232  00623A                     u1871:
  7233  00623A  EFF4  F030         	goto	l2686
  7234  00623E                     u1870:
  7235  00623E  0012               	return		;funcret
  7236  006240                     __end_of_atraso_ms:
  7237                           	callstack 0
  7238                           
  7239 ;; *************** function ___awmod *****************
  7240 ;; Defined at:
  7241 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\awmod.c"
  7242 ;; Parameters:    Size  Location     Type
  7243 ;;  dividend        2    8[COMRAM] int 
  7244 ;;  divisor         2   10[COMRAM] int 
  7245 ;; Auto vars:     Size  Location     Type
  7246 ;;  sign            1   13[COMRAM] unsigned char 
  7247 ;;  counter         1   12[COMRAM] unsigned char 
  7248 ;; Return value:  Size  Location     Type
  7249 ;;                  2    8[COMRAM] int 
  7250 ;; Registers used:
  7251 ;;		wreg, status,2, status,0
  7252 ;; Tracked objects:
  7253 ;;		On entry : 0/0
  7254 ;;		On exit  : 0/0
  7255 ;;		Unchanged: 0/0
  7256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7257 ;;      Params:         4       0       0       0       0       0       0
  7258 ;;      Locals:         2       0       0       0       0       0       0
  7259 ;;      Temps:          0       0       0       0       0       0       0
  7260 ;;      Totals:         6       0       0       0       0       0       0
  7261 ;;Total ram usage:        6 bytes
  7262 ;; Hardware stack levels used:    1
  7263 ;; This function calls:
  7264 ;;		Nothing
  7265 ;; This function is called by:
  7266 ;;		_main
  7267 ;; This function uses a non-reentrant model
  7268 ;;
  7269                           
  7270                           	psect	text38
  7271  006600                     __ptext38:
  7272                           	callstack 0
  7273  006600                     ___awmod:
  7274                           	callstack 30
  7275  006600  0E00               	movlw	0
  7276  006602  6E0E               	movwf	___awmod@sign^0,c
  7277  006604  BE0A               	btfsc	(___awmod@dividend+1)^0,7,c
  7278  006606  EF09  F033         	goto	u2910
  7279  00660A  EF07  F033         	goto	u2911
  7280  00660E                     u2911:
  7281  00660E  EF0F  F033         	goto	l3498
  7282  006612                     u2910:
  7283  006612  6C09               	negf	___awmod@dividend^0,c
  7284  006614  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  7285  006616  B0D8               	btfsc	status,0,c
  7286  006618  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  7287  00661A  0E01               	movlw	1
  7288  00661C  6E0E               	movwf	___awmod@sign^0,c
  7289  00661E                     l3498:
  7290  00661E  BE0C               	btfsc	(___awmod@divisor+1)^0,7,c
  7291  006620  EF16  F033         	goto	u2920
  7292  006624  EF14  F033         	goto	u2921
  7293  006628                     u2921:
  7294  006628  EF1A  F033         	goto	l3502
  7295  00662C                     u2920:
  7296  00662C  6C0B               	negf	___awmod@divisor^0,c
  7297  00662E  1E0C               	comf	(___awmod@divisor+1)^0,f,c
  7298  006630  B0D8               	btfsc	status,0,c
  7299  006632  2A0C               	incf	(___awmod@divisor+1)^0,f,c
  7300  006634                     l3502:
  7301  006634  500B               	movf	___awmod@divisor^0,w,c
  7302  006636  100C               	iorwf	(___awmod@divisor+1)^0,w,c
  7303  006638  B4D8               	btfsc	status,2,c
  7304  00663A  EF21  F033         	goto	u2931
  7305  00663E  EF23  F033         	goto	u2930
  7306  006642                     u2931:
  7307  006642  EF47  F033         	goto	l3518
  7308  006646                     u2930:
  7309  006646  0E01               	movlw	1
  7310  006648  6E0D               	movwf	___awmod@counter^0,c
  7311  00664A  EF2B  F033         	goto	l3508
  7312  00664E                     l3506:
  7313  00664E  90D8               	bcf	status,0,c
  7314  006650  360B               	rlcf	___awmod@divisor^0,f,c
  7315  006652  360C               	rlcf	(___awmod@divisor+1)^0,f,c
  7316  006654  2A0D               	incf	___awmod@counter^0,f,c
  7317  006656                     l3508:
  7318  006656  AE0C               	btfss	(___awmod@divisor+1)^0,7,c
  7319  006658  EF30  F033         	goto	u2941
  7320  00665C  EF32  F033         	goto	u2940
  7321  006660                     u2941:
  7322  006660  EF27  F033         	goto	l3506
  7323  006664                     u2940:
  7324  006664                     l3510:
  7325  006664  500B               	movf	___awmod@divisor^0,w,c
  7326  006666  5C09               	subwf	___awmod@dividend^0,w,c
  7327  006668  500C               	movf	(___awmod@divisor+1)^0,w,c
  7328  00666A  580A               	subwfb	(___awmod@dividend+1)^0,w,c
  7329  00666C  A0D8               	btfss	status,0,c
  7330  00666E  EF3B  F033         	goto	u2951
  7331  006672  EF3D  F033         	goto	u2950
  7332  006676                     u2951:
  7333  006676  EF41  F033         	goto	l3514
  7334  00667A                     u2950:
  7335  00667A  500B               	movf	___awmod@divisor^0,w,c
  7336  00667C  5E09               	subwf	___awmod@dividend^0,f,c
  7337  00667E  500C               	movf	(___awmod@divisor+1)^0,w,c
  7338  006680  5A0A               	subwfb	(___awmod@dividend+1)^0,f,c
  7339  006682                     l3514:
  7340  006682  90D8               	bcf	status,0,c
  7341  006684  320C               	rrcf	(___awmod@divisor+1)^0,f,c
  7342  006686  320B               	rrcf	___awmod@divisor^0,f,c
  7343  006688  2E0D               	decfsz	___awmod@counter^0,f,c
  7344  00668A  EF32  F033         	goto	l3510
  7345  00668E                     l3518:
  7346  00668E  500E               	movf	___awmod@sign^0,w,c
  7347  006690  B4D8               	btfsc	status,2,c
  7348  006692  EF4D  F033         	goto	u2961
  7349  006696  EF4F  F033         	goto	u2960
  7350  00669A                     u2961:
  7351  00669A  EF53  F033         	goto	l3522
  7352  00669E                     u2960:
  7353  00669E  6C09               	negf	___awmod@dividend^0,c
  7354  0066A0  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  7355  0066A2  B0D8               	btfsc	status,0,c
  7356  0066A4  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  7357  0066A6                     l3522:
  7358  0066A6  C009  F009         	movff	___awmod@dividend,?___awmod
  7359  0066AA  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
  7360  0066AE  0012               	return		;funcret
  7361  0066B0                     __end_of___awmod:
  7362                           	callstack 0
  7363                           
  7364 ;; *************** function ___awdiv *****************
  7365 ;; Defined at:
  7366 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\awdiv.c"
  7367 ;; Parameters:    Size  Location     Type
  7368 ;;  dividend        2    0[COMRAM] int 
  7369 ;;  divisor         2    2[COMRAM] int 
  7370 ;; Auto vars:     Size  Location     Type
  7371 ;;  quotient        2    6[COMRAM] int 
  7372 ;;  sign            1    5[COMRAM] unsigned char 
  7373 ;;  counter         1    4[COMRAM] unsigned char 
  7374 ;; Return value:  Size  Location     Type
  7375 ;;                  2    0[COMRAM] int 
  7376 ;; Registers used:
  7377 ;;		wreg, status,2, status,0
  7378 ;; Tracked objects:
  7379 ;;		On entry : 0/0
  7380 ;;		On exit  : 0/0
  7381 ;;		Unchanged: 0/0
  7382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7383 ;;      Params:         4       0       0       0       0       0       0
  7384 ;;      Locals:         4       0       0       0       0       0       0
  7385 ;;      Temps:          0       0       0       0       0       0       0
  7386 ;;      Totals:         8       0       0       0       0       0       0
  7387 ;;Total ram usage:        8 bytes
  7388 ;; Hardware stack levels used:    1
  7389 ;; This function calls:
  7390 ;;		Nothing
  7391 ;; This function is called by:
  7392 ;;		_main
  7393 ;; This function uses a non-reentrant model
  7394 ;;
  7395                           
  7396                           	psect	text39
  7397  0066B0                     __ptext39:
  7398                           	callstack 0
  7399  0066B0                     ___awdiv:
  7400                           	callstack 30
  7401  0066B0  0E00               	movlw	0
  7402  0066B2  6E06               	movwf	___awdiv@sign^0,c
  7403  0066B4  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  7404  0066B6  EF61  F033         	goto	u2850
  7405  0066BA  EF5F  F033         	goto	u2851
  7406  0066BE                     u2851:
  7407  0066BE  EF67  F033         	goto	l3454
  7408  0066C2                     u2850:
  7409  0066C2  6C03               	negf	___awdiv@divisor^0,c
  7410  0066C4  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7411  0066C6  B0D8               	btfsc	status,0,c
  7412  0066C8  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7413  0066CA  0E01               	movlw	1
  7414  0066CC  6E06               	movwf	___awdiv@sign^0,c
  7415  0066CE                     l3454:
  7416  0066CE  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7417  0066D0  EF6E  F033         	goto	u2860
  7418  0066D4  EF6C  F033         	goto	u2861
  7419  0066D8                     u2861:
  7420  0066D8  EF74  F033         	goto	l3460
  7421  0066DC                     u2860:
  7422  0066DC  6C01               	negf	___awdiv@dividend^0,c
  7423  0066DE  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7424  0066E0  B0D8               	btfsc	status,0,c
  7425  0066E2  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7426  0066E4  0E01               	movlw	1
  7427  0066E6  1A06               	xorwf	___awdiv@sign^0,f,c
  7428  0066E8                     l3460:
  7429  0066E8  0E00               	movlw	0
  7430  0066EA  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7431  0066EC  0E00               	movlw	0
  7432  0066EE  6E07               	movwf	___awdiv@quotient^0,c
  7433  0066F0  5003               	movf	___awdiv@divisor^0,w,c
  7434  0066F2  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7435  0066F4  B4D8               	btfsc	status,2,c
  7436  0066F6  EF7F  F033         	goto	u2871
  7437  0066FA  EF81  F033         	goto	u2870
  7438  0066FE                     u2871:
  7439  0066FE  EFA9  F033         	goto	l3482
  7440  006702                     u2870:
  7441  006702  0E01               	movlw	1
  7442  006704  6E05               	movwf	___awdiv@counter^0,c
  7443  006706  EF89  F033         	goto	l3468
  7444  00670A                     l3466:
  7445  00670A  90D8               	bcf	status,0,c
  7446  00670C  3603               	rlcf	___awdiv@divisor^0,f,c
  7447  00670E  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7448  006710  2A05               	incf	___awdiv@counter^0,f,c
  7449  006712                     l3468:
  7450  006712  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7451  006714  EF8E  F033         	goto	u2881
  7452  006718  EF90  F033         	goto	u2880
  7453  00671C                     u2881:
  7454  00671C  EF85  F033         	goto	l3466
  7455  006720                     u2880:
  7456  006720                     l3470:
  7457  006720  90D8               	bcf	status,0,c
  7458  006722  3607               	rlcf	___awdiv@quotient^0,f,c
  7459  006724  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7460  006726  5003               	movf	___awdiv@divisor^0,w,c
  7461  006728  5C01               	subwf	___awdiv@dividend^0,w,c
  7462  00672A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7463  00672C  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7464  00672E  A0D8               	btfss	status,0,c
  7465  006730  EF9C  F033         	goto	u2891
  7466  006734  EF9E  F033         	goto	u2890
  7467  006738                     u2891:
  7468  006738  EFA3  F033         	goto	l3478
  7469  00673C                     u2890:
  7470  00673C  5003               	movf	___awdiv@divisor^0,w,c
  7471  00673E  5E01               	subwf	___awdiv@dividend^0,f,c
  7472  006740  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7473  006742  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7474  006744  8007               	bsf	___awdiv@quotient^0,0,c
  7475  006746                     l3478:
  7476  006746  90D8               	bcf	status,0,c
  7477  006748  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7478  00674A  3203               	rrcf	___awdiv@divisor^0,f,c
  7479  00674C  2E05               	decfsz	___awdiv@counter^0,f,c
  7480  00674E  EF90  F033         	goto	l3470
  7481  006752                     l3482:
  7482  006752  5006               	movf	___awdiv@sign^0,w,c
  7483  006754  B4D8               	btfsc	status,2,c
  7484  006756  EFAF  F033         	goto	u2901
  7485  00675A  EFB1  F033         	goto	u2900
  7486  00675E                     u2901:
  7487  00675E  EFB5  F033         	goto	l3486
  7488  006762                     u2900:
  7489  006762  6C07               	negf	___awdiv@quotient^0,c
  7490  006764  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7491  006766  B0D8               	btfsc	status,0,c
  7492  006768  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7493  00676A                     l3486:
  7494  00676A  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7495  00676E  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7496  006772  0012               	return		;funcret
  7497  006774                     __end_of___awdiv:
  7498                           	callstack 0
  7499                           
  7500                           	psect	rparam
  7501  0000                     
  7502                           	psect	idloc
  7503                           
  7504                           ;Config register IDLOC0 @ 0x200000
  7505                           ;	unspecified, using default values
  7506  200000                     	org	2097152
  7507  200000  FF                 	db	255
  7508                           
  7509                           ;Config register IDLOC1 @ 0x200001
  7510                           ;	unspecified, using default values
  7511  200001                     	org	2097153
  7512  200001  FF                 	db	255
  7513                           
  7514                           ;Config register IDLOC2 @ 0x200002
  7515                           ;	unspecified, using default values
  7516  200002                     	org	2097154
  7517  200002  FF                 	db	255
  7518                           
  7519                           ;Config register IDLOC3 @ 0x200003
  7520                           ;	unspecified, using default values
  7521  200003                     	org	2097155
  7522  200003  FF                 	db	255
  7523                           
  7524                           ;Config register IDLOC4 @ 0x200004
  7525                           ;	unspecified, using default values
  7526  200004                     	org	2097156
  7527  200004  FF                 	db	255
  7528                           
  7529                           ;Config register IDLOC5 @ 0x200005
  7530                           ;	unspecified, using default values
  7531  200005                     	org	2097157
  7532  200005  FF                 	db	255
  7533                           
  7534                           ;Config register IDLOC6 @ 0x200006
  7535                           ;	unspecified, using default values
  7536  200006                     	org	2097158
  7537  200006  FF                 	db	255
  7538                           
  7539                           ;Config register IDLOC7 @ 0x200007
  7540                           ;	unspecified, using default values
  7541  200007                     	org	2097159
  7542  200007  FF                 	db	255
  7543                           
  7544                           	psect	config
  7545                           
  7546                           ; Padding undefined space
  7547  300000                     	org	3145728
  7548  300000  FF                 	db	255
  7549                           
  7550                           ;Config register CONFIG1H @ 0x300001
  7551                           ;	Oscillator Selection bits
  7552                           ;	OSC = HS, HS oscillator
  7553                           ;	Fail-Safe Clock Monitor Enable bit
  7554                           ;	FCMEN = 0x0, unprogrammed default
  7555                           ;	Internal/External Oscillator Switchover bit
  7556                           ;	IESO = 0x0, unprogrammed default
  7557  300001                     	org	3145729
  7558  300001  02                 	db	2
  7559                           
  7560                           ;Config register CONFIG2L @ 0x300002
  7561                           ;	unspecified, using default values
  7562                           ;	Power-up Timer Enable bit
  7563                           ;	PWRT = 0x1, unprogrammed default
  7564                           ;	Brown-out Reset Enable bits
  7565                           ;	BOREN = 0x3, unprogrammed default
  7566                           ;	Brown Out Reset Voltage bits
  7567                           ;	BORV = 0x3, unprogrammed default
  7568  300002                     	org	3145730
  7569  300002  1F                 	db	31
  7570                           
  7571                           ;Config register CONFIG2H @ 0x300003
  7572                           ;	Watchdog Timer Enable bit
  7573                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  7574                           ;	Watchdog Timer Postscale Select bits
  7575                           ;	WDTPS = 1, 1:1
  7576  300003                     	org	3145731
  7577  300003  00                 	db	0
  7578                           
  7579                           ; Padding undefined space
  7580  300004                     	org	3145732
  7581  300004  FF                 	db	255
  7582                           
  7583                           ;Config register CONFIG3H @ 0x300005
  7584                           ;	CCP2 MUX bit
  7585                           ;	CCP2MX = 0x1, unprogrammed default
  7586                           ;	PORTB A/D Enable bit
  7587                           ;	PBADEN = 0x1, unprogrammed default
  7588                           ;	Low-Power Timer1 Oscillator Enable bit
  7589                           ;	LPT1OSC = 0x0, unprogrammed default
  7590                           ;	MCLR Pin Enable bit
  7591                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  7592  300005                     	org	3145733
  7593  300005  83                 	db	131
  7594                           
  7595                           ;Config register CONFIG4L @ 0x300006
  7596                           ;	Stack Full/Underflow Reset Enable bit
  7597                           ;	STVREN = 0x1, unprogrammed default
  7598                           ;	Single-Supply ICSP Enable bit
  7599                           ;	LVP = OFF, Single-Supply ICSP disabled
  7600                           ;	Extended Instruction Set Enable bit
  7601                           ;	XINST = 0x0, unprogrammed default
  7602                           ;	Background Debugger Enable bit
  7603                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  7604  300006                     	org	3145734
  7605  300006  81                 	db	129
  7606                           
  7607                           ; Padding undefined space
  7608  300007                     	org	3145735
  7609  300007  FF                 	db	255
  7610                           
  7611                           ;Config register CONFIG5L @ 0x300008
  7612                           ;	unspecified, using default values
  7613                           ;	Code Protection bit
  7614                           ;	CP0 = 0x1, unprogrammed default
  7615                           ;	Code Protection bit
  7616                           ;	CP1 = 0x1, unprogrammed default
  7617                           ;	Code Protection bit
  7618                           ;	CP2 = 0x1, unprogrammed default
  7619                           ;	Code Protection bit
  7620                           ;	CP3 = 0x1, unprogrammed default
  7621  300008                     	org	3145736
  7622  300008  0F                 	db	15
  7623                           
  7624                           ;Config register CONFIG5H @ 0x300009
  7625                           ;	unspecified, using default values
  7626                           ;	Boot Block Code Protection bit
  7627                           ;	CPB = 0x1, unprogrammed default
  7628                           ;	Data EEPROM Code Protection bit
  7629                           ;	CPD = 0x1, unprogrammed default
  7630  300009                     	org	3145737
  7631  300009  C0                 	db	192
  7632                           
  7633                           ;Config register CONFIG6L @ 0x30000A
  7634                           ;	unspecified, using default values
  7635                           ;	Write Protection bit
  7636                           ;	WRT0 = 0x1, unprogrammed default
  7637                           ;	Write Protection bit
  7638                           ;	WRT1 = 0x1, unprogrammed default
  7639                           ;	Write Protection bit
  7640                           ;	WRT2 = 0x1, unprogrammed default
  7641                           ;	Write Protection bit
  7642                           ;	WRT3 = 0x1, unprogrammed default
  7643  30000A                     	org	3145738
  7644  30000A  0F                 	db	15
  7645                           
  7646                           ;Config register CONFIG6H @ 0x30000B
  7647                           ;	unspecified, using default values
  7648                           ;	Configuration Register Write Protection bit
  7649                           ;	WRTC = 0x1, unprogrammed default
  7650                           ;	Boot Block Write Protection bit
  7651                           ;	WRTB = 0x1, unprogrammed default
  7652                           ;	Data EEPROM Write Protection bit
  7653                           ;	WRTD = 0x1, unprogrammed default
  7654  30000B                     	org	3145739
  7655  30000B  E0                 	db	224
  7656                           
  7657                           ;Config register CONFIG7L @ 0x30000C
  7658                           ;	unspecified, using default values
  7659                           ;	Table Read Protection bit
  7660                           ;	EBTR0 = 0x1, unprogrammed default
  7661                           ;	Table Read Protection bit
  7662                           ;	EBTR1 = 0x1, unprogrammed default
  7663                           ;	Table Read Protection bit
  7664                           ;	EBTR2 = 0x1, unprogrammed default
  7665                           ;	Table Read Protection bit
  7666                           ;	EBTR3 = 0x1, unprogrammed default
  7667  30000C                     	org	3145740
  7668  30000C  0F                 	db	15
  7669                           
  7670                           ;Config register CONFIG7H @ 0x30000D
  7671                           ;	unspecified, using default values
  7672                           ;	Boot Block Table Read Protection bit
  7673                           ;	EBTRB = 0x1, unprogrammed default
  7674  30000D                     	org	3145741
  7675  30000D  40                 	db	64
  7676                           tosu	equ	0xFFF
  7677                           tosh	equ	0xFFE
  7678                           tosl	equ	0xFFD
  7679                           stkptr	equ	0xFFC
  7680                           pclatu	equ	0xFFB
  7681                           pclath	equ	0xFFA
  7682                           pcl	equ	0xFF9
  7683                           tblptru	equ	0xFF8
  7684                           tblptrh	equ	0xFF7
  7685                           tblptrl	equ	0xFF6
  7686                           tablat	equ	0xFF5
  7687                           prodh	equ	0xFF4
  7688                           prodl	equ	0xFF3
  7689                           indf0	equ	0xFEF
  7690                           postinc0	equ	0xFEE
  7691                           postdec0	equ	0xFED
  7692                           preinc0	equ	0xFEC
  7693                           plusw0	equ	0xFEB
  7694                           fsr0h	equ	0xFEA
  7695                           fsr0l	equ	0xFE9
  7696                           wreg	equ	0xFE8
  7697                           indf1	equ	0xFE7
  7698                           postinc1	equ	0xFE6
  7699                           postdec1	equ	0xFE5
  7700                           preinc1	equ	0xFE4
  7701                           plusw1	equ	0xFE3
  7702                           fsr1h	equ	0xFE2
  7703                           fsr1l	equ	0xFE1
  7704                           bsr	equ	0xFE0
  7705                           indf2	equ	0xFDF
  7706                           postinc2	equ	0xFDE
  7707                           postdec2	equ	0xFDD
  7708                           preinc2	equ	0xFDC
  7709                           plusw2	equ	0xFDB
  7710                           fsr2h	equ	0xFDA
  7711                           fsr2l	equ	0xFD9
  7712                           status	equ	0xFD8

Data Sizes:
    Strings     341
    Constant    20
    Data        184
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     92     124
    BANK0           128      0     128
    BANK1           256      0      56
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_36(CODE[15]), STR_35(CODE[16]), STR_34(CODE[7]), STR_33(CODE[7]), 
		 -> STR_32(CODE[13]), STR_31(CODE[17]), STR_30(CODE[7]), STR_29(CODE[7]), 
		 -> STR_28(CODE[10]), STR_27(CODE[7]), STR_26(CODE[9]), STR_25(CODE[17]), 
		 -> STR_24(CODE[17]), STR_23(CODE[17]), STR_22(CODE[17]), STR_21(CODE[4]), 
		 -> STR_20(CODE[4]), STR_19(CODE[4]), STR_18(CODE[4]), STR_17(CODE[16]), 
		 -> STR_16(CODE[16]), STR_15(CODE[15]), STR_14(CODE[17]), STR_13(CODE[17]), 
		 -> STR_12(CODE[7]), STR_11(CODE[7]), date(COMRAM[10]), STR_10(CODE[14]), 
		 -> STR_9(CODE[14]), STR_8(CODE[14]), STR_7(CODE[9]), STR_6(CODE[9]), 
		 -> STR_5(CODE[7]), STR_4(CODE[15]), STR_3(CODE[7]), STR_2(CODE[5]), 
		 -> STR_1(CODE[10]), 


Critical Paths under _main in COMRAM

    _main->_nike_logo
    _unifeilogo->_lcd_cmd
    _unifeilogo->_lcd_dat
    _ssdUpdate->_digitalWrite
    _ssdInit->_pinMode
    _ssdDigit->___awmod
    _rtc_r->_i2c_rb
    _i2c_wb->_delay
    _i2c_stop->_delay
    _i2c_start->_delay
    _i2c_rb->_delay
    _pwmSet1->___lwdiv
    _pwmFrequency->___aldiv
    _partida_andamento->_lcd_str
    _nike_logo->_lcd_str
    _lcd_init->_lcd_cmd
    _chevrolet->_lcd_str
    _atraso_s->___wmul
    _adidas_logo->_lcd_str
    _lcd_str->_lcd_dat
    _lcd_dat->_atraso_ms
    _lcd_cmd->_atraso_ms
    ___awmod->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0   78267
                                             70 COMRAM    22    22      0
                            ___awdiv
                            ___awmod
                        _adidas_logo
                          _atraso_ms
                           _atraso_s
                          _chevrolet
                         _kpDebounce
                             _kpInit
                             _kpRead
                            _lcd_cmd
                            _lcd_dat
                           _lcd_init
                            _lcd_str
                          _nike_logo
                  _partida_andamento
                       _pwmFrequency
                            _pwmInit
                            _pwmSet1
                              _rtc_r
                           _ssdDigit
                            _ssdInit
                          _ssdUpdate
                          _timerInit
                         _timerReset
                          _timerWait
                         _unifeilogo
 ---------------------------------------------------------------------------------
 (1) _unifeilogo                                          50    50      0    4408
                                              7 COMRAM    49    49      0
                            _lcd_cmd
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (1) _timerWait                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timerReset                                           4     2      2     167
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _timerInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ssdUpdate                                            2     2      0    1660
                                              6 COMRAM     2     2      0
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _digitalWrite                                         6     2      4    1660
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    1048
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              6     2      4    1048
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _ssdDigit                                             2     1      1     860
                                             14 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _rtc_r                                                1     1      0    1070
                                              9 COMRAM     1     1      0
                               _getd
                               _getu
                             _i2c_rb
                          _i2c_start
                           _i2c_stop
                             _i2c_wb
 ---------------------------------------------------------------------------------
 (2) _i2c_wb                                               4     4      0     228
                                              4 COMRAM     4     4      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             0     0      0     138
                              _delay
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            0     0      0     138
                              _delay
 ---------------------------------------------------------------------------------
 (2) _i2c_rb                                               5     5      0     252
                                              4 COMRAM     5     5      0
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                4     4      0     138
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) _getu                                                 1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _getd                                                 1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _pwmSet1                                              5     5      0    1172
                                              7 COMRAM     5     5      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _pwmInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pwmFrequency                                         2     0      2     626
                                             14 COMRAM     2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     452
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _partida_andamento                                    3     1      2    9746
                                             12 COMRAM     3     1      2
                            _lcd_cmd
                            _lcd_dat
                            _lcd_str
 ---------------------------------------------------------------------------------
 (1) _nike_logo                                           58    58      0   11720
                                             12 COMRAM    58    58      0
                          _atraso_ms
                            _lcd_cmd
                            _lcd_dat
                            _lcd_str
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0    4272
                          _atraso_ms
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                          10    10      0     315
                                              0 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 (1) _chevrolet                                           34    34      0   11720
                                             12 COMRAM    34    34      0
                          _atraso_ms
                            _lcd_cmd
                            _lcd_dat
                            _lcd_str
 ---------------------------------------------------------------------------------
 (1) _atraso_s                                             6     4      2    1209
                                              6 COMRAM     6     4      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     615
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _adidas_logo                                         50    50      0   11720
                                             12 COMRAM    50    50      0
                          _atraso_ms
                            _lcd_cmd
                            _lcd_dat
                            _lcd_str
 ---------------------------------------------------------------------------------
 (2) _lcd_str                                              5     3      2    5060
                                              7 COMRAM     5     3      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (2) _lcd_dat                                              1     1      0    2158
                                              6 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0    2158
                                              6 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (3) _lcd_wr                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _atraso_ms                                            6     4      2    2114
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4    1816
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4    1516
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   _adidas_logo
     _atraso_ms
     _lcd_cmd
       _atraso_ms
       _lcd_wr
     _lcd_dat
       _atraso_ms
       _lcd_wr
     _lcd_str
       _lcd_dat
         _atraso_ms
         _lcd_wr
   _atraso_ms
   _atraso_s
     ___wmul
   _chevrolet
     _atraso_ms
     _lcd_cmd
       _atraso_ms
       _lcd_wr
     _lcd_dat
       _atraso_ms
       _lcd_wr
     _lcd_str
       _lcd_dat
         _atraso_ms
         _lcd_wr
   _kpDebounce
   _kpInit
   _kpRead
   _lcd_cmd
     _atraso_ms
     _lcd_wr
   _lcd_dat
     _atraso_ms
     _lcd_wr
   _lcd_init
     _atraso_ms
     _lcd_cmd
       _atraso_ms
       _lcd_wr
   _lcd_str
     _lcd_dat
       _atraso_ms
       _lcd_wr
   _nike_logo
     _atraso_ms
     _lcd_cmd
       _atraso_ms
       _lcd_wr
     _lcd_dat
       _atraso_ms
       _lcd_wr
     _lcd_str
       _lcd_dat
         _atraso_ms
         _lcd_wr
   _partida_andamento
     _lcd_cmd
       _atraso_ms
       _lcd_wr
     _lcd_dat
       _atraso_ms
       _lcd_wr
     _lcd_str
       _lcd_dat
         _atraso_ms
         _lcd_wr
   _pwmFrequency
     ___aldiv
   _pwmInit
   _pwmSet1
     ___lwdiv
     ___wmul
   _rtc_r
     _getd
     _getu
     _i2c_rb
       _delay
     _i2c_start
       _delay
     _i2c_stop
       _delay
     _i2c_wb
       _delay
   _ssdDigit
     ___awdiv (ARG)
     ___awmod (ARG)
       ___awdiv (ARG)
   _ssdInit
     _pinMode
   _ssdUpdate
     _digitalWrite
   _timerInit
   _timerReset
   _timerWait
   _unifeilogo
     _lcd_cmd
       _atraso_ms
       _lcd_wr
     _lcd_dat
       _atraso_ms
       _lcd_wr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      38       7       21.9%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      80       5      100.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     5C      7C       1       97.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     134      15        0.0%
DATA                 0      0     134       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Mon Dec 07 13:50:08 2020

                        l71 6844                          l91 6AEA                          l78 64FC  
              ___awdiv@sign 0006                          _v0 0070                          _v1 006F  
                        _v2 006E                          _v3 006D         ___wmul@multiplicand 0003  
                       l104 6A00                         l120 752C                         l107 6394  
                       l225 60C2                         l314 710E                         l411 5F5C  
                       l235 6D46                         l414 5F86                         l238 6014  
                       l423 640C                         l175 5E6A                         l408 5E4E  
                       l432 5F32                         l280 735C                         l193 6EA0  
                       l417 611E                         l194 6EB8                         l426 62AA  
                       l450 5E80                         l195 6EC0                         l435 5EC4  
                       l453 5E74                         l366 623E                         l198 5E60  
                       l390 5EA2                         l376 6484                         l456 691C  
                       l393 5EB0                         l490 65FE                         l482 616C  
                       l475 5E90                         l483 617A                         l724 6772  
                       l572 6BF6                         l396 5EE6                         l493 5F0C  
                       l469 61DA                         l486 658E                         l478 5EA0  
                       l487 65D6                         l399 5E56                         l488 65EE  
                       l737 66AE                         l991 631E                         l984 6316  
              ___awmod@sign 000E                         wreg 000FE8                        l3000 62E4  
                      l3010 6310                        l3002 62EA                        l3012 6774  
                      l3100 6A32                        l3004 6300                        l3030 67D2  
                      l3022 6790                        l3014 6786                        l3102 6A42  
                      l3006 6308                        l3032 67DE                        l3024 67A2  
                      l3016 678C                        l3120 6A9E                        l3112 6A88  
                      l3104 6A78                        l3200 6340                        l3008 630A  
                      l4000 7D88                        l3050 680A                        l3026 67A4  
                      l3130 6AB4                        l3122 6AA0                        l3106 6A84  
                      l3210 6388                        l3202 6346                        l4010 7DAC  
                      l4002 7D94                        l3140 691E                        l3220 640E  
                      l3060 6822                        l3044 67E6                        l3028 67B4  
                      l3132 6AC6                        l3124 6AB0                        l3212 638E  
                      l3204 6358                        l3300 5E50                        l4020 7DE6  
                      l4004 7D9A                        l4012 7DB4                        l3150 693A  
                      l3142 6930                        l3230 6436                        l3222 641A  
                      l3062 6832                        l3046 67F8                        l3038 67E2  
                      l3214 60C4                        l3134 6AC8                        l3118 6A8C  
                      l3206 635E                        l3302 5E54                        l3070 649E  
                      l4030 7E10                        l4022 7DEC                        l4014 7DC6  
                      l4006 7DA0                        l3160 699A                        l3152 694C  
                      l3144 6936                        l3224 641E                        l3064 6834  
                      l3056 680E                        l3048 67FA                        l3304 6D48  
                      l3216 60C8                        l3136 6AD8                        l3208 637C  
                      l3400 6BF8                        l3080 64BA                        l3072 64A4  
                      l4040 7E3A                        l4032 7E1C                        l4024 7DF8  
                      l4016 7DD8                        l4008 7DA4                        l3154 694E  
                      l3234 644A                        l3242 6456                        l3058 6820  
                      l3322 6D9E                        l3314 6D54                        l3306 6D4C  
                      l3218 60D4                        l3138 6ADA                        l3090 6A1A  
                      l3250 686E                        l3410 6C54                        l3402 6BFC  
                      l3082 64BC                        l3066 6486                        l4050 7E60  
                      l4042 7E40                        l4034 7E22                        l4026 7DFE  
                      l4018 7DE0                        l3500 662C                        l3172 69A2  
                      l3156 695E                        l3228 6432                        l3244 645A  
                      l3340 6E54                        l3332 6DC2                        l3324 6DA2  
                      l3316 6D96                        l3308 6D50                        l3260 6898  
                      l3252 6876                        l3420 6CA8                        l3412 6C66  
                      l3404 6C10                        l3084 64CC                        l3068 648C  
                      l4060 7E88                        l4052 7E66                        l4044 7E46  
                      l4036 7E28                        l4028 7E0A                        l3510 6664  
                      l3502 6634                        l2702 621E                        l2710 5E4A  
                      l3190 69EE                        l3174 69B4                        l3166 699E  
                      l3158 698E                        l3238 6450                        l3350 6E94  
                      l3342 6E64                        l3334 6DEE                        l3326 6DBE  
                      l3086 6A02                        l3270 68C0                        l3262 68A0  
                      l3254 687E                        l3246 6846                        l4150 6D20  
                      l3430 6CF0                        l3422 6CB0                        l3414 6C7A  
                      l3406 6C24                        l3078 64A8                        l4054 7E72  
                      l4046 7E4E                        l4038 7E2E                        l3520 669E  
                      l3512 667A                        l3504 6646                        l2720 5F76  
                      l2712 5F60                        l3192 69F0                        l3184 69CA  
                      l3176 69B6                        l3352 6E98                        l3344 6E66  
                      l3336 6E1E                        l3096 6A1E                        l3088 6A14  
                      l3280 6900                        l3272 68CA                        l3264 68AA  
                      l3256 688C                        l3248 686A                        l3360 606E  
                      l2800 724E                        l3432 6D04                        l3424 6CC2  
                      l3416 6C82                        l3408 6C38                        l4056 7E78  
                      l4048 7E5A                        l3600 74CC                        l3450 66C2  
                      l3522 66A6                        l3514 6682                        l3506 664E  
                      l2706 6224                        l2722 5F78                        l2714 5F62  
                      l3186 69DC                        l3178 69C6                        l3354 6EB0  
                      l3346 6E76                        l3338 6E52                        l3098 6A30  
                      l3194 6322                        l3290 5EB6                        l3282 6904  
                      l3274 68D2                        l3266 68B2                        l3258 6890  
                      l3370 60A8                        l3362 607E                        l2810 72E8  
                      l2802 7270                        l3426 6CD6                        l3418 6C94  
                      l4058 7E84                        l3602 74D0                        l3530 73B2  
                      l3460 66E8                        l3452 66CA                        l3516 6688  
                      l3508 6656                        l2708 6228                        l2724 5F84  
                      l2716 5F68                        l3188 69DE                        l3356 6EBC  
                      l3348 6E8E                        l3196 632E                        l3292 5EBA  
                      l2740 61A0                        l2732 6184                        l2900 6584  
                      l3284 690C                        l3276 68DA                        l3268 68BA  
                      l3372 60AC                        l3364 6082                        l2820 6EDE  
                      l2812 7304                        l2804 728C                        l3428 6CDE  
                      l3380 5ED4                        l3444 5EA2                        l3620 7558  
                      l3612 7534                        l3604 74E2                        l3540 73E2  
                      l3532 73B8                        l3470 6720                        l3462 66F0  
                      l3454 66CE                        l3446 66B0                        l3518 668E  
                      l2718 5F6A                        l3358 5E62                        l3198 633A  
                      l3390 6260                        l2734 6188                        l2726 617C  
                      l2910 6590                        l2902 6586                        l3286 6914  
                      l3278 68E4                        l3374 60BE                        l3366 6092  
                      l2830 6F60                        l2822 6EF0                        l3294 5FC0  
                      l2814 731E                        l2806 72A6                        l3438 6D0C  
                      l3382 5EDC                        l3710 77E2                        l3702 77C4  
                      l3614 7540                        l3606 7514                        l3550 7404  
                      l3542 73E8                        l3534 73C4                        l3526 735E  
                      l3480 674C                        l3472 6726                        l3464 6702  
                      l3456 66DC                        l3448 66B4                        l2760 5F3E  
                      l3288 5EB2                        l3392 627C                        l2744 61B4  
                      l2752 61C0                        l2920 65D8                        l2912 6594  
                      l2904 6588                        l3368 6096                        l2840 6FFC  
                      l2832 6F84                        l2824 6F10                        l3296 6010  
                      l2816 733E                        l2808 72C6                        l3384 5EE0  
                      l3376 5EC6                        l3800 7956                        l3712 77E6  
                      l3640 75B0                        l3632 7586                        l3624 756C  
                      l3608 7518                        l3552 7408                        l3544 73EC  
                      l3536 73CA                        l3528 73AE                        l3474 673C  
                      l3466 670A                        l3482 6752                        l3458 66E4  
                      l3490 6600                        l2762 5F40                        l2770 6396  
                      l3298 5E58                        l3394 6284                        l2754 61C4  
                      l2738 619C                        l2930 65FC                        l2922 65E8  
                      l2914 65C2                        l2850 709A                        l2842 7022  
                      l2834 6FAA                        l2826 6F32                        l2818 6EC2  
                      l3386 5EE4                        l3378 5ED0                        l3802 7968  
                      l3810 7994                        l3730 783A                        l3714 77F2  
                      l3706 77DC                        l3722 7812                        l3650 75F2  
                      l3642 75B4                        l3634 758A                        l3626 7574  
                      l3618 754C                        l3570 745E                        l3562 7434  
                      l3546 73F0                        l3538 73D6                        l3484 6762  
                      l3476 6744                        l3468 6712                        l3492 6604  
                      l2692 6200                        l2684 61DC                        l2764 5F4C  
                      l2756 5F36                        l2772 639E                        l2940 5EE8  
                      l3396 629C                        l3388 6242                        l2748 61BA  
                      l2924 65F0                        l2916 65C4                        l2852 70B6  
                      l2844 703E                        l2836 6FC6                        l2828 6F4E  
                      l2780 712C                        l3900 7B1A                        l3820 79DA  
                      l3812 79A6                        l3804 797A                        l3740 7864  
                      l3732 7846                        l3724 781E                        l3716 77FA  
                      l3708 77DE                        l3660 76CC                        l3652 762E  
                      l3644 75CA                        l3636 7592                        l3628 7580  
                      l3580 7476                        l3564 7438                        l3556 741C  
                      l3486 676A                        l3478 6746                        l3494 6612  
                      l2694 6204                        l2686 61E8                        l2766 5F4E  
                      l2758 5F38                        l2774 63CE                        l2942 5F04  
                      l2950 6AFE                        l3398 5F0E                        l2862 5E6E  
                      l2926 65F4                        l2918 65C6                        l2870 5E8A  
                      l2934 5E92                        l2854 70C8                        l2846 7050  
                      l2838 6FD8                        l2790 71B6                        l2782 713E  
                      l3910 7B42                        l3902 7B20                        l3830 7A04  
                      l3822 79E0                        l3814 79B8                        l3806 7982  
                      l3750 7896                        l3742 7876                        l3718 780A  
                      l3670 7730                        l3662 76EA                        l3654 7636  
                      l3646 75D0                        l3638 759E                        l3590 74AA  
                      l3582 7482                        l3574 7464                        l3558 742E  
                      l3496 661A                        l2688 61EC                        l2768 5F5A  
                      l2776 63D0                        l2960 6B34                        l2952 6B0E  
                      l2928 65FA                        l2936 5E96                        l2880 6128  
                      l2872 6122                        l2856 70EC                        l2848 7074  
                      l2792 71D6                        l2784 715E                        l3920 7B5E  
                      l3912 7B44                        l3904 7B22                        l3840 7A2E  
                      l3832 7A10                        l3824 79EC                        l3816 79C8  
                      l3808 7988                        l3760 78B4                        l3752 7898  
                      l3744 787E                        l3736 784C                        l3728 7832  
                      l3680 7772                        l3672 773E                        l3656 7668  
                      l3648 75EA                        l3664 76F2                        l3592 74BC  
                      l3584 7488                        l3568 744C                        l3498 661E  
                      l2698 6218                        l2970 6B7C                        l2962 6B44  
                      l2954 6B12                        l2946 6AEC                        l2858 5E78  
                      l2866 5E82                        l2938 5E9A                        l2890 615C  
                      l2882 6152                        l2874 6124                        l2794 71F8  
                      l2786 7180                        l2778 7110                        l3930 7B7A  
                      l3922 7B64                        l3914 7B4A                        l3906 7B2E  
                      l3850 7A6A                        l3842 7A3A                        l3834 7A16  
                      l3826 79F2                        l3818 79CE                        l3770 78E2  
                      l3754 789E                        l3746 7884                        l3690 7794  
                      l3682 777A                        l3738 7852                        l3674 7746  
                      l3666 76F6                        l3658 769A                        l3594 74C0  
                      l3586 748C                        l3578 746A                        l2980 6BC0  
                      l2972 6B86                        l2964 6B5A                        l2956 6B20  
                      l2948 6AF0                        l2868 5E86                        l2892 616E  
                      l2884 6154                        l2796 7214                        l2788 719C  
                      l3940 7BD2                        l3924 7B6A                        l3916 7B56  
                      l3908 7B30                        l3860 7A8A                        l3852 7A76  
                      l3932 7B80                        l3836 7A1C                        l3828 79FE  
                      l3844 7A40                        l3772 78E6                        l3780 790E  
                      l3764 78C8                        l3756 78A4                        l3748 7890  
                      l3692 779A                        l3684 7780                        l3676 774E  
                      l3668 7712                        l3596 74C4                        l3588 749E  
                      l2974 6BA4                        l2966 6B62                        l2982 6BC6  
                      l2958 6B30                        l2990 62AC                        l2894 6172  
                      l2886 6158                        l2798 722E                        l3950 7C12  
                      l3942 7BE4                        l3934 7B92                        l3926 7B6C  
                      l3918 7B58                        l3870 7AB6                        l3862 7A96  
                      l3854 7A78                        l3846 7A52                        l3838 7A28  
                      l3790 7936                        l3774 78EA                        l3758 78B0  
                      l3694 77A0                        l3686 778C                        l3678 7760  
                      l3598 74C8                        l2984 6BD6                        l2976 6BB4  
                      l2968 6B6E                        l2992 62B4                        l2896 6178  
                      l2888 615A                        l3960 7C3A                        l3952 7C16  
                      l3944 7BEA                        l3936 7BAE                        l3928 7B78  
                      l3880 7AD6                        l3872 7AC2                        l3856 7A7E  
                      l3848 7A64                        l3864 7A9C                        l3792 793E  
                      l3776 78F6                        l3768 78E0                        l3784 7916  
                      l3696 77AC                        l3688 7792                        l2986 6BE6  
                      l2978 6BB6                        l2994 62C6                        l2898 6580  
                      l3962 7C6C                        l3954 7C28                        l3946 7BFC  
                      l3938 7BC0                        l3890 7AFE                        l3882 7AD8  
                      l3874 7AC4                        l3866 7AAE                        l3858 7A84  
                      l3794 794A                        l3786 7922                        l3778 78FE  
                      l3698 77B0                        l3970 7CFC                        l2996 62CE  
                      l3980 7D34                        l3972 7D0E                        l3964 7C9E  
                      l3956 7C2C                        l3948 7C00                        l3892 7B00  
                      l3884 7AE4                        l3876 7ACA                        l3868 7AB0  
                      l2998 62D6                        l3990 7D64                        l3982 7D40  
                      l3974 7D20                        l3966 7CD0                        l3958 7C32  
                      l3894 7B06                        l3886 7AE6                        l3878 7AD0  
                      l3798 7950                        l3992 7D6A                        l3984 7D46  
                      l3976 7D28                        l3968 7CEE                        l3896 7B12  
                      l3888 7AEC                        l3994 7D76                        l3986 7D52  
                      l3978 7D2E                        l3898 7B14                        l3996 7D7C  
                      l3988 7D58                        l3998 7D82                        STR_1 7FBE  
                      STR_2 7FF1                        STR_3 7FEA                        STR_4 7F5F  
                      STR_5 7FE3                        STR_6 7FC8                        STR_7 7FD1  
                      STR_8 7F99                        STR_9 7F8B                        u2100 7304  
                      u2020 7214                        u2004 71C8                        u2101 7300  
                      u2021 7210                        u2005 71C4                        u2110 731E  
                      u2030 722E                        u2014 71E8                        u2111 731A  
                      u2031 722A                        u2015 71E4                        u3000 74E2  
                      u3001 74DE                        u3010 7528                        u3011 7524  
                      u2300 70B6                        u2220 6FC6                        u2204 6F76  
                      u2140 6EDE                        u2124 7330                        u2060 728C  
                      u2044 7240                        u3100 7772                        u3020 7568  
                      u2301 70B2                        u2221 6FC2                        u2205 6F72  
                      u2141 6EDA                        u2125 732C                        u2061 7288  
                      u2045 723C                        u3101 776E                        u3021 7564  
                      u2310 70C8                        u2230 6FD8                        u2214 6F9A  
                      u2150 6EF0                        u2134 7350                        u2070 72A6  
                      u2054 7260                        u3110 77C0                        u3030 75B0  
                      u2311 70C4                        u2231 6FD4                        u2215 6F96  
                      u2151 6EEC                        u2135 734C                        u2071 72A2  
                      u2055 725C                        u3111 77BC                        u3031 75AC  
                      u2400 6AFE                        u3200 7932                        u3120 77D8  
                      u3040 75CA                        u2401 6AFA                        u3201 792E  
                      u3121 77D4                        u3041 75C6                        u2410 6B20  
                      u3210 7968                        u3130 780A                        u3050 75EA  
                      u2411 6B1C                        u3211 7964                        u3131 7806  
                      u3051 75E6                        u2500 67B4                        u2420 6B5A  
                      u2324 70DE                        u2260 703E                        u2244 6FEE  
                      u2180 6F4E                        u2164 6F02                        u2084 72B8  
                      u3300 7B92                        u3220 797A                        u3140 782E  
                      u3060 762E                        u2501 67B0                        u2421 6B56  
                      u2325 70DA                        u2261 703A                        u2245 6FEA  
                      u2181 6F4A                        u2165 6EFE                        u2085 72B4  
                      u3301 7B8E                        u3221 7976                        u3141 782A  
                      u3061 762A                        u2510 680A                        u2430 6B7C  
                      u2350 616C                        u2334 7102                        u2270 7050  
                      u2254 7012                        u2190 6F60                        u2174 6F22  
                      u2094 72D8                        u3310 7BAE                        u3230 79A6  
                      u3150 7864                        u3070 7712                        u2511 6806  
                      u2431 6B78                        u2351 6168                        u2335 70FE  
                      u2271 704C                        u2255 700E                        u2191 6F5C  
                      u2175 6F1E                        u2095 72D4                        u3311 7BAA  
                      u3231 79A2                        u3151 7860                        u3071 770E  
                      u2520 6832                        u2600 6AEA                        u2440 6BA4  
                      u2360 65AC                        u2344 613C                        u3400 7DC6  
                      u3320 7BC0                        u3240 79B8                        u3160 7876  
                      u3080 7730                        u2521 682E                        u2601 6AE6  
                      u2441 6BA0                        u2361 65A4                        u2345 6138  
                      u3401 7DC2                        u3321 7BBC                        u3241 79B4  
                      u3161 7872                        u3081 772C                        u2530 6844  
                      u2450 6BD6                        u3410 7DD8                        u3330 7BD2  
                      u3250 7A52                        u3170 78C4                        u3090 7760  
                      u2611 6928                        u2531 6840                        u2451 6BD2  
                      u3411 7DD4                        u3331 7BCE                        u3251 7A4E  
                      u3171 78C0                        u3091 775C                        u2620 695E  
                      u2460 62C6                        u1900 61DA                        u2380 65D6  
                      u2284 7066                        u3340 7BE4                        u3260 7A64  
                      u3180 78DC                        u2621 695A                        u2461 62C2  
                      u1901 61D6                        u2381 65D2                        u2285 7062  
                      u2541 6496                        u3341 7BE0                        u3261 7A60  
                      u3181 78D8                        u1910 63CA                        u2630 69C6  
                      u2710 6DBE                        u2470 62E4                        u2390 65E8  
                      u2374 65B8                        u2294 708A                        u2550 64CC  
                      u3350 7BFC                        u3270 7AAE                        u3190 790E  
                      u2631 69C2                        u2711 6DBA                        u2471 62E0  
                      u2391 65E4                        u2375 65B4                        u2295 7086  
                      u2551 64C8                        u3351 7BF8                        u3271 7AAA  
                      u3191 790A                        u1920 63FC                        u2640 69EE  
                      u2704 6D8A                        u2480 6300                        u2368 65AE  
                      u2800 607E                        u3360 7C12                        u3280 7AFE  
                      u2641 69EA                        u2705 6D86                        u2561 6A0C  
                      u2481 62FC                        u2801 607A                        u3361 7C0E  
                      u3281 7AFA                        u1850 61FC                        u1930 640C  
                      u2650 6A00                        u2730 6DEE                        u2570 6A42  
                      u2810 6092                        u3370 7C28                        u3290 7B42  
                      u1851 61F8                        u1931 6408                        u2651 69FC  
                      u2491 677E                        u2731 6DEA                        u2571 6A3E  
                      u2811 608E                        u3371 7C24                        u3291 7B3E  
                      u2900 6762                        u1860 6214                        u2660 642E  
                      u2724 6DD4                        u2580 6AB0                        u2820 60A8  
                      u1940 712C                        u3380 7D0E                        u2901 675E  
                      u1861 6210                        u1917 63C0                        u2661 642A  
                      u2725 6DD0                        u2581 6AAC                        u2821 60A4  
                      u1941 7128                        u3381 7D0A                        u2910 6612  
                      u1870 623E                        u2670 6446                        u2590 6AD8  
                      u2830 60BE                        u1950 713E                        u3390 7D20  
                      u2911 660E                        u1871 623A                        u1927 63F2  
                      u2671 6442                        u2591 6AD4                        u2831 60BA  
                      u1951 713A                        u3391 7D1C                        u2920 662C  
                      u2680 6484                        u2760 6E64                        u2744 6E0C  
                      u1880 6198                        u2840 5EB0                        u2921 6628  
                      u2681 6480                        u2761 6E60                        u2745 6E06  
                      u1881 6194                        u2841 5EAC                        u2850 66C2  
                      u2930 6646                        u2770 6E76                        u2754 6E3C  
                      u1890 61B0                        u2851 66BE                        u2931 6642  
                      u2771 6E72                        u2755 6E36                        u1891 61AC  
                      u2860 66DC                        u2940 6664                        u2780 6E8E  
                      u1980 719C                        u1964 7150                        u2861 66D8  
                      u2941 6660                        u2781 6E8A                        u1981 7198  
                      u1965 714C                        u2870 6702                        u2950 667A  
                      u2790 6EB0                        u2694 6D6A                        u1990 71B6  
                      u1974 7170                        u2871 66FE                        u2951 6676  
                      u2791 6EAC                        u2695 6D66                        u1991 71B2  
                      u1975 716C                        u2880 6720                        u2960 669E  
                      u2881 671C                        u2961 669A                        u2890 673C  
                      u2970 7400                        u2891 6738                        u2971 73FC  
                      u2980 7418                        u2981 7414                        u2990 7448  
                      u2991 7444                        _date 0073                        _getd 5E76  
                      _getu 5E6C                        _main 735E        __size_of_adidas_logo 00E4  
                      _time 005D                        fsr0h 000FEA                        indf0 000FEF  
                      fsr0l 000FE9                        indf2 000FDF                        fsr1l 000FE1  
                      fsr2l 000FD9                        prodh 000FF4                        prodl 000FF3  
                      start 0000                ___param_bank 000000              nike_logo@F2453 0100  
           __end_of___aldiv 6BF8                       ?_getd 0001                       ?_getu 0001  
                     ?_main 0001             __end_of___awdiv 6774                       STR_10 7F7D  
                     STR_11 7F08                       STR_20 7FF6                       STR_12 7F19  
                     STR_21 7FFA                       STR_13 7EDC                       STR_30 7F19  
                     STR_22 7EFE                       STR_14 7EED                       STR_15 7F50  
                     STR_23 7EBA                       STR_31 7EA9                       STR_32 7FA7  
                     STR_16 7F20                       STR_24 7F0F                       STR_33 7F08  
                     STR_17 7F40                       STR_25 7ECB                       STR_34 7F19  
                     STR_18 7FF6                       STR_26 7FDA                       STR_27 7FE3  
                     STR_19 7FFA                       STR_35 7F30                       STR_28 7FB4  
                     STR_36 7F6E             __end_of___awmod 66B0                       STR_29 7F08  
                     _T0CON 000FD5             ___awdiv@divisor 0003             __end_of___lwdiv 6320  
          adidas_logo@F2458 0080             ___awdiv@counter 0005                       _TMR0H 000FD7  
                     _TMR0L 000FD6                       _PORTA 000F80                       _PORTB 000F81  
                     _PORTC 000F82                       _PORTD 000F83                       _PORTE 000F84  
                     _TRISA 000F92                       _TRISB 000F93                       _TRISC 000F94  
                     _TRISD 000F95                       _TRISE 000F96             __end_of_lcd_dat 5F88  
           __end_of_lcd_cmd 5F5E             __end_of_lcd_str 640E           _partida_andamento 6320  
                     _delay 617C                       _linha 7EA5             __end_of_pinMode 7110  
                     _valor 006B                       _rtc_r 6846                       main@i 005C  
                     main@j 004D                       main@k 0055                       main@t 0049  
        ?_partida_andamento 000D                main@tempflag 0058                       tablat 000FF5  
           __end_of_ssdInit 6016             __end_of_pwmSet1 62AC             __end_of_pwmInit 5EC6  
                     plusw1 000FE3                       plusw2 000FDB                       status 000FD8  
       ??_partida_andamento 000F        __end_of_digitalWrite 735E             __initialization 6016  
              __end_of_getd 5E82                __end_of_getu 5E76                __end_of_main 7E94  
          __end_of_i2c_stop 5EA2                      ??_getd 0001                      ??_getu 0001  
                    ??_main 0047               __activetblptr 000002               main@flagfalta 004B  
 __end_of_partida_andamento 6396                      ?_delay 0001            ___awdiv@dividend 0001  
                    ?_rtc_r 0001                      _INTCON 000FF2          __size_of_i2c_start 0010  
                    _i2c_rb 657E                      _i2c_wb 6120            __end_of_lcd_init 6120  
                 ??___aldiv 0009            __end_of_atraso_s 6486                      ___wmul 5EE8  
                 ??___awdiv 0005                   ??___awmod 000D                   ??___lwdiv 0005  
                    _kpInit 5E58                      _kpRead 5E62                      _lcd_wr 5E48  
                    delay@i 0001                      delay@j 0003                      delay@k 0004  
                    clear_0 605C            ___awdiv@quotient 0007             ___awmod@divisor 000B  
                    getd@nn 0001             ___awmod@counter 000D                   ??_lcd_dat 0007  
                    getu@nn 0001                   ??_lcd_cmd 0007           adidas_logo@adidas 000D  
                 ??_lcd_str 000A            __end_of_ssdDigit 60C4                   ??_pinMode 0005  
              __mediumconst 7E94                      tblptrh 000FF7                      tblptrl 000FF6  
                    tblptru 000FF8                   ??_ssdInit 0007                   ??_pwmSet1 0008  
                 ??_pwmInit 0001                  __accesstop 0080     __end_of__initialization 6062  
             ___rparam_used 000001                 pinMode@type 0003              __pcstackCOMRAM 0001  
              __pidataBANK0 64FE                __pidataBANK1 5F88               __end_of_delay 61DC  
             __end_of_linha 7EA9             unifeilogo@F2448 00B0               __end_of_rtc_r 691E  
          main@flagcontrole 0052           __end_of_i2c_start 5E92          __size_of_chevrolet 00D2  
__size_of_partida_andamento 0076                     ??_delay 0001                     ??_rtc_r 000A  
        __size_of_atraso_ms 0064                   ?_i2c_stop 0001       __size_of_digitalWrite 024E  
                   ?_i2c_rb 0001                     ?_i2c_wb 0001          __size_of_nike_logo 00EA  
                   ?___wmul 0001                     ?_kpInit 0001                     ?_kpRead 0001  
                   ?_lcd_wr 0001                  _kpDebounce 6D48          __size_of_timerInit 0008  
        __size_of_timerWait 0010          __size_of_ssdUpdate 0150                _digitalWrite 7110  
                 ?_lcd_init 0001               ??_adidas_logo 000D                   ?_atraso_s 0007  
                   i2c_rb@i 0009                     i2c_wb@i 0008                  ??_i2c_stop 0005  
         __end_of_chevrolet 6846                     __Hparam 0000             __size_of_i2c_rb 0082  
           __size_of_i2c_wb 005C                     __Lparam 0000                   ?_ssdDigit 000F  
           kpDebounce@old_D 0006             kpDebounce@tempo 0072                     ___aldiv 6AEC  
                   ___awdiv 66B0                     ___awmod 6600             __size_of___wmul 0026  
                   ___lwdiv 62AC       partida_andamento@gols 000F           __end_of_atraso_ms 6240  
           __size_of_kpInit 000A             __size_of_kpRead 000A             __size_of_lcd_wr 0008  
               ssdDigit@val 0010                 ssdDigit@pos 000F                     __pcinit 6016  
                   __ramtop 0600                     __ptext0 735E                     __ptext1 6486  
                   __ptext2 5EA2                     __ptext3 5EC6                     __ptext4 5E50  
                   __ptext5 6BF8                     __ptext6 7110                     __ptext7 5FC0  
                   __ptext8 6EC2                     __ptext9 606C                     _lcd_dat 5F5E  
                   _lcd_cmd 5F34                     _display 0071                     _lcd_str 6396  
                   _pinMode 6EC2            ___awmod@dividend 0009            ___aldiv@dividend 0001  
         __end_of_nike_logo 6AEC                     _ssdInit 5FC0                     _pwmSet1 6240  
                   _pwmInit 5EB2                     main@caA 0050                     main@caB 0051  
                   main@cvA 004E                     main@cvB 004F                  ??_lcd_init 0008  
       kpDebounce@valorNovo 0069        end_of_initialization 6062                adidas_logo@i 003E  
              adidas_logo@j 003D                  ??_atraso_s 0009               __Lmediumconst 7E94  
             ?_pwmFrequency 000F         __end_of_adidas_logo 6A02              chevrolet@F2443 00E0  
         __end_of_timerInit 5E58           __end_of_timerWait 5EB2           __end_of_ssdUpdate 6D48  
                ??_ssdDigit 0010                  chevrolet@i 002E                  chevrolet@j 002D  
          ___aldiv@quotient 000B                     postdec1 000FE5                     postinc0 000FEE  
                _timerReset 5EC6                 ?_kpDebounce 0001                   _PORTCbits 000F82  
                 _PORTDbits 000F83                   _PORTEbits 000F84              _valor@ssd$F413 7E95  
                 _TRISCbits 000F94                   _TRISEbits 000F96                  lcd_dat@val 0007  
                lcd_cmd@val 0007                  _unifeilogo 6486          nike_logo@nike_logo 000D  
                 i2c_rb@ack 0007              ??_pwmFrequency 0011                   i2c_rb@ret 0008  
                 i2c_wb@val 0007                  lcd_str@str 0008              __end_of_i2c_rb 6600  
            __end_of_i2c_wb 617C                  atraso_ms@i 0003                  atraso_ms@j 0005  
                atraso_ms@k 0006                  atraso_ms@t 0001              __end_of___wmul 5F0E  
            __end_of_kpInit 5E62              __end_of_kpRead 5E6C              __end_of_lcd_wr 5E50  
    __end_of_valor@ssd$F413 7EA5         start_initialization 6016                   _i2c_start 5E82  
               _adidas_logo 691E                 unifeilogo@i 0038         __size_of_kpDebounce 017A  
         __size_of_i2c_stop 0010                    ??_i2c_rb 0005                    ??_i2c_wb 0005  
                  ??___wmul 0005                    ??_kpInit 0001                    ??_kpRead 0003  
                  ??_lcd_wr 0001                 __pdataBANK0 0080                 __pdataBANK1 0100  
               ?_timerReset 0001                 __pbssCOMRAM 005D                  nike_logo@i 0046  
                nike_logo@j 0045                  pinMode@pin 0001                  ?_i2c_start 0001  
               ?_unifeilogo 0001           __size_of_lcd_init 005C              unifeilogo@logo 0008  
         __size_of_atraso_s 0078            ___lwdiv@dividend 0001                   _chevrolet 6774  
             __pmediumconst 7E94                    ?___aldiv 0001                    ?___awdiv 0001  
                  ?___awmod 0009           __size_of_ssdDigit 0058                    ?___lwdiv 0001  
                  ?_lcd_dat 0001                    ?_lcd_cmd 0001                    ?_lcd_str 0008  
      __end_of_pwmFrequency 5F34                   _atraso_ms 61DC                    ?_pinMode 0001  
                  ?_ssdInit 0001                    ?_pwmSet1 0001                    ?_pwmInit 0001  
          ___lwdiv@quotient 0005              __size_of_delay 0060              __size_of_rtc_r 00D8  
                 _nike_logo 6A02            pwmFrequency@freq 000F             ___aldiv@divisor 0005  
           ___aldiv@counter 0009         __size_of_timerReset 0022              ___wmul@product 0005  
                ?_chevrolet 0001                   _timerInit 5E50                   _timerWait 5EA2  
                 _ssdUpdate 6BF8         __size_of_unifeilogo 0078                  pwmSet1@val 000B  
              ??_kpDebounce 0001           ___wmul@multiplier 0001                  ?_atraso_ms 0001  
     kpDebounce@valorAntigo 0067                   main@gols2 0057                   lcd_wr@val 0001  
                 main@temp1 0047                   main@turno 0054                 ??_i2c_start 0005  
                 atraso_s@i 0009                   atraso_s@j 000B                   atraso_s@k 000C  
                 atraso_s@t 0007            timerReset@ciclos 0003                   copy_data0 602A  
                 copy_data1 604A                  ?_nike_logo 0001                    _i2c_stop 5E92  
        __end_of_kpDebounce 6EC2                    __Hrparam 0000                    __Lrparam 0000  
                ?_timerInit 0001                  ?_timerWait 0001                  ?_ssdUpdate 0001  
          __size_of___aldiv 010C            __size_of___awdiv 00C4            __size_of___awmod 00B0  
          __size_of___lwdiv 0074             pwmSet1@porcento 000A      partida_andamento@gols2 000D  
    partida_andamento@turno 000E            __size_of_lcd_dat 002A            __size_of_lcd_cmd 002A  
          __size_of_lcd_str 0078            __size_of_pinMode 024E             ___lwdiv@divisor 0003  
           ___lwdiv@counter 0007                    __ptext10 6846                    __ptext11 6120  
                  __ptext20 5EB2                    __ptext12 5E92                    __ptext21 5F0E  
                  __ptext13 5E82                    __ptext30 640E                    __ptext22 6AEC  
                  __ptext14 657E                    __ptext31 5EE8                    __ptext23 6320  
                  __ptext15 617C                    __ptext32 691E                    __ptext24 6A02  
                  __ptext16 5E6C                    __ptext33 6396                    __ptext25 60C4  
                  __ptext17 5E76                    __ptext34 5F5E                    __ptext26 5E62  
                  __ptext18 6240                    __ptext35 5F34                    __ptext27 5E58  
                  __ptext19 62AC                    __ptext36 5E48                    __ptext28 6D48  
                  __ptext37 61DC                    __ptext29 6774                    __ptext38 6600  
                  __ptext39 66B0            __size_of_ssdInit 0056            __size_of_pwmSet1 006C  
          __size_of_pwmInit 0014                    _lcd_init 60C4                ?_adidas_logo 0001  
                  _atraso_s 640E               __size_of_getd 000C               __size_of_getu 000A  
             __size_of_main 0B36                    _ssdDigit 606C                 ??_chevrolet 000D  
                 rtc_r@gols 000A       __size_of_pwmFrequency 0026                ??_timerReset 0003  
                  main@cont 005A                    main@gols 0056                    lcd_str@i 000C  
               ??_atraso_ms 0003             timerReset@tempo 0001               ?_digitalWrite 0001  
              ??_unifeilogo 0008                 ??_nike_logo 000D           digitalWrite@value 0003  
        __end_of_timerReset 5EE8                _pwmFrequency 5F0E                 ??_timerInit 0001  
               ??_timerWait 0001                 ??_ssdUpdate 0007          __end_of_unifeilogo 64FE  
               kpDebounce@i 000A                 kpDebounce@j 0009                 kpDebounce@k 0007  
            ??_digitalWrite 0005                ___aldiv@sign 000A             digitalWrite@pin 0001  
  chevrolet@chevrolete_logo 000D  
